{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;\red0\green128\blue0;\red96\green64\blue32;\rede0\green128\blue0;\red128\green0\blue0;\red128\green96\blue32;\red0\green32\blue128;\red0\green128\blue128;\red255\green0\blue255;\red0\green0\blue0;\red112\green0\blue112;\red255\green0\blue0;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext50 Code Example 9;}
{\s50\li3600\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext51 Code Example 10;}
{\s51\li3960\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext52 Code Example 11;}
{\s52\li4320\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 12;}
{\s53\li4680\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext53 Code Example 13;}
{\s60\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext61 List Continue 0;}
{\s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext62 List Continue 1;}
{\s62\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext63 List Continue 2;}
{\s63\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext64 List Continue 3;}
{\s64\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext65 List Continue 4;}
{\s65\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext66 List Continue 5;}
{\s66\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext67 List Continue 6;}
{\s67\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext68 List Continue 7;}
{\s68\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext69 List Continue 8;}
{\s69\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext70 List Continue 9;}
{\s70\li3600\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext71 List Continue 10;}
{\s71\li3960\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext72 List Continue 11;}
{\s72\li4320\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 12;}
{\s73\li4680\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext73 List Continue 13;}
{\s80\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext81 DescContinue 0;}
{\s81\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext82 DescContinue 1;}
{\s82\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext83 DescContinue 2;}
{\s83\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext84 DescContinue 3;}
{\s84\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext85 DescContinue 4;}
{\s85\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext86 DescContinue 5;}
{\s86\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext87 DescContinue 6;}
{\s87\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext88 DescContinue 7;}
{\s88\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext89 DescContinue 8;}
{\s89\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext90 DescContinue 9;}
{\s90\li3600\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext91 DescContinue 10;}
{\s91\li3960\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext92 DescContinue 11;}
{\s92\li4320\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 12;}
{\s93\li4680\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext93 DescContinue 13;}
{\s100\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext101 LatexTOC 0;}
{\s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext102 LatexTOC 1;}
{\s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext103 LatexTOC 2;}
{\s103\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext104 LatexTOC 3;}
{\s104\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext105 LatexTOC 4;}
{\s105\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext106 LatexTOC 5;}
{\s106\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext107 LatexTOC 6;}
{\s107\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext108 LatexTOC 7;}
{\s108\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext109 LatexTOC 8;}
{\s109\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext110 LatexTOC 9;}
{\s110\li3600\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext111 LatexTOC 10;}
{\s111\li3960\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext112 LatexTOC 11;}
{\s112\li4320\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 12;}
{\s113\li4680\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext113 LatexTOC 13;}
{\s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext121 \sautoupd List Bullet 0;}
{\s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext122 \sautoupd List Bullet 1;}
{\s122\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext123 \sautoupd List Bullet 2;}
{\s123\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext124 \sautoupd List Bullet 3;}
{\s124\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext125 \sautoupd List Bullet 4;}
{\s125\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext126 \sautoupd List Bullet 5;}
{\s126\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext127 \sautoupd List Bullet 6;}
{\s127\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext128 \sautoupd List Bullet 7;}
{\s128\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext129 \sautoupd List Bullet 8;}
{\s129\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext130 \sautoupd List Bullet 9;}
{\s130\fi-360\li3960\widctlpar\jclisttab\tx3960{\*\pn \pnlvlbody\ilvl0\ls11\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext131 \sautoupd List Bullet 10;}
{\s131\fi-360\li4320\widctlpar\jclisttab\tx4320{\*\pn \pnlvlbody\ilvl0\ls12\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext132 \sautoupd List Bullet 11;}
{\s132\fi-360\li4680\widctlpar\jclisttab\tx4680{\*\pn \pnlvlbody\ilvl0\ls13\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 12;}
{\s133\fi-360\li5040\widctlpar\jclisttab\tx5040{\*\pn \pnlvlbody\ilvl0\ls14\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext133 \sautoupd List Bullet 13;}
{\s140\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext141 \sautoupd List Enum 0;}
{\s141\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext142 \sautoupd List Enum 1;}
{\s142\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext143 \sautoupd List Enum 2;}
{\s143\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext144 \sautoupd List Enum 3;}
{\s144\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext145 \sautoupd List Enum 4;}
{\s145\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext146 \sautoupd List Enum 5;}
{\s146\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext147 \sautoupd List Enum 6;}
{\s147\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext148 \sautoupd List Enum 7;}
{\s148\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext149 \sautoupd List Enum 8;}
{\s149\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext150 \sautoupd List Enum 9;}
{\s150\fi-360\li3960\widctlpar\fs20\cgrid \sbasedon0 \snext151 \sautoupd List Enum 10;}
{\s151\fi-360\li4320\widctlpar\fs20\cgrid \sbasedon0 \snext152 \sautoupd List Enum 11;}
{\s152\fi-360\li4680\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 12;}
{\s153\fi-360\li5040\widctlpar\fs20\cgrid \sbasedon0 \snext153 \sautoupd List Enum 13;}
}
{\info 
{\title {\comment Documenta\'E7\'E3o Simulador Reservatorio  {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
1.0 \par
}}Documenta\'E7\'E3o Simulador Reservatorio}
{\comment Gerado por doxygen 1.9.5.}
{\creatim \yr2022\mo12\dy1\hr23\min24\sec25}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt Documenta\'E7\'E3o Simulador Reservatorio}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Vers\'E3o 1.0\par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Quinta, 1 de Dezembro de 2022 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice Hier\'E1rquico\par \pard\plain 
{\tc \v \'CDndice Hier\'E1rquico}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Hierarquia de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta lista de hierarquias est\'E1 parcialmente ordenada (ordem alfab\'E9tica):}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CCorey\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CFluxoFracionario\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CLinhasEquipotenciais\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CLinhaPressao2Pocos\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CLinhaPressao3Pocos1P2I\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CLinhaPressao3Pocos2P1I\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
COleoProduzido\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPoco\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPosicaoAguaInjetada\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CPosicaoAguaInjetadaDykstra\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CPosicaoAguaInjetadaStiles\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CReservatorio\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
CReservatorioCamadas\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CSolverInfluxo\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Gnuplot\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
std::runtime_error
{
\par
\pard\plain \s102\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
GnuplotException\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAON \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Componentes\par \pard\plain 
{\tc \v \'CDndice dos Componentes}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Classes\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Aqui est\'E3o as classes, estruturas, uni\'F5es e interfaces e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CCorey} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CFluxoFracionario} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CLinhaPressao2Pocos} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CLinhaPressao3Pocos1P2I} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CLinhaPressao3Pocos2P1I} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CLinhasEquipotenciais} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b COleoProduzido} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPoco} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAER \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPosicaoAguaInjetada} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPosicaoAguaInjetadaDykstra} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CPosicaoAguaInjetadaStiles} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CReservatorio} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CReservatorioCamadas} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAHN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CSolverInfluxo} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Gnuplot} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAJW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b GnuplotException} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAON \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\'CDndice dos Arquivos\par \pard\plain 
{\tc \v \'CDndice dos Arquivos}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Lista de Arquivos\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Esta \'E9 a lista de todos os arquivos e suas respectivas descri\'E7\'F5es:}
{
\par
\pard\plain \s101\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b CODIGO/{\b CCorey.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CCorey.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CFluxoFracionario.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CFluxoFracionario.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CGnuplot.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CGnuplot.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhaPressao2Pocos.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhaPressao2Pocos.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhaPressao3Pocos1P2I.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhaPressao3Pocos1P2I.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhaPressao3Pocos2P1I.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhaPressao3Pocos2P1I.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhasEquipotenciais.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CLinhasEquipotenciais.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b COleoProduzido.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b COleoProduzido.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABG \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPoco.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPoco.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPosicaoAguaInjetada.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPosicaoAguaInjetada.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPosicaoAguaInjetadaDykstra.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPosicaoAguaInjetadaDykstra.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPosicaoAguaInjetadaStiles.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CPosicaoAguaInjetadaStiles.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CReservatorio.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CReservatorio.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CReservatorioCamadas.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CReservatorioCamadas.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CSolverInfluxo.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b CSolverInfluxo.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABU \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b CODIGO/{\b main.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAABV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Classes{\tc \v Classes}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CCorey\par \pard\plain 
{\tc\tcl2 \v CCorey}
{\xe \v CCorey}
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
\par
{
{\f2 #include <CCorey.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CCorey} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcSwn} (double _swi, double _sor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcKro} (std::vector< double > _sw)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcKrw} (std::vector< double > _sw)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setK0rw} (double _K0rw)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setK0ro} (double _K0ro)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNo} (double _No)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setNw} (double _Nw)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b getSw} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b getKro} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b getKrw} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CCorey} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b sw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b kro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b krw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b K0rw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b K0ro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b No}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Nw}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CCorey\:CCorey}
{\xe \v CCorey\:CCorey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CCorey::CCorey (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15 \{\};\par
}
}
{\xe \v ~CCorey\:CCorey}
{\xe \v CCorey\:~CCorey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CCorey::~CCorey (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v calcKro\:CCorey}
{\xe \v CCorey\:calcKro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CCorey::calcKro (std::vector< double >  {\i _sw})}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14                                          \{\par
15     \par
16     {\cf19 for}({\cf18 double} sw:_sw)\par
17         kro.push_back(K0ro*pow(1 - sw, No));\par
18     \par
19 \}\par
}
}
{\xe \v calcKrw\:CCorey}
{\xe \v CCorey\:calcKrw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CCorey::calcKrw (std::vector< double >  {\i _sw})}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                                          \{\par
22     \par
23     {\cf19 for}({\cf18 double} sw:_sw)\par
24         krw.push_back(K0rw*pow(sw, Nw));\par
25     \par
26 \}\par
}
}
{\xe \v calcSwn\:CCorey}
{\xe \v CCorey\:calcSwn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CCorey::calcSwn (double  {\i _swi}, double  {\i _sor})}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5                                             \{\par
6     {\cf18 double} a;\par
7     {\cf19 for} ({\cf18 double} i = _swi; i <=(1.0 - _sor)+.01; i+= .01)\{\par
8         a = (i - _swi)/(1.0 - _swi - _sor);\par
9         sw.push_back(a);    \par
10     \}\par
11     \par
12 \}\par
}
}
{\xe \v getKro\:CCorey}
{\xe \v CCorey\:getKro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CCorey::getKro ()}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58                                 \{\par
59     \par
60     {\cf19 return} kro;\par
61     \par
62 \}\par
}
}
{\xe \v getKrw\:CCorey}
{\xe \v CCorey\:getKrw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CCorey::getKrw ()}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 64                                 \{\par
65     \par
66     {\cf19 return} krw;\par
67     \par
68 \}\par
}
}
{\xe \v getSw\:CCorey}
{\xe \v CCorey\:getSw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CCorey::getSw ()}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52                                \{\par
53     \par
54     {\cf19 return} sw;\par
55     \par
56 \}\par
}
}
{\xe \v setK0ro\:CCorey}
{\xe \v CCorey\:setK0ro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CCorey::setK0ro (double  {\i _K0ro})}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34                                 \{\par
35     \par
36     K0ro = _K0ro;\par
37     \par
38 \}\par
}
}
{\xe \v setK0rw\:CCorey}
{\xe \v CCorey\:setK0rw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CCorey::setK0rw (double  {\i _K0rw})}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 28                                 \{\par
29     \par
30     K0rw = _K0rw;\par
31     \par
32 \}\par
}
}
{\xe \v setNo\:CCorey}
{\xe \v CCorey\:setNo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CCorey::setNo (double  {\i _No})}}
\par
{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 40                             \{\par
41     \par
42     No = _No;\par
43     \par
44 \}\par
}
}
{\xe \v setNw\:CCorey}
{\xe \v CCorey\:setNw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CCorey::setNw (double  {\i _Nw})}}
\par
{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46                             \{\par
47     \par
48     Nw = _Nw;\par
49     \par
50 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v K0ro\:CCorey}
{\xe \v CCorey\:K0ro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CCorey::K0ro{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v K0rw\:CCorey}
{\xe \v CCorey\:K0rw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CCorey::K0rw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v kro\:CCorey}
{\xe \v CCorey\:kro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CCorey::kro{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v krw\:CCorey}
{\xe \v CCorey\:krw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CCorey::krw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v No\:CCorey}
{\xe \v CCorey\:No}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CCorey::No{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Nw\:CCorey}
{\xe \v CCorey\:Nw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CCorey::Nw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sw\:CCorey}
{\xe \v CCorey\:sw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CCorey::sw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CCorey.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CCorey.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CFluxoFracionario\par \pard\plain 
{\tc\tcl2 \v CFluxoFracionario}
{\xe \v CFluxoFracionario}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
{\f2 #include <CFluxoFracionario.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CFluxoFracionario} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcFluxoFracionarioAgua} (std::vector< double > _krw, std::vector< double > _kro, double miw, double mio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcFluxoFracionarioOleo} (std::vector< double > _krw, std::vector< double > _kro, double miw, double mio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b getFluxoFracionarioAgua} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b getFluxoFracionarioOleo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CFluxoFracionario} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b Frw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b Fro}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CFluxoFracionario\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:CFluxoFracionario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CFluxoFracionario::CFluxoFracionario (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 \{\};\par
}
}
{\xe \v ~CFluxoFracionario\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:~CFluxoFracionario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CFluxoFracionario::~CFluxoFracionario (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v calcFluxoFracionarioAgua\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:calcFluxoFracionarioAgua}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CFluxoFracionario::calcFluxoFracionarioAgua (std::vector< double >  {\i _krw}, std::vector< double >  {\i _kro}, double  {\i miw}, double  {\i mio})}}
\par
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                                                                                                                       \{\par
4     \par
5     {\cf18 double} a;\par
6     \par
7     {\cf19 for}({\cf18 int} i =0; i<_krw.size();i++)\{\par
8         a = (_krw[i]/miw)/((_krw[i]/miw)+(_kro[i]/mio));\par
9         Frw.push_back(a);           \par
10     \}   \par
11 \}\par
}
}
{\xe \v calcFluxoFracionarioOleo\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:calcFluxoFracionarioOleo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CFluxoFracionario::calcFluxoFracionarioOleo (std::vector< double >  {\i _krw}, std::vector< double >  {\i _kro}, double  {\i miw}, double  {\i mio})}}
\par
{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13                                                                                                                       \{\par
14     \par
15     {\cf18 double} a;\par
16     \par
17     {\cf19 for}({\cf18 int} i =0; i<_krw.size();i++)\{\par
18         a = (_kro[i]/mio)/((_krw[i]/miw)+(_kro[i]/mio));\par
19         Fro.push_back(a);           \par
20     \}   \par
21     \par
22 \}\par
}
}
{\xe \v getFluxoFracionarioAgua\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:getFluxoFracionarioAgua}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CFluxoFracionario::getFluxoFracionarioAgua ()}}
\par
{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24                                                             \{\par
25     \par
26     {\cf19 return} Frw;\par
27     \par
28 \}\par
}
}
{\xe \v getFluxoFracionarioOleo\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:getFluxoFracionarioOleo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CFluxoFracionario::getFluxoFracionarioOleo ()}}
\par
{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 30                                                             \{\par
31     \par
32     {\cf19 return} Fro;\par
33     \par
34 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v Fro\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:Fro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CFluxoFracionario::Fro{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Frw\:CFluxoFracionario}
{\xe \v CFluxoFracionario\:Frw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CFluxoFracionario::Frw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CFluxoFracionario.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CFluxoFracionario.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CLinhaPressao2Pocos\par \pard\plain 
{\tc\tcl2 \v CLinhaPressao2Pocos}
{\xe \v CLinhaPressao2Pocos}
{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\par
{
{\f2 #include <CLinhaPressao2Pocos.h>}}\par
Diagrama de hierarquia para CLinhaPressao2Pocos:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_linha_pressao2_pocos.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLinhaPressao2Pocos} (double _r1, double _r2, double _r3)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
metodos especificos \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b AreaInvadidaBT} (double C)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Pressao} (double q, double u, double k, double h, double Pi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b R} (double C)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorX} (double {\b R}, double C=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorY} (double {\b R}, double C=0.0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CLinhaPressao2Pocos\:CLinhaPressao2Pocos}
{\xe \v CLinhaPressao2Pocos\:CLinhaPressao2Pocos}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLinhaPressao2Pocos::CLinhaPressao2Pocos (double  {\i _r1}, double  {\i _r2}, double  {\i _r3}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
metodos especificos \par
 }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 : r1\{ _r1 \}, r2\{ _r2 \}, r3\{ _r3 \}\{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v AreaInvadidaBT\:CLinhaPressao2Pocos}
{\xe \v CLinhaPressao2Pocos\:AreaInvadidaBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao2Pocos::AreaInvadidaBT (double  {\i C}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                                                   \{\par
4     {\cf19 return} pow((4.0*pi*C),2)/3.0;\par
5 \}\par
}
}
{\xe \v CalculoDoVetorX\:CLinhaPressao2Pocos}
{\xe \v CLinhaPressao2Pocos\:CalculoDoVetorX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao2Pocos::CalculoDoVetorX (double  {\i R}, double  {\i C} = {\f2 0.0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                                                                      \{\par
16     {\cf18 double} x0 = X0(C,R);\par
17     {\cf18 int} i;\par
18     vector<double> xplot;\par
19     {\cf19 for} ({\cf18 double} theta = 0; theta <= 2 * pi; theta = theta + 0.01) \{\par
20         i = theta * 100;\par
21         xplot.push_back(x0 + (2 * (C)*sqrt(R) / (R - 1)) * cos(theta));\par
22     \}\par
23     {\cf19 return} xplot;\par
24 \}\par
}
}
{\xe \v CalculoDoVetorY\:CLinhaPressao2Pocos}
{\xe \v CLinhaPressao2Pocos\:CalculoDoVetorY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao2Pocos::CalculoDoVetorY (double  {\i R}, double  {\i C} = {\f2 0.0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                                      \{\par
27     {\cf18 double} y0 = 0;\par
28     {\cf18 int} i;\par
29     vector<double> yplot;\par
30 \par
31     {\cf19 for} ({\cf18 double} theta = 0; theta <= 2 * pi; theta = theta + 0.01) \{\par
32         i = theta * 100;\par
33         yplot.push_back(y0 + (2 * (C)*sqrt(R) / (R - 1)) * sin(theta));\par
34     \}\par
35     {\cf19 return} yplot;\par
36 \}\par
}
}
{\xe \v Pressao\:CLinhaPressao2Pocos}
{\xe \v CLinhaPressao2Pocos\:Pressao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao2Pocos::Pressao (double  {\i q}, double  {\i u}, double  {\i k}, double  {\i h}, double  {\i Pi}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                                                  \{\par
8     {\cf19 return} ((q*u*log(r2/r1))/(2.0*pi*k*h) )+ Pi;\par
9 \}\par
}
}
{\xe \v R\:CLinhaPressao2Pocos}
{\xe \v CLinhaPressao2Pocos\:R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao2Pocos::R (double  {\i C}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                        \{\par
12     {\cf19 return} (r2/r1)*(r2/r1);\par
13 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CLinhaPressao2Pocos.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CLinhaPressao2Pocos.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CLinhaPressao3Pocos1P2I\par \pard\plain 
{\tc\tcl2 \v CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
{
{\f2 #include <CLinhaPressao3Pocos1P2I.h>}}\par
Diagrama de hierarquia para CLinhaPressao3Pocos1P2I:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_linha_pressao3_pocos1_p2_i.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLinhaPressao3Pocos1P2I} (double _r1, double _r2, double _r3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b AreaInvadidaBT} (double C)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Pressao} (double q, double u, double k, double h, double Pi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b R} (double C)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorRaio} (double C)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorX} (double {\b R}, double C=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorY} (double {\b R}, double C=0.0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b r1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b r2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b r3}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CLinhaPressao3Pocos1P2I\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:CLinhaPressao3Pocos1P2I}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLinhaPressao3Pocos1P2I::CLinhaPressao3Pocos1P2I (double  {\i _r1}, double  {\i _r2}, double  {\i _r3}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 : r1\{ _r1 \}, r2\{ _r2 \}, r3\{ _r3 \}\{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v AreaInvadidaBT\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:AreaInvadidaBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos1P2I::AreaInvadidaBT (double  {\i C}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                                                       \{\par
4     {\cf19 return} 2*pi*C*C;\par
5 \}\par
}
}
{\xe \v CalculoDoVetorRaio\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:CalculoDoVetorRaio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao3Pocos1P2I::CalculoDoVetorRaio (double  {\i C})}}
\par
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                                    \{\par
18      {\cf18 double} r = R( C );\par
19      vector<double> raio;\par
20      {\cf19 for} ({\cf18 double} theta = 0;theta <= 2*pi; theta=theta + 0.01 )\{\par
21         raio.push_back(sqrt((-cos(2*theta)*r+sqrt((r*r*cos(2*theta))*(r*r*cos(2*theta)) + 2*C*C*r))/2 ));\par
22         \}\par
23   {\cf19 return} raio;\par
24 \}\par
}
}
{\xe \v CalculoDoVetorX\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:CalculoDoVetorX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao3Pocos1P2I::CalculoDoVetorX (double  {\i R}, double  {\i C} = {\f2 0.0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                                           \{\par
27     {\cf18 double} x0 = 0.0;\par
28     {\cf18 int} i;\par
29     vector<double> xplot;\par
30     vector<double> raio = CalculoDoVetorRaio(C);\par
31 \par
32     {\cf19 for} ({\cf18 double} theta = 0; theta <= 2 * pi; theta = theta + 0.01) \{\par
33         i = theta * 100;\par
34         xplot.push_back(x0 + raio[i] * cos(theta));\par
35     \}\par
36     {\cf19 return} xplot;\par
37 \}\par
}
}
{\xe \v CalculoDoVetorY\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:CalculoDoVetorY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao3Pocos1P2I::CalculoDoVetorY (double  {\i R}, double  {\i C} = {\f2 0.0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                                                           \{\par
40     {\cf18 double} y0 = 0.0;\par
41     {\cf18 int} i;\par
42     vector<double> yplot;\par
43     vector<double> raio = CalculoDoVetorRaio(C);\par
44 \par
45     {\cf19 for} ({\cf18 double} theta = 0; theta <= 2 * pi; theta = theta + 0.01) \{\par
46         i = theta * 100;\par
47         yplot.push_back(y0 + raio[i] * sin(theta));\par
48     \}\par
49     {\cf19 return} yplot;\par
50 \}\par
}
}
{\xe \v Pressao\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:Pressao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos1P2I::Pressao (double  {\i q}, double  {\i u}, double  {\i k}, double  {\i h}, double  {\i Pi}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                                                      \{\par
8     {\cf19 return} -(q*u/4*(log(r1*r1*r2*r2/(r3*r3*r3*r3)))/(2*pi*k*h)) + Pi;\par
9 \}\par
}
}
{\xe \v R\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos1P2I::R (double  {\i C}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                          \{\par
12     {\cf18 double} r= pow(r1*r2,2)/pow(r3,4);\par
13     r = 2*C*C /(r-1);\par
14     {\cf19 return} r;\par
15 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v r1\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:r1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos1P2I::r1{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v r2\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:r2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos1P2I::r2{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v r3\:CLinhaPressao3Pocos1P2I}
{\xe \v CLinhaPressao3Pocos1P2I\:r3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos1P2I::r3{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CLinhaPressao3Pocos1P2I.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CLinhaPressao3Pocos1P2I.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CLinhaPressao3Pocos2P1I\par \pard\plain 
{\tc\tcl2 \v CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I}
{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\par
{
{\f2 #include <CLinhaPressao3Pocos2P1I.h>}}\par
Diagrama de hierarquia para CLinhaPressao3Pocos2P1I:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_linha_pressao3_pocos2_p1_i.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLinhaPressao3Pocos2P1I} (double _r1, double _r2, double _r3)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b AreaInvadidaBT} (double C)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
metodos especificos \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Pressao} (double q, double u, double k, double h, double Pi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b R} (double C)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorRaio} (double C)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorX} (double {\b R}, double C=0.0)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
vector< double > {\b CalculoDoVetorY} (double {\b R}, double C=0.0)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Outros membros herdados\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CLinhaPressao3Pocos2P1I\:CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I\:CLinhaPressao3Pocos2P1I}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CLinhaPressao3Pocos2P1I::CLinhaPressao3Pocos2P1I (double  {\i _r1}, double  {\i _r2}, double  {\i _r3}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11 : r1\{ _r1 \}, r2\{ _r2 \}, r3\{ _r3 \}\{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v AreaInvadidaBT\:CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I\:AreaInvadidaBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos2P1I::AreaInvadidaBT (double  {\i C}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
metodos especificos \par
 }}\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                                                       \{\par
4     {\cf19 return} 2*pi*C*C;\par
5 \}\par
}
}
{\xe \v CalculoDoVetorRaio\:CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I\:CalculoDoVetorRaio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao3Pocos2P1I::CalculoDoVetorRaio (double  {\i C})}}
\par
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17                                                                    \{\par
18    {\cf18 double} r = R( C);\par
19    vector<double> raio;\par
20     {\cf19 for} ({\cf18 double} theta = 0;theta <= 2*pi; theta=theta + 0.01 )\{\par
21         raio.push_back(sqrt((cos(2*theta)*r + sqrt(pow(r*r*cos(2*theta),2 ) - (4*C*C*r)/2))/2));        \par
22         \}\par
23   {\cf19 return} raio;\par
24 \}\par
}
}
{\xe \v CalculoDoVetorX\:CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I\:CalculoDoVetorX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao3Pocos2P1I::CalculoDoVetorX (double  {\i R}, double  {\i C} = {\f2 0.0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADF \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 26                                                                           \{\par
27     {\cf18 double} x0 = 0;\par
28     {\cf18 int} i;\par
29     vector<double> xplot;\par
30     vector<double> raio = CalculoDoVetorRaio(C);\par
31 \par
32     {\cf19 for} ({\cf18 double} theta = 0; theta <= 2 * pi; theta = theta + 0.01) \{\par
33         i = theta * 100;\par
34         xplot.push_back(x0 + raio[i] * cos(theta));\par
35     \}\par
36     {\cf19 return} xplot;\par
37 \}\par
}
}
{\xe \v CalculoDoVetorY\:CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I\:CalculoDoVetorY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CLinhaPressao3Pocos2P1I::CalculoDoVetorY (double  {\i R}, double  {\i C} = {\f2 0.0}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                                                                           \{\par
40     {\cf18 double} y0 = 0;\par
41     {\cf18 int} i;\par
42     vector<double> yplot;\par
43     vector<double> raio = CalculoDoVetorRaio(C);\par
44 \par
45     {\cf19 for} ({\cf18 double} theta = 0; theta <= 2 * pi; theta = theta + 0.01) \{\par
46         i = theta * 100;\par
47         yplot.push_back(y0 + raio[i] * sin(theta));\par
48     \}\par
49     {\cf19 return} yplot;\par
50 \}\par
}
}
{\xe \v Pressao\:CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I\:Pressao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos2P1I::Pressao (double  {\i q}, double  {\i u}, double  {\i k}, double  {\i h}, double  {\i Pi}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADJ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 7                                                                                     \{\par
8     {\cf19 return} -(q*u*log(pow(r3,4)/(pow(r1,2)*pow(r2,2))))/(8*pi*k*h) + Pi;\par
9 \}\par
}
}
{\xe \v R\:CLinhaPressao3Pocos2P1I}
{\xe \v CLinhaPressao3Pocos2P1I\:R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhaPressao3Pocos2P1I::R (double  {\i C}){\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementa {\b CLinhasEquipotenciais} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADL \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11                                          \{\par
12     {\cf18 double} r= (r3*r3*r3*r3)/(r1*r1*r2*r2);\par
13     r=(2*r* pow(C,2))/(r-1);\par
14     {\cf19 return} r;\par
15 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CLinhaPressao3Pocos2P1I.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CLinhaPressao3Pocos2P1I.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CLinhasEquipotenciais\par \pard\plain 
{\tc\tcl2 \v CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais}
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
\par
{
{\f2 #include <CLinhasEquipotenciais.h>}}\par
Diagrama de hierarquia para CLinhasEquipotenciais:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_linhas_equipotenciais.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b AreaInvadidaBT} (double C)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b Pressao} (double q, double u, double k, double h, double Pi)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual double {\b R} (double C)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual vector< double > {\b CalculoDoVetorX} (double raio, double deslocamento=0.0)=0\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual vector< double > {\b CalculoDoVetorY} (double raio, double deslocamento=0.0)=0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const double {\b pi} = 3.14159265\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b r1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b r2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b r3}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v AreaInvadidaBT\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:AreaInvadidaBT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double CLinhasEquipotenciais::AreaInvadidaBT (double  {\i C}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b CLinhaPressao2Pocos} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADC \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CLinhaPressao3Pocos1P2I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADO \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b CLinhaPressao3Pocos2P1I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADZ \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CalculoDoVetorX\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:CalculoDoVetorX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual vector< double > CLinhasEquipotenciais::CalculoDoVetorX (double  {\i raio}, double  {\i deslocamento} = {\f2 0.0}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b CLinhaPressao2Pocos} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADE \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CLinhaPressao3Pocos1P2I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADQ \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b CLinhaPressao3Pocos2P1I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v CalculoDoVetorY\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:CalculoDoVetorY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual vector< double > CLinhasEquipotenciais::CalculoDoVetorY (double  {\i raio}, double  {\i deslocamento} = {\f2 0.0}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b CLinhaPressao2Pocos} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADG \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CLinhaPressao3Pocos1P2I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADR \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b CLinhaPressao3Pocos2P1I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEC \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v Pressao\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:Pressao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double CLinhasEquipotenciais::Pressao (double  {\i q}, double  {\i u}, double  {\i k}, double  {\i h}, double  {\i Pi}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b CLinhaPressao2Pocos} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADI \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CLinhaPressao3Pocos1P2I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADS \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b CLinhaPressao3Pocos2P1I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\xe \v R\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:R}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual double CLinhasEquipotenciais::R (double  {\i C}){\f2 [pure virtual]}}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Implementado por {\b CLinhaPressao2Pocos} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b CLinhaPressao3Pocos1P2I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAADT \\*MERGEFORMAT}{\fldrslt pagenum}}}) e {\b CLinhaPressao3Pocos2P1I} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v pi\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:pi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const double CLinhasEquipotenciais::pi = 3.14159265{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v r1\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:r1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhasEquipotenciais::r1{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v r2\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:r2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhasEquipotenciais::r2{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v r3\:CLinhasEquipotenciais}
{\xe \v CLinhasEquipotenciais\:r3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CLinhasEquipotenciais::r3{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CLinhasEquipotenciais.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe COleoProduzido\par \pard\plain 
{\tc\tcl2 \v COleoProduzido}
{\xe \v COleoProduzido}
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
\par
{
{\f2 #include <COleoProduzido.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COleoProduzido} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b OleoProduzido} (double _largura, double _comprimento, double _PHI, double _espessuraTotal, double _Sor, double _Swi, double _effVertTotal, double _Bo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b TempoBreakThrough} (double _VazaoTotal)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getNp} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getTbreak} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~COleoProduzido} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v COleoProduzido\:COleoProduzido}
{\xe \v COleoProduzido\:COleoProduzido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
COleoProduzido::COleoProduzido (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10 \{\};\par
}
}
{\xe \v ~COleoProduzido\:COleoProduzido}
{\xe \v COleoProduzido\:~COleoProduzido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
COleoProduzido::~COleoProduzido (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 17 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v getNp\:COleoProduzido}
{\xe \v COleoProduzido\:getNp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COleoProduzido::getNp ()}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21 \{\par
22     {\cf19 return} Np;\par
23 \}\par
}
}
{\xe \v getTbreak\:COleoProduzido}
{\xe \v COleoProduzido\:getTbreak}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double COleoProduzido::getTbreak ()}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 \{\par
17     {\cf19 return} Tbreak;\par
18 \}\par
}
}
{\xe \v OleoProduzido\:COleoProduzido}
{\xe \v COleoProduzido\:OleoProduzido}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void COleoProduzido::OleoProduzido (double  {\i _largura}, double  {\i _comprimento}, double  {\i _PHI}, double  {\i _espessuraTotal}, double  {\i _Sor}, double  {\i _Swi}, double  {\i _effVertTotal}, double  {\i _Bo})}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 \{\par
5 \par
6     Np = (_largura*_comprimento*_PHI*_espessuraTotal*_effVertTotal*(1.0 - _Sor - _Swi))/_Bo;\par
7 \par
8 \}\par
}
}
{\xe \v TempoBreakThrough\:COleoProduzido}
{\xe \v COleoProduzido\:TempoBreakThrough}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void COleoProduzido::TempoBreakThrough (double  {\i _VazaoTotal})}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11 \{\par
12     Tbreak = Np/_VazaoTotal;\par
13 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b COleoProduzido.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b COleoProduzido.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CPoco\par \pard\plain 
{\tc\tcl2 \v CPoco}
{\xe \v CPoco}
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
\par
{
{\f2 #include <CPoco.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoco} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoco} (double _x, double _y, double _c, double _Pi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setX} (double _x)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setY} (double _y)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setC} (double _c)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setPi} (double _pi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getX} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getY} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getC} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b getPi} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPoco} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b x}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b y}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b c}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b Pi}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CPoco\:CPoco}
{\xe \v CPoco\:CPoco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPoco::CPoco (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\};\par
}
}
{\xe \v CPoco\:CPoco}
{\xe \v CPoco\:CPoco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPoco::CPoco (double  {\i _x}, double  {\i _y}, double  {\i _c}, double  {\i _Pi}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 : x(_x), y(_y), c(_c), Pi(_Pi)\{\};\par
}
}
{\xe \v ~CPoco\:CPoco}
{\xe \v CPoco\:~CPoco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPoco::~CPoco (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 29 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v getC\:CPoco}
{\xe \v CPoco\:getC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::getC ()}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39                   \{\par
40     \par
41     {\cf19 return} c;\par
42     \par
43 \}\par
}
}
{\xe \v getPi\:CPoco}
{\xe \v CPoco\:getPi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::getPi ()}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 45                    \{\par
46     \par
47     {\cf19 return} Pi;\par
48     \par
49 \}\par
}
}
{\xe \v getX\:CPoco}
{\xe \v CPoco\:getX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::getX ()}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27                   \{\par
28     \par
29     {\cf19 return} x;\par
30     \par
31 \}\par
}
}
{\xe \v getY\:CPoco}
{\xe \v CPoco\:getY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::getY ()}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 33                   \{\par
34     \par
35     {\cf19 return} y;\par
36     \par
37 \}\par
}
}
{\xe \v setC\:CPoco}
{\xe \v CPoco\:setC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoco::setC (double  {\i _c})}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 15                          \{\par
16     \par
17     c = _c;\par
18     \par
19 \}\par
}
}
{\xe \v setPi\:CPoco}
{\xe \v CPoco\:setPi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoco::setPi (double  {\i _pi})}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21                            \{\par
22     \par
23     Pi = _pi;\par
24     \par
25 \}\par
}
}
{\xe \v setX\:CPoco}
{\xe \v CPoco\:setX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoco::setX (double  {\i _x})}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 3                          \{\par
4     \par
5     x = _x;\par
6     \par
7 \}\par
}
}
{\xe \v setY\:CPoco}
{\xe \v CPoco\:setY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPoco::setY (double  {\i _y})}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9                          \{\par
10     \par
11     y = _y;\par
12     \par
13 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v c\:CPoco}
{\xe \v CPoco\:c}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::c{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v Pi\:CPoco}
{\xe \v CPoco\:Pi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::Pi{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v x\:CPoco}
{\xe \v CPoco\:x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::x{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v y\:CPoco}
{\xe \v CPoco\:y}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPoco::y{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPoco.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPoco.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CPosicaoAguaInjetada\par \pard\plain 
{\tc\tcl2 \v CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada}
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
\par
{
{\f2 #include <CPosicaoAguaInjetada.h>}}\par
Diagrama de hierarquia para CPosicaoAguaInjetada:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_posicao_agua_injetada.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPosicaoAguaInjetada} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b VazaoInjecao} (double _krw, double _mw, double _dp, std::vector< double > _k, double _bw, double _comprimento, double _M, std::vector< double > _posicaoc, std::vector< double > _espessurac)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b PosicaoAguaInjetada} (std::vector< double > _k, double _largura)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPosicaoAguaInjetada} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b efVertTotal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b vazaoTotal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b vazaoMed}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b posicaoc}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b VazaoInj}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b efVert}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b vazaoBt}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CPosicaoAguaInjetada\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:CPosicaoAguaInjetada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPosicaoAguaInjetada::CPosicaoAguaInjetada (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 16 \{\};\par
}
}
{\xe \v ~CPosicaoAguaInjetada\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:~CPosicaoAguaInjetada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPosicaoAguaInjetada::~CPosicaoAguaInjetada (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21 \{\}; \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v PosicaoAguaInjetada\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:PosicaoAguaInjetada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CPosicaoAguaInjetada::PosicaoAguaInjetada (std::vector< double >  {\i _k}, double  {\i _largura})}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13 \{\par
14     \par
15     {\cf19 return} posicaoc;\par
16     \par
17 \}\par
}
}
{\xe \v VazaoInjecao\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:VazaoInjecao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CPosicaoAguaInjetada::VazaoInjecao (double  {\i _krw}, double  {\i _mw}, double  {\i _dp}, std::vector< double >  {\i _k}, double  {\i _bw}, double  {\i _comprimento}, double  {\i _M}, std::vector< double >  {\i _posicaoc}, std::vector< double >  {\i _espessurac})}}
\par
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6 \{\par
7     \par
8     {\cf19 return} VazaoInj;\par
9     \par
10 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v efVert\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:efVert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPosicaoAguaInjetada::efVert{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v efVertTotal\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:efVertTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetada::efVertTotal{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v posicaoc\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:posicaoc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPosicaoAguaInjetada::posicaoc{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vazaoBt\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:vazaoBt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPosicaoAguaInjetada::vazaoBt{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v VazaoInj\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:VazaoInj}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CPosicaoAguaInjetada::VazaoInj{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vazaoMed\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:vazaoMed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetada::vazaoMed{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v vazaoTotal\:CPosicaoAguaInjetada}
{\xe \v CPosicaoAguaInjetada\:vazaoTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetada::vazaoTotal{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPosicaoAguaInjetada.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPosicaoAguaInjetada.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CPosicaoAguaInjetadaDykstra\par \pard\plain 
{\tc\tcl2 \v CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra}
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
\par
{
{\f2 #include <CPosicaoAguaInjetadaDykstra.h>}}\par
Diagrama de hierarquia para CPosicaoAguaInjetadaDykstra:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_posicao_agua_injetada_dykstra.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPosicaoAguaInjetadaDykstra} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b VazaoInjecao} (double _krw, double _mw, double _largura, double _dp, std::vector< double > _k, double _bw, double _comprimento, std::vector< double > _espessurac, double _M)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b VazaoBt} (double _krw, double _mw, double _largura, double _dp, std::vector< double > _k, double _bw, double _comprimento, std::vector< double > _espessurac, double _M, std::vector< double > posicao)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b PosicaoAguaInjetada} (std::vector< double > _k, double _L, double _M)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b EfVert} (std::vector< double > _posicaoc, std::vector< double > _espessurac, double _largura, double _espessuraTotal)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b vazaoMedia} (std::vector< double > _vazaoInj, std::vector< double > _vazaoBt)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EfVertTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetEfVertTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b GetPosicao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VazaoTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetVazaoTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPosicaoAguaInjetadaDykstra} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CPosicaoAguaInjetadaDykstra\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:CPosicaoAguaInjetadaDykstra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPosicaoAguaInjetadaDykstra::CPosicaoAguaInjetadaDykstra (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 10 \{\};\par
}
}
{\xe \v ~CPosicaoAguaInjetadaDykstra\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:~CPosicaoAguaInjetadaDykstra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPosicaoAguaInjetadaDykstra::~CPosicaoAguaInjetadaDykstra (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v EfVert\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:EfVert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CPosicaoAguaInjetadaDykstra::EfVert (std::vector< double >  {\i _posicaoc}, std::vector< double >  {\i _espessurac}, double  {\i _largura}, double  {\i _espessuraTotal})}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55 \{\par
56 \par
57     {\cf18 double} A;\par
58     {\cf19 for}({\cf18 int} i = 0; i < _espessurac.size(); i++)\par
59     \{\par
60 \par
61         A = (_posicaoc[i]*_espessurac[i])/(_largura*_espessuraTotal);\par
62         efVert.push_back(A);\par
63 \par
64     \}\par
65 \par
66     {\cf19 return} efVert;\par
67 \par
68 \}\par
}
}
{\xe \v EfVertTotal\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:EfVertTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPosicaoAguaInjetadaDykstra::EfVertTotal ()}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 86 \{\par
87     efVertTotal = 0;\par
88     {\cf19 for}({\cf18 double} eff: efVert)\par
89     \{\par
90         efVertTotal += eff;\par
91     \}\par
92 \}\par
}
}
{\xe \v GetEfVertTotal\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:GetEfVertTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetadaDykstra::GetEfVertTotal ()}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112 \{\par
113 \par
114     {\cf19 return} efVertTotal;\par
115 \par
116 \}\par
}
}
{\xe \v GetPosicao\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:GetPosicao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CPosicaoAguaInjetadaDykstra::GetPosicao ()}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 118                                                          \{\par
119     {\cf19 return} posicaoc;\par
120 \}\par
}
}
{\xe \v GetVazaoTotal\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:GetVazaoTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetadaDykstra::GetVazaoTotal ()}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 104 \{\par
105 \par
106     {\cf19 return} vazaoTotal;\par
107 \par
108 \}\par
}
}
{\xe \v PosicaoAguaInjetada\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:PosicaoAguaInjetada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CPosicaoAguaInjetadaDykstra::PosicaoAguaInjetada (std::vector< double >  {\i _k}, double  {\i _L}, double  {\i _M})}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 37                                                                                                        \{\par
38     \par
39     {\cf18 double} A;\par
40     \par
41     {\cf19 for} ( {\cf18 int} i = 0; i < _k.size() ; i++)\par
42     \{\par
43         \par
44         A = _L*((_M - sqrt(pow(_M, 2) + (1- pow(_M, 2))*(_k[i]/_k[0])))/(_M-1));\par
45         \par
46         posicaoc.push_back(A);\par
47         \par
48     \}\par
49     \par
50     {\cf19 return} posicaoc;\par
51     \par
52 \}\par
}
}
{\xe \v VazaoBt\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:VazaoBt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CPosicaoAguaInjetadaDykstra::VazaoBt (double  {\i _krw}, double  {\i _mw}, double  {\i _largura}, double  {\i _dp}, std::vector< double >  {\i _k}, double  {\i _bw}, double  {\i _comprimento}, std::vector< double >  {\i _espessurac}, double  {\i _M}, std::vector< double >  {\i posicao})}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 24 \{\par
25     \par
26     {\cf18 double} A;\par
27     \par
28         {\cf19 for} ({\cf18 int} i = 0; i < _k.size(); i++)\par
29     \{\par
30         A = (_krw*_comprimento*_dp*86400.00*_k[i]*_espessurac[i])/(_bw*_mw*(posicao[i] + _M*(_largura - posicao[i] )));\par
31         vazaoBt.push_back(A);\par
32     \}\par
33     \par
34     {\cf19 return} vazaoBt;\par
35 \}\par
}
}
{\xe \v VazaoInjecao\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:VazaoInjecao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CPosicaoAguaInjetadaDykstra::VazaoInjecao (double  {\i _krw}, double  {\i _mw}, double  {\i _largura}, double  {\i _dp}, std::vector< double >  {\i _k}, double  {\i _bw}, double  {\i _comprimento}, std::vector< double >  {\i _espessurac}, double  {\i _M})}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 9 \{\par
10     \par
11     {\cf18 double} A;\par
12     \par
13     {\cf19 for} ({\cf18 int} i = 0; i < _k.size(); i++)\par
14     \{\par
15         A = (_krw*_comprimento*_dp*86400.00*_k[i]*_espessurac[i])/(_bw*_mw*_largura*_M);\par
16         VazaoInj.push_back(A);\par
17     \}\par
18     \par
19     {\cf19 return} VazaoInj;\par
20     \par
21 \}\par
}
}
{\xe \v vazaoMedia\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:vazaoMedia}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetadaDykstra::vazaoMedia (std::vector< double >  {\i _vazaoInj}, std::vector< double >  {\i _vazaoBt})}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 71 \{\par
72     \par
73     {\cf18 double} A = 0;\par
74     {\cf19 for}({\cf18 int} i = 0; i < _vazaoInj.size(); i++)\par
75     \{\par
76 \par
77         A += (_vazaoInj[i]+ _vazaoBt[i]);\par
78     \}\par
79     \par
80     vazaoMed = A/2.0;\par
81     {\cf19 return} vazaoMed;\par
82     \par
83 \}\par
}
}
{\xe \v VazaoTotal\:CPosicaoAguaInjetadaDykstra}
{\xe \v CPosicaoAguaInjetadaDykstra\:VazaoTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPosicaoAguaInjetadaDykstra::VazaoTotal ()}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 95 \{\par
96     vazaoTotal = 0;\par
97     {\cf19 for}({\cf18 double} vazao: VazaoInj)\par
98     \{\par
99         vazaoTotal += vazao;\par
100     \}\par
101 \} \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPosicaoAguaInjetadaDykstra.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPosicaoAguaInjetadaDykstra.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CPosicaoAguaInjetadaStiles\par \pard\plain 
{\tc\tcl2 \v CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles}
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
\par
{
{\f2 #include <CPosicaoAguaInjetadaStiles.h>}}\par
Diagrama de hierarquia para CPosicaoAguaInjetadaStiles:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_posicao_agua_injetada_stiles.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPosicaoAguaInjetadaStiles} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b VazaoInjecao} (double _krw, double _mw, double _largura, double _dp, std::vector< double > _k, double _bw, double _comprimento, std::vector< double > _espessurac)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b PosicaoAguaInjetada} (std::vector< double > _k, double _largura)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b EfVert} (std::vector< double > _posicaoc, std::vector< double > _espessurac, double _largura, double _espessuraTotal)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b EfVertTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetEfVertTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b GetPosicao} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b VazaoTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetVazaoTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CPosicaoAguaInjetadaStiles} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CPosicaoAguaInjetadaStiles\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:CPosicaoAguaInjetadaStiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPosicaoAguaInjetadaStiles::CPosicaoAguaInjetadaStiles (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\};\par
}
}
{\xe \v ~CPosicaoAguaInjetadaStiles\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:~CPosicaoAguaInjetadaStiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CPosicaoAguaInjetadaStiles::~CPosicaoAguaInjetadaStiles (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23 \{\}; \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v EfVert\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:EfVert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CPosicaoAguaInjetadaStiles::EfVert (std::vector< double >  {\i _posicaoc}, std::vector< double >  {\i _espessurac}, double  {\i _largura}, double  {\i _espessuraTotal})}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 36 \{\par
37 \par
38     {\cf18 double} A;\par
39     {\cf19 for}({\cf18 int} i = 0; i < _espessurac.size(); i++)\par
40     \{\par
41 \par
42         A = (_posicaoc[i]*_espessurac[i])/(_largura*_espessuraTotal);\par
43         efVert.push_back(A);\par
44 \par
45     \}\par
46 \par
47     {\cf19 return} efVert;\par
48 \par
49 \}\par
}
}
{\xe \v EfVertTotal\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:EfVertTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPosicaoAguaInjetadaStiles::EfVertTotal ()}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 52 \{\par
53     efVertTotal = 0;\par
54     {\cf19 for}({\cf18 double} eff: efVert)\par
55     \{\par
56         efVertTotal += eff;\par
57     \}\par
58 \}\par
}
}
{\xe \v GetEfVertTotal\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:GetEfVertTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetadaStiles::GetEfVertTotal ()}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 77 \{\par
78 \par
79     {\cf19 return} efVertTotal;\par
80 \par
81 \}\par
}
}
{\xe \v GetPosicao\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:GetPosicao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CPosicaoAguaInjetadaStiles::GetPosicao ()}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 83                                                         \{\par
84     {\cf19 return} posicaoc;\par
85 \}\par
}
}
{\xe \v GetVazaoTotal\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:GetVazaoTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CPosicaoAguaInjetadaStiles::GetVazaoTotal ()}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 70 \{\par
71 \par
72     {\cf19 return} vazaoTotal;\par
73 \par
74 \}\par
}
}
{\xe \v PosicaoAguaInjetada\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:PosicaoAguaInjetada}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CPosicaoAguaInjetadaStiles::PosicaoAguaInjetada (std::vector< double >  {\i _k}, double  {\i _largura})}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 22 \{\par
23     \par
24     {\cf18 double} A;\par
25     {\cf19 for} ({\cf18 int} i = 0; i< _k.size(); i++)\par
26     \{\par
27         A = (_largura*_k[i]/(_k[0]));\par
28         posicaoc.push_back(A);\par
29     \}\par
30         \par
31     {\cf19 return} posicaoc;\par
32     \par
33 \}\par
}
}
{\xe \v VazaoInjecao\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:VazaoInjecao}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector< double > CPosicaoAguaInjetadaStiles::VazaoInjecao (double  {\i _krw}, double  {\i _mw}, double  {\i _largura}, double  {\i _dp}, std::vector< double >  {\i _k}, double  {\i _bw}, double  {\i _comprimento}, std::vector< double >  {\i _espessurac})}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 8 \{\par
9     \par
10     {\cf18 double} A;\par
11     \par
12     {\cf19 for} ({\cf18 int} i = 0; i < _k.size(); i++)\par
13     \{\par
14         A = (_krw*_comprimento*_dp*86400.00*_k[i]*_espessurac[i])/(_bw*_mw*_largura);\par
15         VazaoInj.push_back(A);\par
16     \}\par
17     \par
18     {\cf19 return} VazaoInj;\par
19     \par
20 \}\par
}
}
{\xe \v VazaoTotal\:CPosicaoAguaInjetadaStiles}
{\xe \v CPosicaoAguaInjetadaStiles\:VazaoTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CPosicaoAguaInjetadaStiles::VazaoTotal ()}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61 \{\par
62     vazaoTotal = 0;\par
63     {\cf19 for}({\cf18 double} vazao: VazaoInj)\par
64     \{\par
65         vazaoTotal += vazao;\par
66     \}\par
67 \} \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPosicaoAguaInjetadaStiles.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CPosicaoAguaInjetadaStiles.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CReservatorio\par \pard\plain 
{\tc\tcl2 \v CReservatorio}
{\xe \v CReservatorio}
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
\par
{
{\f2 #include <CReservatorio.h>}}\par
Diagrama de hierarquia para CReservatorio:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_reservatorio.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CReservatorio} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CReservatorio} (double _kro, double _krw, double _sor, double _phi, double _swi, double _M)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetKro} (double _kro)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetKrw} (double _krw)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetSor} (double _sor)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetPHI} (double _phi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetSwi} (double _swi)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetM} (double _M)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetKro} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetKrw} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetSor} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetPHI} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetSwi} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetM} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CReservatorio} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b kro}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b krw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sor}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b phi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b swi}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b M}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CReservatorio\:CReservatorio}
{\xe \v CReservatorio\:CReservatorio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CReservatorio::CReservatorio (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\};\par
}
}
{\xe \v CReservatorio\:CReservatorio}
{\xe \v CReservatorio\:CReservatorio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CReservatorio::CReservatorio (double  {\i _kro}, double  {\i _krw}, double  {\i _sor}, double  {\i _phi}, double  {\i _swi}, double  {\i _M}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 14 : kro(_kro), krw(_krw), sor(_sor), phi(_phi), swi(_swi), M(_M)\{\};\par
}
}
{\xe \v ~CReservatorio\:CReservatorio}
{\xe \v CReservatorio\:~CReservatorio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CReservatorio::~CReservatorio (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34 \{\}; \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v GetKro\:CReservatorio}
{\xe \v CReservatorio\:GetKro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::GetKro ()}}
\par
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 46 \{\par
47     \par
48     {\cf19 return} kro;\par
49     \par
50 \}\par
}
}
{\xe \v GetKrw\:CReservatorio}
{\xe \v CReservatorio\:GetKrw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::GetKrw ()}}
\par
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53 \{\par
54     \par
55     {\cf19 return} krw;\par
56     \par
57 \}\par
}
}
{\xe \v GetM\:CReservatorio}
{\xe \v CReservatorio\:GetM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::GetM ()}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 81 \{\par
82     \par
83     {\cf19 return} M;\par
84     \par
85 \}\par
}
}
{\xe \v GetPHI\:CReservatorio}
{\xe \v CReservatorio\:GetPHI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::GetPHI ()}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 67 \{\par
68     \par
69     {\cf19 return} phi;\par
70     \par
71 \}\par
}
}
{\xe \v GetSor\:CReservatorio}
{\xe \v CReservatorio\:GetSor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::GetSor ()}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 60 \{\par
61     \par
62     {\cf19 return} sor;\par
63     \par
64 \}\par
}
}
{\xe \v GetSwi\:CReservatorio}
{\xe \v CReservatorio\:GetSwi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::GetSwi ()}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 74 \{\par
75     \par
76     {\cf19 return} swi;\par
77     \par
78 \}\par
}
}
{\xe \v SetKro\:CReservatorio}
{\xe \v CReservatorio\:SetKro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorio::SetKro (double  {\i _kro})}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 4 \{\par
5     \par
6     this->kro = _kro;\par
7     \par
8 \}\par
}
}
{\xe \v SetKrw\:CReservatorio}
{\xe \v CReservatorio\:SetKrw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorio::SetKrw (double  {\i _krw})}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 11 \{\par
12     \par
13     krw = _krw;\par
14     \par
15 \}\par
}
}
{\xe \v SetM\:CReservatorio}
{\xe \v CReservatorio\:SetM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorio::SetM (double  {\i _M})}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 39 \{\par
40     \par
41     M = _M;\par
42     \par
43 \}\par
}
}
{\xe \v SetPHI\:CReservatorio}
{\xe \v CReservatorio\:SetPHI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorio::SetPHI (double  {\i _phi})}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 25 \{\par
26     \par
27     phi = _phi;\par
28     \par
29 \}\par
}
}
{\xe \v SetSor\:CReservatorio}
{\xe \v CReservatorio\:SetSor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorio::SetSor (double  {\i _sor})}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 18 \{\par
19     \par
20     sor = _sor;\par
21     \par
22 \}\par
}
}
{\xe \v SetSwi\:CReservatorio}
{\xe \v CReservatorio\:SetSwi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorio::SetSwi (double  {\i _swi})}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 32 \{\par
33     \par
34     swi = _swi; \par
35     \par
36 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v kro\:CReservatorio}
{\xe \v CReservatorio\:kro}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::kro{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v krw\:CReservatorio}
{\xe \v CReservatorio\:krw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::krw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v M\:CReservatorio}
{\xe \v CReservatorio\:M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::M{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v phi\:CReservatorio}
{\xe \v CReservatorio\:phi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::phi{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sor\:CReservatorio}
{\xe \v CReservatorio\:sor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::sor{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v swi\:CReservatorio}
{\xe \v CReservatorio\:swi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorio::swi{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CReservatorio.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CReservatorio.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CReservatorioCamadas\par \pard\plain 
{\tc\tcl2 \v CReservatorioCamadas}
{\xe \v CReservatorioCamadas}
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
\par
{
{\f2 #include <CReservatorioCamadas.h>}}\par
Diagrama de hierarquia para CReservatorioCamadas:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_c_reservatorio_camadas.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CReservatorioCamadas} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CReservatorioCamadas} (double _bo, double _bw, double _dp, double _mo, double _mw, double _sg, double _largura, double _comprimento, {\b CReservatorio} reservatorio)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetBo} (double _bo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetBw} (double _bw)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetDp} (double _dp)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMo} (double _mo)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetMw} (double _mw)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetSg} (double _sg)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetLargura} (double _largura)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetComprimento} (double _comprimento)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetEspec} (std::vector< double > _espessurac)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b SetK} (std::vector< double > _k)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CalcEspessT} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b CalcM} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetBo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetBw} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetDp} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetMo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetMw} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetSg} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetM} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetLargura} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetComprimento} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b GetEspessuraTotal} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b GetEspec} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b GetK} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CReservatorioCamadas} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b bw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b dp}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b mw}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b sg}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b M}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b largura}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b comprimento}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b espessuraTotal}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b espessurac}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b k}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CReservatorioCamadas\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:CReservatorioCamadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CReservatorioCamadas::CReservatorioCamadas (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 21 \{\};\par
}
}
{\xe \v CReservatorioCamadas\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:CReservatorioCamadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CReservatorioCamadas::CReservatorioCamadas (double  {\i _bo}, double  {\i _bw}, double  {\i _dp}, double  {\i _mo}, double  {\i _mw}, double  {\i _sg}, double  {\i _largura}, double  {\i _comprimento}, {\b CReservatorio}  {\i reservatorio}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 23 :bo(_bo), bw(_bw), dp(_dp), mo(_mo), mw(_mw), sg(_sg), largura(_largura), comprimento(_comprimento)\{ M = (reservatorio.GetKrw()/mw)/(reservatorio.GetKro()/mo);\};\par
}
}
{\xe \v ~CReservatorioCamadas\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:~CReservatorioCamadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CReservatorioCamadas::~CReservatorioCamadas (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 58 \{\};\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v CalcEspessT\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:CalcEspessT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::CalcEspessT ()}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 76 \{\par
77     espessuraTotal = 0;\par
78     {\cf19 for}({\cf18 double} espessura:espessurac) \par
79     \{\par
80         espessuraTotal += espessura;\par
81     \}\par
82 \}\par
}
}
{\xe \v CalcM\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:CalcM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::CalcM ()}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 84                                 \{\par
85 \par
86     M = (CReservatorio::GetKrw()/mw)/(CReservatorio::GetKro()/mo);\par
87 \par
88 \}\par
}
}
{\xe \v GetBo\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetBo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetBo ()}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 91 \{\par
92     \par
93     {\cf19 return} bo;  \par
94     \par
95 \}\par
}
}
{\xe \v GetBw\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetBw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetBw ()}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 98 \{\par
99     \par
100     {\cf19 return} bw;\par
101     \par
102 \}\par
}
}
{\xe \v GetComprimento\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetComprimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetComprimento ()}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 147 \{\par
148 \par
149     {\cf19 return} comprimento;\par
150 \par
151 \}\par
}
}
{\xe \v GetDp\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetDp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetDp ()}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 105 \{\par
106     \par
107     {\cf19 return} dp;\par
108     \par
109 \}\par
}
}
{\xe \v GetEspec\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetEspec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CReservatorioCamadas::GetEspec ()}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 154 \{\par
155             \par
156     {\cf19 return} espessurac;\par
157     \par
158 \}\par
}
}
{\xe \v GetEspessuraTotal\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetEspessuraTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetEspessuraTotal ()}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 168 \{\par
169 \par
170     {\cf19 return} espessuraTotal;\par
171     \par
172 \}\par
}
}
{\xe \v GetK\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
vector< double > CReservatorioCamadas::GetK ()}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 161 \{\par
162     \par
163     {\cf19 return} k;\par
164     \par
165 \}\par
}
}
{\xe \v GetLargura\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetLargura}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetLargura ()}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 140 \{\par
141 \par
142     {\cf19 return} largura;\par
143 \par
144 \}\par
}
}
{\xe \v GetM\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetM ()}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 133 \{\par
134 \par
135     {\cf19 return} M;\par
136 \par
137 \}\par
}
}
{\xe \v GetMo\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetMo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetMo ()}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 112 \{\par
113     \par
114     {\cf19 return} mo;\par
115     \par
116 \}\par
}
}
{\xe \v GetMw\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetMw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetMw ()}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 119 \{\par
120     \par
121     {\cf19 return} mw;\par
122     \par
123 \}\par
}
}
{\xe \v GetSg\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:GetSg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::GetSg ()}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 126 \{\par
127     \par
128     {\cf19 return} sg;\par
129     \par
130 \}\par
}
}
{\xe \v SetBo\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetBo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetBo (double  {\i _bo})}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 6 \{\par
7     \par
8     bo = _bo;   \par
9     \par
10 \}\par
}
}
{\xe \v SetBw\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetBw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetBw (double  {\i _bw})}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 13 \{\par
14     \par
15     bw = _bw;\par
16     \par
17 \}\par
}
}
{\xe \v SetComprimento\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetComprimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetComprimento (double  {\i _comprimento})}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 55 \{\par
56 \par
57     comprimento = _comprimento;\par
58 \par
59 \}\par
}
}
{\xe \v SetDp\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetDp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetDp (double  {\i _dp})}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 20 \{\par
21     \par
22     dp = _dp;\par
23     \par
24 \}\par
}
}
{\xe \v SetEspec\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetEspec}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetEspec (std::vector< double >  {\i _espessurac})}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 62 \{\par
63     \par
64     espessurac = _espessurac;\par
65     \par
66 \}\par
}
}
{\xe \v SetK\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetK (std::vector< double >  {\i _k})}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 69 \{\par
70     \par
71     k = _k;\par
72     \par
73 \}\par
}
}
{\xe \v SetLargura\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetLargura}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetLargura (double  {\i _largura})}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 48 \{\par
49 \par
50     largura = _largura;\par
51 \par
52 \}\par
}
}
{\xe \v SetMo\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetMo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetMo (double  {\i _mo})}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 27 \{\par
28     \par
29     mo = _mo;\par
30     \par
31 \}\par
}
}
{\xe \v SetMw\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetMw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetMw (double  {\i _mw})}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 34 \{\par
35     \par
36     mw = _mw;\par
37     \par
38 \}\par
}
}
{\xe \v SetSg\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:SetSg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CReservatorioCamadas::SetSg (double  {\i _sg})}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 41 \{\par
42     \par
43     sg = _sg;\par
44     \par
45 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v bo\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:bo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::bo{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v bw\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:bw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::bw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v comprimento\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:comprimento}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::comprimento{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dp\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:dp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::dp{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v espessurac\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:espessurac}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CReservatorioCamadas::espessurac{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v espessuraTotal\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:espessuraTotal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::espessuraTotal{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v k\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:k}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CReservatorioCamadas::k{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v largura\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:largura}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::largura{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v M\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:M}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::M{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mo\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:mo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::mo{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v mw\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:mw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::mw{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v sg\:CReservatorioCamadas}
{\xe \v CReservatorioCamadas\:sg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double CReservatorioCamadas::sg{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CReservatorioCamadas.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CReservatorioCamadas.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe CSolverInfluxo\par \pard\plain 
{\tc\tcl2 \v CSolverInfluxo}
{\xe \v CSolverInfluxo}
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
\par
{
{\f2 #include <CSolverInfluxo.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CSolverInfluxo} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Simular} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CSolverInfluxo} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos Protegidos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CReservatorioCamadas} {\b camadas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CReservatorio} {\b reservatorio}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPoco} {\b poco}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPosicaoAguaInjetadaStiles} {\b stiles}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CPosicaoAguaInjetadaDykstra} {\b dykstra}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b COleoProduzido} {\b oleo}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CLinhasEquipotenciais} * {\b linhas}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CGnuplot} {\b plot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CGnuplot} {\b plot1}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CGnuplot} {\b plot2}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CGnuplot} {\b plot3}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CGnuplot} {\b plot4}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CGnuplot} {\b plot5}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b xplot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::vector< double > {\b yplot}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CCorey} {\b corey}\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CFluxoFracionario} {\b fluxofracionario}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v CSolverInfluxo\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:CSolverInfluxo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSolverInfluxo::CSolverInfluxo (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 53 \{\};\par
}
}
{\xe \v ~CSolverInfluxo\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:~CSolverInfluxo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CSolverInfluxo::~CSolverInfluxo (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 57 \{\};    \par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v Simular\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:Simular}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CSolverInfluxo::Simular ()}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 12 \{\par
13 \par
14     {\cf18 bool} rodar = {\cf17 true};\par
15     {\cf18 bool} teste = {\cf17 false};\par
16 \par
17     {\cf19 while}(!teste)\par
18     \{\par
19 \par
20         {\cf19 do}\par
21         \{\par
22         cout << endl;\par
23         cout << {\cf22 "Deseja executar o codigo? (1 - sim , 2 - nao): "};\par
24         {\cf18 char} c;\par
25         cin >> c;\par
26         cin.get();\par
27 \par
28         {\cf19 if} (c == {\cf23 '1'})\par
29         \{    \par
30 \par
31         cout << endl;\par
32 \par
33         cout << {\cf22 "######################################################################"} << endl;\par
34         cout << {\cf22 "#                                                                    #"} << endl;\par
35         cout << {\cf22 "#                  Projeto de programacao pratica                    #"} << endl;\par
36         cout << {\cf22 "# Professorr: Andre Duarte Bueno                                     #"} << endl;\par
37         cout << {\cf22 "#                                                                    #"} << endl;\par
38         cout << {\cf22 "# Alunos: David Henrique Lima Dias                                   #"} << endl;\par
39         cout << {\cf22 "#         Julia Rangel Ribeiro                                       #"} << endl;\par
40         cout << {\cf22 "#         Marcos Vinicius de Paula Chaiben                           #"} << endl;\par
41         cout << {\cf22 "#                                                                    #"} << endl;\par
42         cout << {\cf22 "######################################################################"} << endl << endl;\par
43 \par
44         cout << {\cf22 "Aperte ENTER para continuar com carregamento de dados..."} << endl;\par
45         cin.get();\par
46 \par
47         EntradaDadosReservatorio();\par
48         \par
49         cout << {\cf22 "Aperte ENTER para continuar com carregamento de dados..."} << endl;\par
50         cin.get();\par
51 \par
52         EntradaDadosRochaReservatorio();\par
53 \par
54         cout << {\cf22 "Aperte ENTER para continuar com carregamento de dados..."} << endl;\par
55         cin.get();\par
56 \par
57         EntradaDadosCamadas();\par
58         cout << {\cf22 "####################################################"} << endl;\par
59         cout << {\cf22 "#  Todos arquivos foram carregados com sucesso!!   #"} << endl;\par
60         cout << {\cf22 "####################################################"} << endl << endl;\par
61 \par
62         cout << {\cf22 "# qual metodo deseja utilizar?"} << endl << endl;\par
63         cout << {\cf22 "# 1 - Stiles"} << endl;\par
64         cout << {\cf22 "# 2 - Dikstra"} << endl << endl;\par
65         \par
66         {\cf18 char} handler;\par
67         \par
68         cin >> handler;\par
69         cin.get();\par
70         \par
71         camadas.CalcM();\par
72         camadas.CalcEspessT();\par
73         \par
74         {\cf18 bool} tes = {\cf17 false};\par
75         \par
76         {\cf19 do}\par
77         \{\par
78 \par
79         {\cf19 switch} (handler)\{\par
80 \par
81         {\cf19 case} {\cf23 '1'}:    \par
82         \{\par
83     \par
84             vector<double> vazao;\par
85             vazao = stiles.VazaoInjecao(reservatorio.GetKrw(), camadas.GetMw(), camadas.GetLargura(), camadas.GetDp(), camadas.GetK(), camadas.GetBw(), camadas.GetComprimento(), camadas.GetEspec());\par
86             \par
87             vector<double> perm = camadas.GetK();\par
88             \par
89             {\cf19 for} ({\cf18 int} i = 0 ; i< vazao.size() ; i++)\par
90             \{\par
91                 cout <<{\cf22 "Vazao Stiles = "} << vazao[i] << {\cf22 "\\tPermeabilidade = "} << perm[i]<<endl;\par
92             \}\par
93             cout << endl;\par
94     \par
95             stiles.VazaoTotal();\par
96             {\cf18 double} vazaototal;\par
97             vazaototal = stiles.GetVazaoTotal();\par
98     \par
99             cout << {\cf22 "Vazao total = "} << vazaototal <<endl;\par
100     \par
101             cout << endl;\par
102             \par
103             vector<double> posicao;\par
104             posicao = stiles.PosicaoAguaInjetada(camadas.GetK(), camadas.GetLargura());  \par
105     \par
106             {\cf19 for} ({\cf18 double} item: posicao)\par
107                 cout <<{\cf22 "Posicao frente de avan\'E7o de agua = "} << item <<endl;   \par
108     \par
109             cout << endl;\par
110     \par
111             {\cf18 double} eff;\par
112             vector<double> effVet;\par
113     \par
114             effVet = stiles.EfVert(stiles.GetPosicao(), camadas.GetEspec(), camadas.GetLargura(), camadas.GetEspessuraTotal());\par
115             stiles.EfVertTotal();\par
116             eff = stiles.GetEfVertTotal();\par
117     \par
118             {\cf19 for} ({\cf18 double} item: effVet)\par
119                 cout <<{\cf22 "Eficiencia vertical = "} << item <<endl;\par
120     \par
121             cout << endl;\par
122             cout << {\cf22 "Eficiencia vertical total = "} << eff << endl;\par
123     \par
124             {\cf18 double} oleoProduzidoTotal;\par
125             oleo.OleoProduzido(camadas.GetLargura(), camadas.GetComprimento(), reservatorio.GetPHI(), camadas.GetEspessuraTotal(), reservatorio.GetSor(), reservatorio.GetSwi(), stiles.GetEfVertTotal(), camadas.GetBo());\par
126             oleoProduzidoTotal = oleo.getNp();\par
127     \par
128             cout << endl;\par
129             cout << {\cf22 "Np = "} << oleoProduzidoTotal << endl;\par
130     \par
131             {\cf18 double} Bt;\par
132             oleo.TempoBreakThrough(stiles.GetVazaoTotal());\par
133             Bt = oleo.getTbreak();\par
134     \par
135             cout << endl;\par
136             cout << {\cf22 "O tempo de break through foi : "} << Bt << endl;\par
137             \par
138             {\cf18 bool} ecpot = {\cf17 false};\par
139             \par
140             {\cf19 do}\par
141             \{       \par
142                 \par
143                 cout << {\cf22 "\\nGostaria de exibir os graficos de linhas equipotenciais? (1 - sim, 2 - nao)"} << endl;\par
144                 \par
145                 {\cf18 char} d;\par
146                 cin >> d;\par
147                 cin.get();\par
148                 \par
149                 {\cf19 if}(d == {\cf23 '1'})\par
150                 \{\par
151                     cout << {\cf22 "Aperte ENTER para continuar com carregamento de dados..."} << endl;\par
152                     cin.get();\par
153                     \par
154                     EntradaDadosPoco();\par
155                     \par
156                     {\cf18 double} kb = kbarra(perm, camadas.GetEspec());\par
157                     \par
158                     cout << {\cf22 "# Qual configuracao de pocos deseja calcular?"} << endl;\par
159                     cout << {\cf22 "# 1 - 1 poco produtor e 1 injetor"} << endl;\par
160                     cout << {\cf22 "# 2 - 2 pocos injetores e 1 produtor"} << endl;\par
161                     cout << {\cf22 "# 3 - 1 poco injetor e 2 produtores"} << endl << endl;\par
162                     \par
163                     {\cf18 char} ans;\par
164                     {\cf18 bool} ans1 = {\cf17 false};\par
165                     cin >> ans;\par
166                     cin.get();\par
167                     \par
168                     {\cf19 do}\{\par
169                     {\cf19 switch}(ans)\{\par
170                         {\cf19 case} {\cf23 '1'}:\par
171                             \{\par
172                                 ans1 = {\cf17 true};\par
173                                 {\cf18 double} _r1 = r1(poco.getC(), poco.getX(),poco.getY());\par
174                                 {\cf18 double} _r2 = r2(poco.getC(), poco.getX(),poco.getY());\par
175                                 linhas = {\cf17 new} CLinhaPressao2Pocos(_r1, _r2, 0.0);\par
176                                 printResults(poco.getX(), poco.getY(), poco.getC(), stiles.GetVazaoTotal(), camadas.GetMo(), kb, camadas.GetEspessuraTotal(), poco.getPi());\par
177                                 cout << {\cf22 " R = "} << linhas->R(poco.getC()) << {\cf22 " C = "} << poco.getC() << endl;\par
178                                 xplot = linhas->CalculoDoVetorX(linhas->R(poco.getC()), poco.getC());\par
179                                 yplot = linhas->CalculoDoVetorY(linhas->R(poco.getC()), poco.getC());\par
180                                 \par
181                                 Gnuplot::Terminal({\cf22 "qt"});\par
182                                 plot.set_style({\cf22 "lines"});\par
183                                 plot.Title({\cf22 "Curvas equipotenciais."});\par
184                                 plot.unset_legend();\par
185                                 plot.set_xlabel({\cf22 " "});\par
186                                 plot.set_ylabel({\cf22 " "});\par
187                                 plot.ShowOnScreen();\par
188                                 plot.Grid();\par
189                                 plot.PlotVector(xplot, yplot);\par
190                                 cin.get();\par
191                         \par
192                                 plot.savetops({\cf22 "dois_pocos_stiles"});\par
193                         \par
194                                  \par
195                                 \par
196                                 {\cf19 break};\par
197                             \}\par
198                         {\cf19 case} {\cf23 '2'}:\par
199                             \{\par
200                                 \par
201                                 ans1 = {\cf17 true};\par
202                                 {\cf18 double} _r1 = r1(poco.getC(), poco.getX(),poco.getY());\par
203                                 {\cf18 double} _r2 = r2(poco.getC(), poco.getX(),poco.getY());\par
204                                 {\cf18 double} _r3 = r3(poco.getX(), poco.getY());\par
205                                 linhas = {\cf17 new} CLinhaPressao3Pocos1P2I(_r1, _r2, _r3);\par
206                                 printResults(poco.getX(), poco.getY(), poco.getC(), stiles.GetVazaoTotal(), camadas.GetMo(), kb, camadas.GetEspessuraTotal(), poco.getPi());\par
207                                 cout << {\cf22 " R = "} << linhas->R(poco.getC()) << {\cf22 " C = "} << poco.getC() << endl;\par
208                                 xplot = linhas->CalculoDoVetorX(linhas->R(poco.getC()), poco.getC());\par
209                                 yplot = linhas->CalculoDoVetorY(linhas->R(poco.getC()), poco.getC());\par
210                                 \par
211                                 Gnuplot::Terminal({\cf22 "qt"});\par
212                                 plot1.set_style({\cf22 "lines"});\par
213                                 plot1.Title({\cf22 "Curvas equipotenciais."});\par
214                                 plot1.unset_legend();\par
215                                 plot1.set_xlabel({\cf22 " "});\par
216                                 plot1.set_ylabel({\cf22 " "});\par
217                                 plot1.ShowOnScreen();\par
218                                 plot1.Grid();\par
219                                 plot1.PlotVector(xplot, yplot);\par
220                                 cin.get();\par
221                         \par
222                                 plot1.savetops({\cf22 "dois-pocos-injetores-um-poco-produtor-stiles"});\par
223                         \par
224                                 \par
225                                 {\cf19 break};\par
226                             \}\par
227                         {\cf19 case} {\cf23 '3'}:\par
228                             \{\par
229                                 \par
230                                 ans1 = {\cf17 true};\par
231                                 {\cf18 double} _r1 = r1(poco.getC(), poco.getX(),poco.getY());\par
232                                 {\cf18 double} _r2 = r2(poco.getC(), poco.getX(),poco.getY());\par
233                                 {\cf18 double} _r3 = r3(poco.getX(), poco.getY());\par
234                                 linhas = {\cf17 new} CLinhaPressao3Pocos2P1I(_r1, _r2, _r3);\par
235                                 printResults(poco.getX(), poco.getY(), poco.getC(), stiles.GetVazaoTotal(), camadas.GetMo(), kb, camadas.GetEspessuraTotal(), poco.getPi());\par
236                                 cout << {\cf22 " R = "} << linhas->R(poco.getC()) << {\cf22 " C = "} << poco.getC() << endl;\par
237                                 xplot = linhas->CalculoDoVetorX(linhas->R(poco.getC()), poco.getC());\par
238                                 yplot = linhas->CalculoDoVetorY(linhas->R(poco.getC()), poco.getC());\par
239                                 \par
240                                 Gnuplot::Terminal({\cf22 "qt"});\par
241                                 plot2.set_style({\cf22 "lines"});\par
242                                 plot2.Title({\cf22 "Curvas equipotenciais."});\par
243                                 plot2.unset_legend();\par
244                                 plot2.set_xlabel({\cf22 " "});\par
245                                 plot2.set_ylabel({\cf22 " "});\par
246                                 plot2.ShowOnScreen();\par
247                                 plot2.Grid();\par
248                                 plot2.PlotVector(xplot, yplot);\par
249                                 cin.get();\par
250                         \par
251                                 plot2.savetops({\cf22 "um-poco-injetor-dois-pocos-produtores-stiles"});\par
252                         \par
253                                 \par
254                                 {\cf19 break};\par
255                             \}\par
256                         {\cf19 default}:\par
257                             cout << {\cf22 "Opcao invalidade!!!"} << endl << endl;      \par
258                             cout << {\cf22 "# Qual configura\'E7\'E3o de pocos deseja calcular?"} << endl;\par
259                             cout << {\cf22 "# 1 - 1 poco produtor e 1 injetor"} << endl;\par
260                             cout << {\cf22 "# 2 - 2 pocos injetores e 1 produtor"} << endl;\par
261                             cout << {\cf22 "# 3 - 1 poco injetor e 2 produtores"} << endl << endl;\par
262                             cin >> ans;\par
263                             cin.get();\par
264                     \}\par
265                     \}{\cf19 while}(!ans1);\par
266                       \par
267                     ecpot = {\cf17 true};\par
268                 \}{\cf19 else} {\cf19 if}( d =={\cf23 '2'})\{\par
269                     ecpot = {\cf17 true};\par
270                 \}{\cf19 else} \{\par
271                     cout << {\cf22 "opcao invalida!!!"} << endl;\par
272                 \}\par
273                     \par
274             \}{\cf19 while}(!ecpot);\par
275             tes = {\cf17 true};\par
276             {\cf19 break};\par
277         \}\par
278         {\cf19 case} {\cf23 '2'}:\par
279         \{   \par
280         \par
281             vector<double> vazao;\par
282             vazao = dykstra.VazaoInjecao(reservatorio.GetKrw(), camadas.GetMw(), camadas.GetLargura(), camadas.GetDp(), camadas.GetK(), camadas.GetBw(), camadas.GetComprimento(), camadas.GetEspec(), reservatorio.GetM());\par
283             \par
284             vector<double> perm = camadas.GetK();\par
285             \par
286             {\cf19 for} ({\cf18 int} i = 0 ; i< vazao.size() ; i++)\par
287             \{\par
288                 cout <<{\cf22 "Vazao Dykstra = "} << vazao[i] << {\cf22 "\\tPermeabilidade = "} << perm[i]<<endl;\par
289             \}\par
290             cout << endl;\par
291     \par
292             dykstra.VazaoTotal();\par
293             {\cf18 double} vazaototal;\par
294             vazaototal = dykstra.GetVazaoTotal();\par
295     \par
296             cout << {\cf22 "Vazao total = "} << vazaototal <<endl;\par
297     \par
298             cout << endl;\par
299             \par
300             vector<double> posicao;\par
301             posicao = dykstra.PosicaoAguaInjetada(camadas.GetK(), camadas.GetLargura(), reservatorio.GetM());  \par
302     \par
303             {\cf19 for} ({\cf18 double} item: posicao)\par
304                 cout <<{\cf22 "Posicao frente de avan\'E7o de agua = "} << item <<endl;   \par
305     \par
306             cout << endl;\par
307     \par
308             {\cf18 double} eff;\par
309             vector<double> effVet;\par
310     \par
311             effVet = dykstra.EfVert(dykstra.GetPosicao(), camadas.GetEspec(), camadas.GetLargura(), camadas.GetEspessuraTotal());\par
312             dykstra.EfVertTotal();\par
313             eff = dykstra.GetEfVertTotal();\par
314     \par
315             {\cf19 for} ({\cf18 double} item: effVet)\par
316                 cout <<{\cf22 "Eficiencia vertical = "} << item <<endl;\par
317     \par
318             cout << endl;\par
319             cout << {\cf22 "Eficiencia vertical total = "} << eff << endl;\par
320     \par
321             {\cf18 double} oleoProduzidoTotal;\par
322             oleo.OleoProduzido(camadas.GetLargura(), camadas.GetComprimento(), reservatorio.GetPHI(), camadas.GetEspessuraTotal(), reservatorio.GetSor(), reservatorio.GetSwi(), dykstra.GetEfVertTotal(), camadas.GetBo());\par
323             oleoProduzidoTotal = oleo.getNp();\par
324     \par
325             cout << endl;\par
326             cout << {\cf22 "Np = "} << oleoProduzidoTotal << endl;\par
327     \par
328             {\cf18 double} Bt;\par
329             oleo.TempoBreakThrough(dykstra.GetVazaoTotal());\par
330             Bt = oleo.getTbreak();\par
331     \par
332             cout << endl;\par
333             cout << {\cf22 "O tempo de break through foi : "} << Bt << endl; \par
334             \par
335             {\cf18 bool} ecpot = {\cf17 false};\par
336             \par
337             {\cf19 do}\par
338             \{       \par
339                 \par
340                 cout << {\cf22 "\\nGostaria de exibir os graficos de linhas equipotenciais? (1 - sim, 2 - nao)"} << endl;\par
341                 \par
342                 {\cf18 char} d;\par
343                 cin >> d;\par
344                 cin.get();\par
345                 \par
346                 {\cf19 if}(d == {\cf23 '1'})\par
347                 \{\par
348                     cout << {\cf22 "Aperte ENTER para continuar com carregamento de dados..."} << endl;\par
349                     cin.get();\par
350                     \par
351                     EntradaDadosPoco();\par
352                     \par
353                     {\cf18 double} kb = kbarra(perm, camadas.GetEspec());\par
354                     \par
355                     cout << {\cf22 "# Qual configuracao de pocos deseja calcular?"} << endl;\par
356                     cout << {\cf22 "# 1 - 1 poco produtor e 1 injetor"} << endl;\par
357                     cout << {\cf22 "# 2 - 2 pocos injetores e 1 produtor"} << endl;\par
358                     cout << {\cf22 "# 3 - 1 poco injetor e 2 produtores"} << endl << endl;\par
359                     \par
360                     {\cf18 char} ans;\par
361                     {\cf18 bool} ans1 = {\cf17 false};\par
362                     cin >> ans;\par
363                     cin.get();\par
364                     \par
365                     {\cf19 do}\{\par
366                     {\cf19 switch}(ans)\{\par
367                         {\cf19 case} {\cf23 '1'}:\par
368                             \{\par
369                                 ans1 = {\cf17 true};\par
370                                 {\cf18 double} _r1 = r1(poco.getC(), poco.getX(),poco.getY());\par
371                                 {\cf18 double} _r2 = r2(poco.getC(), poco.getX(),poco.getY());\par
372                                 linhas = {\cf17 new} CLinhaPressao2Pocos(_r1, _r2, 0.0);\par
373                                 printResults(poco.getX(), poco.getY(), poco.getC(), dykstra.GetVazaoTotal(), camadas.GetMo(), kb, camadas.GetEspessuraTotal(), poco.getPi());\par
374                                 cout << {\cf22 " R = "} << linhas->R(poco.getC()) << {\cf22 " C = "} << poco.getC() << endl;\par
375                                 xplot = linhas->CalculoDoVetorX(linhas->R(poco.getC()), poco.getC());\par
376                                 yplot = linhas->CalculoDoVetorY(linhas->R(poco.getC()), poco.getC());\par
377                                 \par
378                                 Gnuplot::Terminal({\cf22 "qt"});\par
379                                 plot.set_style({\cf22 "lines"});\par
380                                 plot.Title({\cf22 "Curvas equipotenciais."});\par
381                                 plot.unset_legend();\par
382                                 plot.set_xlabel({\cf22 " "});\par
383                                 plot.set_ylabel({\cf22 " "});\par
384                                 plot.ShowOnScreen();\par
385                                 plot.Grid();\par
386                                 plot.PlotVector(xplot, yplot);\par
387                                 cin.get();\par
388                         \par
389                                 plot.savetops({\cf22 "dois-pocos-dykstra"});\par
390                                 \par
391                                 {\cf19 break};\par
392                             \}\par
393                         {\cf19 case} {\cf23 '2'}:\par
394                             \{\par
395                                 \par
396                                 ans1 = {\cf17 true};\par
397                                 {\cf18 double} _r1 = r1(poco.getC(), poco.getX(),poco.getY());\par
398                                 {\cf18 double} _r2 = r2(poco.getC(), poco.getX(),poco.getY());\par
399                                 {\cf18 double} _r3 = r3(poco.getX(), poco.getY());\par
400                                 linhas = {\cf17 new} CLinhaPressao3Pocos1P2I(_r1, _r2, _r3);\par
401                                 printResults(poco.getX(), poco.getY(), poco.getC(), dykstra.GetVazaoTotal(), camadas.GetMo(), kb, camadas.GetEspessuraTotal(), poco.getPi());\par
402                                 cout << {\cf22 " R = "} << linhas->R(poco.getC()) << {\cf22 " C = "} << poco.getC() << endl;\par
403                                 xplot = linhas->CalculoDoVetorX(linhas->R(poco.getC()), poco.getC());\par
404                                 yplot = linhas->CalculoDoVetorY(linhas->R(poco.getC()), poco.getC());\par
405                                 \par
406                                 Gnuplot::Terminal({\cf22 "qt"});\par
407                                 plot1.set_style({\cf22 "lines"});\par
408                                 plot1.Title({\cf22 "Curvas equipotenciais."});\par
409                                 plot1.unset_legend();\par
410                                 plot1.set_xlabel({\cf22 " "});\par
411                                 plot1.set_ylabel({\cf22 " "});\par
412                                 plot1.ShowOnScreen();\par
413                                 plot1.Grid();\par
414                                 plot1.PlotVector(xplot, yplot);\par
415                                 cin.get();\par
416                         \par
417                                 plot1.savetops({\cf22 "dois-pocos-injetores-um-poco-produtor-dykstra"});\par
418 \par
419                                 {\cf19 break};\par
420                             \}\par
421                         {\cf19 case} {\cf23 '3'}:\par
422                             \{\par
423                                 \par
424                                 ans1 = {\cf17 true};\par
425                                 {\cf18 double} _r1 = r1(poco.getC(), poco.getX(),poco.getY());\par
426                                 {\cf18 double} _r2 = r2(poco.getC(), poco.getX(),poco.getY());\par
427                                 {\cf18 double} _r3 = r3(poco.getX(), poco.getY());\par
428                                 linhas = {\cf17 new} CLinhaPressao3Pocos2P1I(_r1, _r2, _r3);\par
429                                 printResults(poco.getX(), poco.getY(), poco.getC(), dykstra.GetVazaoTotal(), camadas.GetMo(), kb, camadas.GetEspessuraTotal(), poco.getPi());\par
430                                 cout << {\cf22 " R = "} << linhas->R(poco.getC()) << {\cf22 " C = "} << poco.getC() << endl;\par
431                                 xplot = linhas->CalculoDoVetorX(linhas->R(poco.getC()), poco.getC());\par
432                                 yplot = linhas->CalculoDoVetorY(linhas->R(poco.getC()), poco.getC());\par
433                                 \par
434                                 Gnuplot::Terminal({\cf22 "qt"});\par
435                                 plot2.set_style({\cf22 "lines"});\par
436                                 plot2.Title({\cf22 "Curvas equipotenciais."});\par
437                                 plot2.unset_legend();\par
438                                 plot2.set_xlabel({\cf22 " "});\par
439                                 plot2.set_ylabel({\cf22 " "});\par
440                                 plot2.ShowOnScreen();\par
441                                 plot2.Grid();\par
442                                 plot2.PlotVector(xplot, yplot);\par
443                                 cin.get();\par
444                         \par
445                                 plot2.savetops({\cf22 "um-poco-injetor-dois-pocos-produtores-dykstra"});\par
446 \par
447                                 {\cf19 break};\par
448                             \}\par
449                         {\cf19 default}:\par
450                             cout << {\cf22 "Opcao invalidade!!!"} << endl << endl;      \par
451                             cout << {\cf22 "# Qual configura\'E7\'E3o de pocos deseja calcular?"} << endl;\par
452                             cout << {\cf22 "# 1 - 1 poco produtor e 1 injetor"} << endl;\par
453                             cout << {\cf22 "# 2 - 2 pocos injetores e 1 produtor"} << endl;\par
454                             cout << {\cf22 "# 3 - 1 poco injetor e 2 produtores"} << endl << endl;\par
455                             cin >> ans;\par
456                             cin.get();\par
457                     \}\par
458                     \}{\cf19 while}(!ans1);\par
459                       \par
460                     ecpot = {\cf17 true};\par
461                 \}{\cf19 else} {\cf19 if}( d =={\cf23 '2'})\{\par
462                     ecpot = {\cf17 true};\par
463                 \}{\cf19 else} \{\par
464                     cout << {\cf22 "opcao invalida!!!"} << endl;\par
465                 \}\par
466                     \par
467             \}{\cf19 while}(!ecpot);\par
468             \par
469             tes = {\cf17 true};\par
470             {\cf19 break};\par
471         \}\par
472         {\cf19 default}:\par
473             \{\par
474                 cout << {\cf22 "Opcao invalida!!"} << endl << endl;\par
475                 cout << {\cf22 "# qual metodo deseja utilizar?"} << endl << endl;\par
476                 cout << {\cf22 "# 1 - Stiles"} << endl;\par
477                 cout << {\cf22 "# 2 - Dikstra"} << endl << endl;\par
478                 \par
479                 cin >> handler;\par
480                 cin.get();\par
481                 \par
482             \}\par
483         \}\par
484         \}{\cf19 while}(!tes);\par
485         \par
486         corey.setK0rw(reservatorio.GetKrw());\par
487         corey.setK0ro(reservatorio.GetKro());\par
488         corey.setNo(2.0);\par
489         corey.setNw(2.0);\par
490         \par
491         corey.calcSwn(reservatorio.GetSwi(), reservatorio.GetSor());\par
492         corey.calcKro(corey.getSw());\par
493         corey.calcKrw(corey.getSw());\par
494         \par
495         cout << {\cf22 "# Gostaria de plotar os graficos de permeabilidade relativa de corey-brooks?"} << endl;\par
496         cout << {\cf22 "# 1 - sim, 2 - nao "} << endl << endl;\par
497         \par
498         {\cf18 char} e;\par
499         \par
500         cin >> e;\par
501         cin.get();\par
502         \par
503         {\cf18 bool} tes1 = {\cf17 false};\par
504         \par
505         {\cf19 do}\par
506         \{\par
507             \par
508             {\cf19 if} (e == {\cf23 '1'})\{\par
509                                 \par
510                 vector<double> _sw, _krw, _kro;\par
511                 \par
512                 _sw = corey.getSw();\par
513                 _krw = corey.getKrw();\par
514                 _kro = corey.getKro(); \par
515                 \par
516                 Gnuplot::Terminal({\cf22 "qt"});\par
517                 plot3.set_style({\cf22 "lines"});\par
518                 plot3.Title({\cf22 "Modelo de permeabilidade relativa de Corey-Brooks."});\par
519                 plot3.set_legend({\cf22 "inside center top box"});\par
520                 plot3.set_xlabel({\cf22 "Swn(satura\'E7\'E3o normalizada)"});\par
521                 plot3.set_ylabel({\cf22 "Kr"});\par
522                 plot3.ShowOnScreen();\par
523                 plot3.Grid();\par
524                 plot3.PlotVector(_sw, _krw, {\cf22 "Krw"});\par
525                 plot3.set_style({\cf22 "points"});\par
526                 plot3.PlotVector(_sw, _kro, {\cf22 "Kro"});\par
527                 \par
528                 cin.get();\par
529                         \par
530                 plot3.savetops({\cf22 "Permeabilidade-relativa-Corey-Brooks"});\par
531                 \par
532                 tes1 = {\cf17 true};\par
533             \}{\cf19 else}\par
534             {\cf19 if}(e == {\cf23 '2'})\{\par
535                 tes1 = {\cf17 true};\par
536             \} {\cf19 else}\{\par
537                 cout << {\cf22 "Opcao invalida!!!"} << endl << endl;\par
538                 cout << {\cf22 "# Gostaria de plotar os graficos de permeabilidade relativa de corey-brooks?"} << endl;\par
539                 cout << {\cf22 "# 1 - sim, 2 - nao "} << endl << endl;\par
540                 \par
541                 cin >> e;\par
542                 cin.get();\par
543                 \par
544             \}\par
545             \par
546         \}{\cf19 while}(!tes1);\par
547         \par
548         cout << {\cf22 "# Gostaria de plotar as curvas de fluxo fracionario?"} << endl;\par
549         cout << {\cf22 "# 1 - sim, 2 - nao "} << endl << endl;\par
550         \par
551         {\cf18 char} f;\par
552         \par
553         cin >> f;\par
554         cin.get();\par
555         \par
556         {\cf18 bool} tes2 = {\cf17 false};\par
557         \par
558         {\cf19 do}\par
559         \{\par
560             \par
561             {\cf19 if} (f == {\cf23 '1'})\{\par
562                                 \par
563                 fluxofracionario.calcFluxoFracionarioAgua(corey.getKrw(), corey.getKro(), camadas.GetMw(), camadas.GetMo());\par
564                 fluxofracionario.calcFluxoFracionarioOleo(corey.getKrw(), corey.getKro(), camadas.GetMw(), camadas.GetMo());\par
565                 \par
566                 vector<double> _fro, _frw, _sw;\par
567                 \par
568                 _sw = corey.getSw();\par
569                 _fro = fluxofracionario.getFluxoFracionarioOleo();\par
570                 _frw = fluxofracionario.getFluxoFracionarioAgua();\par
571                 \par
572                 Gnuplot::Terminal({\cf22 "qt"});\par
573                 plot4.set_style({\cf22 "lines"});\par
574                 plot4.Title({\cf22 "Fluxo fracionario de agua."});\par
575                 plot4.set_legend({\cf22 "inside center top box"});\par
576                 plot4.set_xlabel({\cf22 "Swn(satura\'E7\'E3o normalizada)"});\par
577                 plot4.set_ylabel({\cf22 "Frw"});\par
578                 plot4.ShowOnScreen();\par
579                 plot4.Grid();\par
580                 plot4.PlotVector(_sw, _frw, {\cf22 "Krw"});\par
581                 cin.get();\par
582                         \par
583                 plot4.savetops({\cf22 "Fluxo_fracionario_de_agua"});\par
584                 \par
585                 Gnuplot::Terminal({\cf22 "qt"});\par
586                 plot5.set_style({\cf22 "lines"});\par
587                 plot5.Title({\cf22 "Fluxo fracionario de oleo"});\par
588                 plot5.set_legend({\cf22 "inside center top box"});\par
589                 plot5.set_xlabel({\cf22 "Swn(satura\'E7\'E3o normalizada)"});\par
590                 plot5.set_ylabel({\cf22 "Fro"});\par
591                 plot5.ShowOnScreen();\par
592                 plot5.Grid();\par
593                 plot5.PlotVector(_sw, _fro, {\cf22 "Kro"});\par
594                 cin.get();\par
595                         \par
596                 plot5.savetops({\cf22 "Fluxo-fracionario-de-oleo"});\par
597                 \par
598                 \par
599                 tes2 = {\cf17 true};\par
600             \}{\cf19 else}\par
601             {\cf19 if}(f == {\cf23 '2'})\{\par
602                 tes2 = {\cf17 true};\par
603             \} {\cf19 else}\{\par
604                 cout << {\cf22 "Opcao invalida!!!"} << endl << endl;\par
605                 cout << {\cf22 "# Gostaria de plotar os graficos de permeabilidade relativa de corey-brooks?"} << endl;\par
606                 cout << {\cf22 "# 1 - sim, 2 - nao "} << endl << endl;\par
607                 \par
608                 cin >> e;\par
609                 cin.get();\par
610                 \par
611             \}\par
612             \par
613         \}{\cf19 while}(!tes2);      \par
614         \par
615         \} {\cf19 else} {\cf19 if}(c == {\cf23 '2'})\{\par
616             cout << endl;\par
617             cout << {\cf22 "Codigo encerrado!! "} << endl << endl;\par
618             rodar = {\cf17 false};\par
619             teste = {\cf17 true};\par
620         \} {\cf19 else} \{\par
621             cout << endl;\par
622             cout << {\cf22 "Opcao invalida!"} << endl;            \par
623         \}\par
624         \} {\cf19 while} (rodar);           \par
625 \par
626     \}\par
627     \par
628     \par
629 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Atributos\par
\pard\plain 
{\xe \v camadas\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:camadas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CReservatorioCamadas} CSolverInfluxo::camadas{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v corey\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:corey}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CCorey} CSolverInfluxo::corey{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v dykstra\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:dykstra}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CPosicaoAguaInjetadaDykstra} CSolverInfluxo::dykstra{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v fluxofracionario\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:fluxofracionario}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CFluxoFracionario} CSolverInfluxo::fluxofracionario{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v linhas\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:linhas}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CLinhasEquipotenciais}* CSolverInfluxo::linhas{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v oleo\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:oleo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b COleoProduzido} CSolverInfluxo::oleo{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plot\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:plot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CGnuplot} CSolverInfluxo::plot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plot1\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:plot1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CGnuplot} CSolverInfluxo::plot1{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plot2\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:plot2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CGnuplot} CSolverInfluxo::plot2{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plot3\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:plot3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CGnuplot} CSolverInfluxo::plot3{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plot4\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:plot4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CGnuplot} CSolverInfluxo::plot4{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v plot5\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:plot5}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CGnuplot} CSolverInfluxo::plot5{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v poco\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:poco}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CPoco} CSolverInfluxo::poco{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v reservatorio\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:reservatorio}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CReservatorio} CSolverInfluxo::reservatorio{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v stiles\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:stiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CPosicaoAguaInjetadaStiles} CSolverInfluxo::stiles{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v xplot\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:xplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CSolverInfluxo::xplot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v yplot\:CSolverInfluxo}
{\xe \v CSolverInfluxo\:yplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::vector<double> CSolverInfluxo::yplot{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CSolverInfluxo.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CSolverInfluxo.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe Gnuplot\par \pard\plain 
{\tc\tcl2 \v Gnuplot}
{\xe \v Gnuplot}
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot. }}\par
{
{\f2 #include <CGnuplot.h>}}\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::string &style="points")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, seta o estilo do grafico na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::vector< double > &x, const std::string &title="", const std::string &style="points", const std::string &labelx="x", const std::string &labely="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico a partir de um vector, diretamente na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::vector< double > &x, const std::vector< double > &y, const std::string &title="", const std::string &style="points", const std::string &labelx="x", const std::string &labely="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico do tipo x_y a partir de vetores, diretamente na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &z, const std::string &title="", const std::string &style="points", const std::string &labelx="x", const std::string &labely="y", const std::string &labelz="z")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico de x_y_z a partir de vetores, diretamente na construcao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~Gnuplot} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor, necessario para deletar arquivos temporarios. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b cmd} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Cmd} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Command} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b operator<<} (const std::string &cmdstr)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga operador <<, funciona como Comando. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b showonscreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ShowOnScreen} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b savetops} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, informe o nome do arquivo sem extensao. Depois retorna para modo terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b SaveTops} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, informe o nome do arquivo sem extensao Depois retorna para modo terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b savetopng} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo png, nome do arquivo sem extensao Depois retorna para modo terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b SaveTopng} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo png, nome do arquivo sem extensao Depois retorna para modo terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b savetojpeg} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo jpg, nome do arquivo sem extensao Depois retorna para modo terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b SaveTojpeg} (const std::string &filename="gnuplot_output")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo jpg, nome do arquivo sem extensao Depois retorna para modo terminal. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b SaveTo} (const std::string &filename, const std::string &terminal_type, std::string flags="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo filename, usando o terminal_type e algum flag adicional Ex: grafico.SaveTo("pressao_X_temperatura","png", "enhanced size 1280,960"); Para melhor uso dos flags adicionais consulte o manual do gnuplot (help term) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_style} (const std::string &stylestr="points")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Style} (const std::string &stylestr="points")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_smooth} (const std::string &stylestr="csplines")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_smooth} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Smooth} (const std::string &stylestr="csplines")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Smooth} (int _fsmooth)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_pointsize} (const double pointsize=1.0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PointSize} (const double pointsize=1.0)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escala o tamanho do ponto usado na plotagem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_grid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o grid (padrao = desativado). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_grid} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o grid (padrao = desativado). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Grid} (bool _fgrid=1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o grid (padrao = desativado). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_samples} (const int samples=100)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Samples} (const int samples=100)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_isosamples} (const int isolines=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b IsoSamples} (const int isolines=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_hidden3d} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_hidden3d} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Hidden3d} (bool _fhidden3d=1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_contour} (const std::string &position="base")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa desenho do contorno em superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_contour} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa desenho do contorno em superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Contour} (const std::string &position="base")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa desenho do contorno em superficies (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Contour} (int _fcontour)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_surface} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a visualizacao da superficie (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_surface} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a visualizacao da superficie (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Surface} (int _fsurface=1)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a visualizacao da superficie (para plotagen 3d). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_legend} (const std::string &position="default")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a legenda (a legenda \'E9 setada por padrao). Posicao: inside/outside, left/center/right, top/center/bottom, nobox/box. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_legend} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a legenda (a legenda \'E9 setada por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Legend} (const std::string &position="default")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Legend} (int _flegend)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_title} (const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o titulo da secao do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_title} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o titulo da secao do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Title} (const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o titulo da secao do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Title} (int _ftitle)\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_ylabel} (const std::string &label="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YLabel} (const std::string &label="y")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. Ex: set ylabel "\{/Symbol s\}[MPa]" font "Times Italic, 10". }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xlabel} (const std::string &label="x")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XLabel} (const std::string &label="x")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zlabel} (const std::string &label="z")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZLabel} (const std::string &label="z")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_yrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xautoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XAutoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_yautoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YAutoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zautoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZAutoscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_xlogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_xlogscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XLogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b XLogscale} (bool _fxlogscale)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo x (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_ylogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YLogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_ylogscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b YLogscale} (bool _fylogscale)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_zlogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZLogscale} (const double base=10)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b unset_zlogscale} ()\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo z (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ZLogscale} (bool _fzlogscale)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b set_cbrange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b CBRange} (const int iFrom, const int iTo)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_x} (const std::string &filename, const int column=1, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFile} (const std::string &filename, const int column=1, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_x} (const std::vector< double > &x, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVector} (const std::vector< double > &x, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_xy} (const std::string &filename, const int column_x=1, const int column_y=2, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFile} (const std::string &filename, const int column_x=1, const int column_y=2, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_xy} (const std::vector< double > &x, const std::vector< double > &y, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVector} (const std::vector< double > &x, const std::vector< double > &y, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_xy_err} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_dy=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFileXYErrorBar} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_dy=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_xy_err} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &dy, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVectorXYErrorBar} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &dy, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plotfile_xyz} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_z=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotFile} (const std::string &filename, const int column_x=1, const int column_y=2, const int column_z=3, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_xyz} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &z, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotVector} (const std::vector< double > &x, const std::vector< double > &y, const std::vector< double > &z, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_slope} (const double a, const double b, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotSlope} (const double a, const double b, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_equation} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x Os operadores binarios aceitos sao: ** exponenciacao,. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotEquation} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x. Exemplo: gnuplot->PlotEquation(CFuncao& obj); \par
 }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_equation3d} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as variaveis independentes sao x e y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotEquation3d} (const std::string &equation, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as vaiaveis independentes sao x e y. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b plot_image} (const unsigned char *ucPicBuf, const int iWidth, const int iHeight, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b PlotImage} (const unsigned char *ucPicBuf, const int iWidth, const int iHeight, const std::string &title="")\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b replot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Replot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b reset_plot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ResetPlot} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b Reset} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b reset_all} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Gnuplot} & {\b ResetAll} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b is_valid} ()\par
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b IsValid} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos Est\'E1ticos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b set_GNUPlotPath} (const std::string &path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static bool {\b Path} (const std::string &path)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b set_terminal_std} (const std::string &type)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Valores padroes (default): Windows - win, Linux - x11, Mac - aqua. }{
}\par
}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b Terminal} (const std::string &type)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Para retornar para terminal janela precisa chamar {\b ShowOnScreen()}. Valores padroes (default): Windows - win, Linux - x11 ou wxt (fedora9), Mac - aqua. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::string &  {\i style} = {\f2 "points"})}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, seta o estilo do grafico na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 196 \{\par
197     this->init();\par
198     this->set_style(style);\par
199 \}\par
}
}
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::vector< double > &  {\i x}, const std::string &  {\i title} = {\f2 ""}, const std::string &  {\i style} = {\f2 "points"}, const std::string &  {\i labelx} = {\f2 "x"}, const std::string &  {\i labely} = {\f2 "y"})}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico a partir de um vector, diretamente na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 208 \{\par
209     this->init();\par
210 \par
211     this->set_style(style);\par
212     this->set_xlabel(labelx);\par
213     this->set_ylabel(labely);\par
214 \par
215     this->plot_x(x,title);\par
216 \}\par
}
}
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::string &  {\i title} = {\f2 ""}, const std::string &  {\i style} = {\f2 "points"}, const std::string &  {\i labelx} = {\f2 "x"}, const std::string &  {\i labely} = {\f2 "y"})}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico do tipo x_y a partir de vetores, diretamente na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 226 \{\par
227     this->init();\par
228 \par
229     this->set_style(style);\par
230     this->set_xlabel(labelx);\par
231     this->set_ylabel(labely);\par
232 \par
233     this->plot_xy(x,y,title);\par
234 \}\par
}
}
{\xe \v Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::Gnuplot (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i z}, const std::string &  {\i title} = {\f2 ""}, const std::string &  {\i style} = {\f2 "points"}, const std::string &  {\i labelx} = {\f2 "x"}, const std::string &  {\i labely} = {\f2 "y"}, const std::string &  {\i labelz} = {\f2 "z"})}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor, plota um grafico de x_y_z a partir de vetores, diretamente na construcao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 246 \{\par
247     this->init();\par
248 \par
249     this->set_style(style);\par
250     this->set_xlabel(labelx);\par
251     this->set_ylabel(labely);\par
252     this->set_zlabel(labelz);\par
253 \par
254     this->plot_xyz(x,y,z,title);\par
255 \}\par
}
}
{\xe \v ~Gnuplot\:Gnuplot}
{\xe \v Gnuplot\:~Gnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Gnuplot::~Gnuplot ()}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Destrutor, necessario para deletar arquivos temporarios. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 260 \{\par
261     {\cf19 if} ((this->tmpfile_list).size() > 0)\par
262     \{\par
263         {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < this->tmpfile_list.size(); i++)\par
264             remove( this->tmpfile_list[i].c_str() );\par
265 \par
266         Gnuplot::tmpfile_num -= this->tmpfile_list.size();\par
267     \}\par
268 \par
269     {\cf20 // A stream opened by popen() should be closed by pclose()}\par
270 {\cf21 #if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__TOS_WIN__)}\par
271     {\cf19 if} (_pclose(this->gnucmd) == -1)\par
272 {\cf21 #elif defined(unix) || defined(__unix) || defined(__unix__) || defined(__APPLE__)}\par
273     {\cf19 if} (pclose(this->gnucmd) == -1)\par
274 {\cf21 #endif}\par
275         {\cf17 true};{\cf20 //throw GnuplotException("Problem closing communication to gnuplot");}\par
276 \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es membros\par
\pard\plain 
{\xe \v CBRange\:Gnuplot}
{\xe \v Gnuplot\:CBRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::CBRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 513                         \{ {\cf19 return} set_cbrange(iFrom, iTo); \}\par
}
}
{\xe \v cmd\:Gnuplot}
{\xe \v Gnuplot\:cmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::cmd (const std::string &  {\i cmdstr})}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1292 \{\par
1293     {\cf19 if}( !(this->valid) )\par
1294     \{\par
1295         {\cf19 return} *{\cf17 this};\par
1296     \}\par
1297 \par
1298     {\cf20 // int fputs ( const char * str, FILE * stream );}\par
1299     {\cf20 // writes the string str to the stream.}\par
1300     {\cf20 // The function begins copying from the address specified (str) until it reaches the}\par
1301     {\cf20 // terminating null character ('\\0'). This final null-character is not copied to the stream.}\par
1302     fputs( (cmdstr+{\cf22 "\\n"}).c_str(), this->gnucmd );\par
1303 \par
1304     {\cf20 // int fflush ( FILE * stream );}\par
1305     {\cf20 // If the given stream was open for writing and the last i/o operation was an output operation,}\par
1306     {\cf20 // any unwritten data in the output buffer is written to the file.}\par
1307     {\cf20 // If the argument is a null pointer, all open files are flushed.}\par
1308     {\cf20 // The stream remains open after this call.}\par
1309     fflush(this->gnucmd);\par
1310 \par
1311 \par
1312     {\cf19 if}( cmdstr.find({\cf22 "replot"}) != std::string::npos )\par
1313     \{\par
1314         {\cf19 return} *{\cf17 this};\par
1315     \}\par
1316     {\cf19 else} {\cf19 if}( cmdstr.find({\cf22 "splot"}) != std::string::npos )\par
1317     \{\par
1318         this->two_dim = {\cf17 false};\par
1319         this->nplots++;\par
1320     \}\par
1321     {\cf19 else} {\cf19 if}( cmdstr.find({\cf22 "plot"}) != std::string::npos )\par
1322     \{\par
1323         this->two_dim = {\cf17 true};\par
1324         this->nplots++;\par
1325     \}\par
1326     {\cf19 return} *{\cf17 this};\par
1327 \}\par
}
}
{\xe \v Cmd\:Gnuplot}
{\xe \v Gnuplot\:Cmd}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Cmd (const std::string &  {\i cmdstr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 189 \{ {\cf19 return} cmd(cmdstr); \}\par
}
}
{\xe \v Command\:Gnuplot}
{\xe \v Gnuplot\:Command}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Command (const std::string &  {\i cmdstr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Envia comando para o gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 192 \{ {\cf19 return} cmd(cmdstr); \}\par
}
}
{\xe \v Contour\:Gnuplot}
{\xe \v Gnuplot\:Contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Contour (const std::string &  {\i position} = {\f2 "base"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa desenho do contorno em superficies (para plotagen 3d). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base,surface,both.} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 332                                                 \{ {\cf19 return} set_contour(position); \} \par
}
}
{\xe \v Contour\:Gnuplot}
{\xe \v Gnuplot\:Contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Contour (int  {\i _fcontour}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 335                         \{ {\cf19 if}( fcontour = _fcontour )\par
336                               {\cf19 return} set_contour(); \par
337                           {\cf19 else} \par
338                               {\cf19 return} unset_contour();\par
339                                                 \}  \par
}
}
{\xe \v Grid\:Gnuplot}
{\xe \v Gnuplot\:Grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Grid (bool  {\i _fgrid} = {\f2 1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o grid (padrao = desativado). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 291                         \{ {\cf19 if}(fgrid = _fgrid) \par
292                             {\cf19 return} set_grid(); \par
293                           {\cf19 else} \par
294                             {\cf19 return} unset_grid(); \}\par
}
}
{\xe \v Hidden3d\:Gnuplot}
{\xe \v Gnuplot\:Hidden3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Hidden3d (bool  {\i _fhidden3d} = {\f2 1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 316                         \{ {\cf19 if}(fhidden3d = _fhidden3d) \par
317                               {\cf19 return} set_hidden3d(); \par
318                           {\cf19 else} \par
319                               {\cf19 return} unset_hidden3d();\par
320                         \}\par
}
}
{\xe \v is_valid\:Gnuplot}
{\xe \v Gnuplot\:is_valid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Gnuplot::is_valid ()}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 322 \{\par
323     {\cf19 return}(this->valid);\par
324 \}\par
}
}
{\xe \v IsoSamples\:Gnuplot}
{\xe \v Gnuplot\:IsoSamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::IsoSamples (const int  {\i isolines} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 306 \{ {\cf19 return} set_isosamples(isolines); \}\par
}
}
{\xe \v IsValid\:Gnuplot}
{\xe \v Gnuplot\:IsValid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Gnuplot::IsValid (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 695 \{ {\cf19 return} is_valid (); \};\par
}
}
{\xe \v Legend\:Gnuplot}
{\xe \v Gnuplot\:Legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Legend (const std::string &  {\i position} = {\f2 "default"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 362                                                 \{ {\cf19 return} set_legend(position); \}\par
}
}
{\xe \v Legend\:Gnuplot}
{\xe \v Gnuplot\:Legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Legend (int  {\i _flegend}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a legenda (a legenda \'E9 setada por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 366                         \{ {\cf19 if}(flegend = _flegend) \par
367                               {\cf19 return} set_legend(); \par
368                           {\cf19 else} \par
369                               {\cf19 return} unset_legend();\par
370                         \}\par
}
}
{\xe \v operator<<\:Gnuplot}
{\xe \v Gnuplot\:operator<<}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::operator<< (const std::string &  {\i cmdstr})}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sobrecarga operador <<, funciona como Comando. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1332 \{\par
1333     this->cmd(cmdstr);\par
1334     {\cf19 return} *{\cf17 this};\par
1335 \}\par
}
}
{\xe \v Path\:Gnuplot}
{\xe \v Gnuplot\:Path}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static bool Gnuplot::Path (const std::string &  {\i path}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 141 \{ {\cf19 return} set_GNUPlotPath(path); \}\par
}
}
{\xe \v plot_equation\:Gnuplot}
{\xe \v Gnuplot\:plot_equation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_equation (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x Os operadores binarios aceitos sao: ** exponenciacao,. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
multiplicacao, / divisao,\par}
adicao,{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
subtracao, % modulo Os operadores unarios aceitos sao:\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
menos, ! fatorial Funcoes elementares: rand(x), abs(x), sgn(x), ceil(x), floor(x), int(x), imag(x), real(x), arg(x), sqrt(x), exp(x), log(x), log10(x), sin(x), cos(x), tan(x), asin(x), acos(x), atan(x), atan2(y,x), sinh(x), cosh(x), tanh(x), asinh(x), acosh(x), atanh(x) Funcoes especiais: erf(x), erfc(x), inverf(x), gamma(x), igamma(a,x), lgamma(x), ibeta(p,q,x), besj0(x), besj1(x), besy0(x), besy1(x), lambertw(x) Funcoes estatisticas: norm(x), invnorm(x) \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 875 \{\par
876     std::ostringstream cmdstr;\par
877 \par
878     {\cf20 // command to be sent to gnuplot}\par
879     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
880         cmdstr << {\cf22 "replot "};\par
881     {\cf19 else}\par
882         cmdstr << {\cf22 "plot "};\par
883 \par
884     cmdstr << equation << {\cf22 " title \\""};\par
885 \par
886     {\cf19 if} (title == {\cf22 ""})\par
887         cmdstr << {\cf22 "f(x) = "} << equation;\par
888     {\cf19 else}\par
889         cmdstr << title;\par
890 \par
891     cmdstr << {\cf22 "\\" with "} << this->pstyle;\par
892 \par
893     {\cf20 // Do the actual plot}\par
894     this->cmd(cmdstr.str());\par
895 \par
896     {\cf19 return} *{\cf17 this};\par
897 \}\par
}
}
{\xe \v plot_equation3d\:Gnuplot}
{\xe \v Gnuplot\:plot_equation3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_equation3d (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as variaveis independentes sao x e y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 903 \{\par
904     std::ostringstream cmdstr;\par
905 \par
906     {\cf20 // command to be sent to gnuplot}\par
907     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 false})\par
908         cmdstr << {\cf22 "replot "};\par
909     {\cf19 else}\par
910         cmdstr << {\cf22 "splot "};\par
911 \par
912     cmdstr << equation << {\cf22 " title \\""};\par
913 \par
914     {\cf19 if} (title == {\cf22 ""})\par
915         cmdstr << {\cf22 "f(x,y) = "} << equation;\par
916     {\cf19 else}\par
917         cmdstr << title;\par
918 \par
919     cmdstr << {\cf22 "\\" with "} << this->pstyle;\par
920 \par
921     {\cf20 // Do the actual plot}\par
922     this->cmd(cmdstr.str());\par
923 \par
924     {\cf19 return} *{\cf17 this};\par
925 \}\par
}
}
{\xe \v plot_image\:Gnuplot}
{\xe \v Gnuplot\:plot_image}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_image (const unsigned char *  {\i ucPicBuf}, const int  {\i iWidth}, const int  {\i iHeight}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
note that this function is not valid for versions of GNUPlot below 4.2 \par}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1250 \{\par
1251     std::ofstream tmp;\par
1252     std::string name = create_tmpfile(tmp);\par
1253     {\cf19 if} (name == {\cf22 ""})\par
1254         {\cf19 return} *{\cf17 this};\par
1255 \par
1256     {\cf20 // write the data to file}\par
1257     {\cf18 int} iIndex = 0;\par
1258     {\cf19 for}({\cf18 int} iRow = 0; iRow < iHeight; iRow++)\par
1259     \{\par
1260         {\cf19 for}({\cf18 int} iColumn = 0; iColumn < iWidth; iColumn++)\par
1261         \{\par
1262             tmp << iColumn << {\cf22 " "} << iRow  << {\cf22 " "} << {\cf17 static_cast<}{\cf18 float}{\cf17 >}(ucPicBuf[iIndex++]) << std::endl;\par
1263         \}\par
1264     \}\par
1265 \par
1266     tmp.flush();\par
1267     tmp.close();\par
1268 \par
1269 \par
1270     std::ostringstream cmdstr;\par
1271 \par
1272     {\cf20 // command to be sent to gnuplot}\par
1273     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
1274         cmdstr << {\cf22 "replot "};\par
1275     {\cf19 else}\par
1276         cmdstr << {\cf22 "plot "};\par
1277 \par
1278     {\cf19 if} (title == {\cf22 ""})\par
1279         cmdstr << {\cf22 "\\""} << name << {\cf22 "\\" with image"};\par
1280     {\cf19 else}\par
1281         cmdstr << {\cf22 "\\""} << name << {\cf22 "\\" title \\""} << title << {\cf22 "\\" with image"};\par
1282 \par
1283     {\cf20 // Do the actual plot}\par
1284     this->cmd(cmdstr.str());\par
1285 \par
1286     {\cf19 return} *{\cf17 this};\par
1287 \}\par
}
}
{\xe \v plot_slope\:Gnuplot}
{\xe \v Gnuplot\:plot_slope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_slope (const double  {\i a}, const double  {\i b}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 847 \{\par
848     std::ostringstream cmdstr;\par
849 \par
850     {\cf20 // command to be sent to gnuplot}\par
851     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
852         cmdstr << {\cf22 "replot "};\par
853     {\cf19 else}\par
854         cmdstr << {\cf22 "plot "};\par
855 \par
856     cmdstr << a << {\cf22 " * x + "} << b << {\cf22 " title \\""};\par
857 \par
858     {\cf19 if} (title == {\cf22 ""})\par
859         cmdstr << {\cf22 "f(x) = "} << a << {\cf22 " * x + "} << b;\par
860     {\cf19 else}\par
861         cmdstr << title;\par
862 \par
863     cmdstr << {\cf22 "\\" with "} << this->pstyle;\par
864 \par
865     {\cf20 // Do the actual plot}\par
866     this->cmd(cmdstr.str());\par
867 \par
868     {\cf19 return} *{\cf17 this};\par
869 \}\par
}
}
{\xe \v plot_x\:Gnuplot}
{\xe \v Gnuplot\:plot_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_x (const std::vector< double > &  {\i x}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 975 \{\par
976     {\cf19 if} (x.size() == 0)\par
977     \{\par
978         {\cf19 throw} GnuplotException({\cf22 "std::vector too small"});\par
979         {\cf19 return} *{\cf17 this};\par
980     \}\par
981 \par
982     std::ofstream tmp;\par
983     std::string name = create_tmpfile(tmp);\par
984     {\cf19 if} (name == {\cf22 ""})\par
985         {\cf19 return} *{\cf17 this};\par
986 \par
987     {\cf20 // write the data to file}\par
988     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
989         tmp << x[i] << std::endl;\par
990 \par
991     tmp.flush();\par
992     tmp.close();\par
993 \par
994     this->plotfile_x(name, 1, title);\par
995 \par
996     {\cf19 return} *{\cf17 this};\par
997 \}\par
}
}
{\xe \v plot_xy\:Gnuplot}
{\xe \v Gnuplot\:plot_xy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_xy (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1049 \{\par
1050     {\cf19 if} (x.size() == 0 || y.size() == 0)\par
1051     \{\par
1052         {\cf19 throw} GnuplotException({\cf22 "std::vectors too small"});\par
1053         {\cf19 return} *{\cf17 this};\par
1054     \}\par
1055 \par
1056     {\cf19 if} (x.size() != y.size())\par
1057     \{\par
1058         {\cf19 throw} GnuplotException({\cf22 "Length of the std::vectors differs"});\par
1059         {\cf19 return} *{\cf17 this};\par
1060     \}\par
1061 \par
1062     std::ofstream tmp;\par
1063     std::string name = create_tmpfile(tmp);\par
1064     {\cf19 if} (name == {\cf22 ""})\par
1065         {\cf19 return} *{\cf17 this};\par
1066 \par
1067     {\cf20 // write the data to file}\par
1068     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
1069         tmp << x[i] << {\cf22 " "} << y[i] << std::endl;\par
1070 \par
1071     tmp.flush();\par
1072     tmp.close();\par
1073 \par
1074     this->plotfile_xy(name, 1, 2, title);\par
1075 \par
1076     {\cf19 return} *{\cf17 this};\par
1077 \}\par
}
}
{\xe \v plot_xy_err\:Gnuplot}
{\xe \v Gnuplot\:plot_xy_err}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_xy_err (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i dy}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1129 \{\par
1130     {\cf19 if} (x.size() == 0 || y.size() == 0 || dy.size() == 0)\par
1131     \{\par
1132         {\cf19 throw} GnuplotException({\cf22 "std::vectors too small"});\par
1133         {\cf19 return} *{\cf17 this};\par
1134     \}\par
1135 \par
1136     {\cf19 if} (x.size() != y.size() || y.size() != dy.size())\par
1137     \{\par
1138         {\cf19 throw} GnuplotException({\cf22 "Length of the std::vectors differs"});\par
1139         {\cf19 return} *{\cf17 this};\par
1140     \}\par
1141 \par
1142     std::ofstream tmp;\par
1143     std::string name = create_tmpfile(tmp);\par
1144     {\cf19 if} (name == {\cf22 ""})\par
1145         {\cf19 return} *{\cf17 this};\par
1146 \par
1147     {\cf20 // write the data to file}\par
1148     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
1149         tmp << x[i] << {\cf22 " "} << y[i] << {\cf22 " "} << dy[i] << std::endl;\par
1150 \par
1151     tmp.flush();\par
1152     tmp.close();\par
1153 \par
1154     {\cf20 // Do the actual plot}\par
1155     this->plotfile_xy_err(name, 1, 2, 3, title);\par
1156 \par
1157     {\cf19 return} *{\cf17 this};\par
1158 \}\par
}
}
{\xe \v plot_xyz\:Gnuplot}
{\xe \v Gnuplot\:plot_xyz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plot_xyz (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i z}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1208 \{\par
1209     {\cf19 if} (x.size() == 0 || y.size() == 0 || z.size() == 0)\par
1210     \{\par
1211         {\cf19 throw} GnuplotException({\cf22 "std::vectors too small"});\par
1212         {\cf19 return} *{\cf17 this};\par
1213     \}\par
1214 \par
1215     {\cf19 if} (x.size() != y.size() || x.size() != z.size())\par
1216     \{\par
1217         {\cf19 throw} GnuplotException({\cf22 "Length of the std::vectors differs"});\par
1218         {\cf19 return} *{\cf17 this};\par
1219     \}\par
1220 \par
1221 \par
1222     std::ofstream tmp;\par
1223     std::string name = create_tmpfile(tmp);\par
1224     {\cf19 if} (name == {\cf22 ""})\par
1225         {\cf19 return} *{\cf17 this};\par
1226 \par
1227     {\cf20 // write the data to file}\par
1228     {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < x.size(); i++)\par
1229     \{\par
1230         tmp << x[i] << {\cf22 " "} << y[i] << {\cf22 " "} << z[i] <<std::endl;\par
1231     \}\par
1232 \par
1233     tmp.flush();\par
1234     tmp.close();\par
1235 \par
1236 \par
1237     this->plotfile_xyz(name, 1, 2, 3, title);\par
1238 \par
1239     {\cf19 return} *{\cf17 this};\par
1240 \}\par
}
}
{\xe \v PlotEquation\:Gnuplot}
{\xe \v Gnuplot\:PlotEquation}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotEquation (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida como uma std::string y=f(x). Escrever somente a funcao f(x) e nao y= A variavel independente deve ser x. Exemplo: gnuplot->PlotEquation(CFuncao& obj); \par
 }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 643                           \{ {\cf19 return} plot_equation( equation, title ); \}\par
}
}
{\xe \v PlotEquation3d\:Gnuplot}
{\xe \v Gnuplot\:PlotEquation3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotEquation3d (const std::string &  {\i equation}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao fornecida na forma de uma std::string z=f(x,y). Escrever somente a funcao f(x,y) e nao z=, as vaiaveis independentes sao x e y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 654                           \{ {\cf19 return} plot_equation3d( equation, title ); \}\par
}
}
{\xe \v PlotFile\:Gnuplot}
{\xe \v Gnuplot\:PlotFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotFile (const std::string &  {\i filename}, const int  {\i column} = {\f2 1}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 523                         \{ {\cf19 return} plotfile_x(filename, column, title);   \}\par
}
}
{\xe \v PlotFile\:Gnuplot}
{\xe \v Gnuplot\:PlotFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotFile (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_z} = {\f2 3}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 590                             \{ {\cf19 return} plotfile_xyz(filename, column_x,\par
591                               column_y,column_z); \}\par
}
}
{\xe \v PlotFile\:Gnuplot}
{\xe \v Gnuplot\:PlotFile}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotFile (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 540                         \{ \par
541                         {\cf19 return} plotfile_xy(filename, column_x, column_y, title );\par
542                         \} \par
}
}
{\xe \v plotfile_x\:Gnuplot}
{\xe \v Gnuplot\:plotfile_x}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_x (const std::string &  {\i filename}, const int  {\i column} = {\f2 1}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 932 \{\par
933     {\cf20 // check if file exists}\par
934     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
935     \{\par
936         std::ostringstream except;\par
937         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
938             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
939         {\cf19 else}\par
940             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
941         {\cf19 throw} GnuplotException( except.str() );\par
942         {\cf19 return} *{\cf17 this};\par
943     \}\par
944 \par
945     std::ostringstream cmdstr;\par
946 \par
947     {\cf20 // command to be sent to gnuplot}\par
948     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
949         cmdstr << {\cf22 "replot "};\par
950     {\cf19 else}\par
951         cmdstr << {\cf22 "plot "};\par
952 \par
953     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column;\par
954 \par
955     {\cf19 if} (title == {\cf22 ""})\par
956         cmdstr << {\cf22 " notitle "};\par
957     {\cf19 else}\par
958         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" "};\par
959 \par
960     {\cf19 if}(smooth == {\cf22 ""})\par
961         cmdstr << {\cf22 "with "} << this->pstyle;\par
962     {\cf19 else}\par
963         cmdstr << {\cf22 "smooth "} << this->smooth;\par
964 \par
965     {\cf20 // Do the actual plot}\par
966     this->cmd(cmdstr.str()); {\cf20 //nplots++; two_dim = true;  already in this->cmd();}\par
967 \par
968     {\cf19 return} *{\cf17 this};\par
969 \}\par
}
}
{\xe \v plotfile_xy\:Gnuplot}
{\xe \v Gnuplot\:plotfile_xy}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_xy (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1005 \{\par
1006     {\cf20 // check if file exists}\par
1007     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
1008     \{\par
1009         std::ostringstream except;\par
1010         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
1011             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
1012         {\cf19 else}\par
1013             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
1014         {\cf19 throw} GnuplotException( except.str() );\par
1015         {\cf19 return} *{\cf17 this};\par
1016     \}\par
1017 \par
1018     std::ostringstream cmdstr;\par
1019 \par
1020     {\cf20 // command to be sent to gnuplot}\par
1021     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
1022         cmdstr << {\cf22 "replot "};\par
1023     {\cf19 else}\par
1024         cmdstr << {\cf22 "plot "};\par
1025 \par
1026     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column_x << {\cf22 ":"} << column_y;\par
1027 \par
1028     {\cf19 if} (title == {\cf22 ""})\par
1029         cmdstr << {\cf22 " notitle "};\par
1030     {\cf19 else}\par
1031         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" "};\par
1032 \par
1033     {\cf19 if}(smooth == {\cf22 ""})\par
1034         cmdstr << {\cf22 "with "} << this->pstyle;\par
1035     {\cf19 else}\par
1036         cmdstr << {\cf22 "smooth "} << this->smooth;\par
1037 \par
1038     {\cf20 // Do the actual plot}\par
1039     this->cmd(cmdstr.str());\par
1040 \par
1041     {\cf19 return} *{\cf17 this};\par
1042 \}\par
}
}
{\xe \v plotfile_xy_err\:Gnuplot}
{\xe \v Gnuplot\:plotfile_xy_err}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_xy_err (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_dy} = {\f2 3}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1086 \{\par
1087     {\cf20 // check if file exists}\par
1088     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
1089     \{\par
1090         std::ostringstream except;\par
1091         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
1092             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
1093         {\cf19 else}\par
1094             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
1095         {\cf19 throw} GnuplotException( except.str() );\par
1096         {\cf19 return} *{\cf17 this};\par
1097     \}\par
1098 \par
1099     std::ostringstream cmdstr;\par
1100 \par
1101     {\cf20 // command to be sent to gnuplot}\par
1102     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 true})\par
1103         cmdstr << {\cf22 "replot "};\par
1104     {\cf19 else}\par
1105         cmdstr << {\cf22 "plot "};\par
1106 \par
1107     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column_x << {\cf22 ":"} << column_y;\par
1108 \par
1109     {\cf19 if} (title == {\cf22 ""})\par
1110         cmdstr << {\cf22 " notitle "};\par
1111     {\cf19 else}\par
1112         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" "};\par
1113 \par
1114     cmdstr << {\cf22 "with "} << this->pstyle << {\cf22 ", \\""} << filename << {\cf22 "\\" using "}\par
1115            << column_x << {\cf22 ":"} << column_y << {\cf22 ":"} << column_dy << {\cf22 " notitle with errorbars"};\par
1116 \par
1117     {\cf20 // Do the actual plot}\par
1118     this->cmd(cmdstr.str());\par
1119 \par
1120     {\cf19 return} *{\cf17 this};\par
1121 \}\par
}
}
{\xe \v plotfile_xyz\:Gnuplot}
{\xe \v Gnuplot\:plotfile_xyz}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::plotfile_xyz (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_z} = {\f2 3}, const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de um arquivo de disco. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1167 \{\par
1168 \par
1169     {\cf20 // check if file exists}\par
1170     {\cf19 if}( !(Gnuplot::file_exists(filename,4)) ) {\cf20 // check existence and read permission}\par
1171     \{\par
1172         std::ostringstream except;\par
1173         {\cf19 if}( !(Gnuplot::file_exists(filename,0)) ) {\cf20 // check existence}\par
1174             except << {\cf22 "File \\""} << filename << {\cf22 "\\" does not exist"};\par
1175         {\cf19 else}\par
1176             except << {\cf22 "No read permission for File \\""} << filename << {\cf22 "\\""};\par
1177         {\cf19 throw} GnuplotException( except.str() );\par
1178         {\cf19 return} *{\cf17 this};\par
1179     \}\par
1180 \par
1181     std::ostringstream cmdstr;\par
1182 \par
1183     {\cf20 // command to be sent to gnuplot}\par
1184     {\cf19 if} (this->nplots > 0  &&  this->two_dim == {\cf17 false})\par
1185         cmdstr << {\cf22 "replot "};\par
1186     {\cf19 else}\par
1187         cmdstr << {\cf22 "splot "};\par
1188 \par
1189     cmdstr << {\cf22 "\\""} << filename << {\cf22 "\\" using "} << column_x << {\cf22 ":"} << column_y << {\cf22 ":"} << column_z;\par
1190 \par
1191     {\cf19 if} (title == {\cf22 ""})\par
1192         cmdstr << {\cf22 " notitle with "} << this->pstyle;\par
1193     {\cf19 else}\par
1194         cmdstr << {\cf22 " title \\""} << title << {\cf22 "\\" with "} << this->pstyle;\par
1195 \par
1196     {\cf20 // Do the actual plot}\par
1197     this->cmd(cmdstr.str());\par
1198 \par
1199     {\cf19 return} *{\cf17 this};\par
1200 \}\par
}
}
{\xe \v PlotFileXYErrorBar\:Gnuplot}
{\xe \v Gnuplot\:PlotFileXYErrorBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotFileXYErrorBar (const std::string &  {\i filename}, const int  {\i column_x} = {\f2 1}, const int  {\i column_y} = {\f2 2}, const int  {\i column_dy} = {\f2 3}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de um arquivo. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 564                           \{ {\cf19 return} plotfile_xy_err(filename,\par
565                             column_x, column_y, column_dy, title ); \} \par
}
}
{\xe \v PlotImage\:Gnuplot}
{\xe \v Gnuplot\:PlotImage}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotImage (const unsigned char *  {\i ucPicBuf}, const int  {\i iWidth}, const int  {\i iHeight}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma imagem. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 663                                               \{ {\cf19 return} plot_image (ucPicBuf, iWidth, iHeight, title); \}\par
}
}
{\xe \v PlotSlope\:Gnuplot}
{\xe \v Gnuplot\:PlotSlope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotSlope (const double  {\i a}, const double  {\i b}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota uma equacao da forma y = ax + b, voce fornece os coeficientes a e b. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 609                             \{ {\cf19 return} plot_slope(a,b,title); \}\par
}
}
{\xe \v PlotVector\:Gnuplot}
{\xe \v Gnuplot\:PlotVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotVector (const std::vector< double > &  {\i x}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota dados de um vector. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 530                         \{ {\cf19 return} plot_x( x, title ); \} \par
}
}
{\xe \v PlotVector\:Gnuplot}
{\xe \v Gnuplot\:PlotVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotVector (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 551                         \{ {\cf19 return} plot_xy ( x, y,title ); \}\par
}
}
{\xe \v PlotVector\:Gnuplot}
{\xe \v Gnuplot\:PlotVector}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotVector (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i z}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota valores de x,y,z a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 602                             \{ {\cf19 return} plot_xyz(x, y, z, title); \}\par
}
}
{\xe \v PlotVectorXYErrorBar\:Gnuplot}
{\xe \v Gnuplot\:PlotVectorXYErrorBar}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PlotVectorXYErrorBar (const std::vector< double > &  {\i x}, const std::vector< double > &  {\i y}, const std::vector< double > &  {\i dy}, const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Plota pares x,y com barra de erro dy a partir de vetores. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 578                             \{ {\cf19 return} plot_xy_err(x, y, dy, title); \}\par
}
}
{\xe \v PointSize\:Gnuplot}
{\xe \v Gnuplot\:PointSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::PointSize (const double  {\i pointsize} = {\f2 1.0}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escala o tamanho do ponto usado na plotagem. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 281                         \{ {\cf19 return} set_pointsize(pointsize); \}\par
}
}
{\xe \v replot\:Gnuplot}
{\xe \v Gnuplot\:replot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::replot ()}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 329 \{\par
330     {\cf19 if} (this->nplots > 0)\par
331     \{\par
332         this->cmd({\cf22 "replot"});\par
333     \}\par
334 \par
335     {\cf19 return} *{\cf17 this};\par
336 \}\par
}
}
{\xe \v Replot\:Gnuplot}
{\xe \v Gnuplot\:Replot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Replot (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 674 \{ {\cf19 return} replot(); \}\par
}
}
{\xe \v Reset\:Gnuplot}
{\xe \v Gnuplot\:Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Reset (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 683 \{ this->cmd({\cf22 "reset"}); {\cf19 return} *{\cf17 this}; \}\par
}
}
{\xe \v reset_all\:Gnuplot}
{\xe \v Gnuplot\:reset_all}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::reset_all ()}}
\par
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 299 \{\par
300     {\cf19 if} (this->tmpfile_list.size() > 0)\par
301     \{\par
302         {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < this->tmpfile_list.size(); i++)\par
303             remove(this->tmpfile_list[i].c_str());\par
304 \par
305         Gnuplot::tmpfile_num -= this->tmpfile_list.size();\par
306         this->tmpfile_list.clear();\par
307     \}\par
308 \par
309     this->nplots = 0;\par
310     this->cmd({\cf22 "reset"});\par
311     this->cmd({\cf22 "clear"});\par
312     this->pstyle = {\cf22 "points"};\par
313     this->smooth = {\cf22 ""};\par
314     this->showonscreen();\par
315 \par
316     {\cf19 return} *{\cf17 this};\par
317 \}\par
}
}
{\xe \v reset_plot\:Gnuplot}
{\xe \v Gnuplot\:reset_plot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::reset_plot ()}}
\par
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 281 \{\par
282     {\cf19 if} (this->tmpfile_list.size() > 0)\par
283     \{\par
284         {\cf19 for} ({\cf18 unsigned} {\cf18 int} i = 0; i < this->tmpfile_list.size(); i++)\par
285             remove(this->tmpfile_list[i].c_str());\par
286 \par
287         Gnuplot::tmpfile_num -= this->tmpfile_list.size();\par
288         this->tmpfile_list.clear();\par
289     \}\par
290 \par
291     this->nplots = 0;\par
292 \par
293     {\cf19 return} *{\cf17 this};\par
294 \}\par
}
}
{\xe \v ResetAll\:Gnuplot}
{\xe \v Gnuplot\:ResetAll}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ResetAll (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 689 \{ {\cf19 return} reset_all(); \}\par
}
}
{\xe \v ResetPlot\:Gnuplot}
{\xe \v Gnuplot\:ResetPlot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ResetPlot (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 680 \{ {\cf19 return} reset_plot(); \}\par
}
}
{\xe \v Samples\:Gnuplot}
{\xe \v Gnuplot\:Samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Samples (const int  {\i samples} = {\f2 100}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 300 \{ {\cf19 return} set_samples(samples); \}\par
}
}
{\xe \v SaveTo\:Gnuplot}
{\xe \v Gnuplot\:SaveTo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::SaveTo (const std::string &  {\i filename}, const std::string &  {\i terminal_type}, std::string  {\i flags} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo filename, usando o terminal_type e algum flag adicional Ex: grafico.SaveTo("pressao_X_temperatura","png", "enhanced size 1280,960"); Para melhor uso dos flags adicionais consulte o manual do gnuplot (help term) }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 492 \{                                                       {\cf20 // Muda o terminal}\par
493     this->cmd({\cf22 "set term "} + terminal_type + {\cf22 " "} + flags);    {\cf20 // Tipo de terminal (tipo de arquivo) e flags adicionais}\par
494     std::ostringstream cmdstr;                          {\cf20 // Muda o nome do arquivo}\par
495     cmdstr << {\cf22 "set output \\""} << filename << {\cf22 "."} << terminal_type << {\cf22 "\\""};\par
496     this->cmd(cmdstr.str());\par
497     this->replot();                                     {\cf20 // Replota o gr\'EF\'BF\'BDfico, agora salvando o arquivo ps}\par
498                                                         {\cf20 // Retorna o terminal para o padr\'EF\'BF\'BDo janela}\par
499     ShowOnScreen ();   \par
500     this->replot();                                     {\cf20 // Replota o gr\'EF\'BF\'BDfico, agora na tela}\par
501    \par
502     {\cf19 return} *{\cf17 this};\par
503 \}\par
}
}
{\xe \v savetojpeg\:Gnuplot}
{\xe \v Gnuplot\:savetojpeg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::savetojpeg (const std::string &  {\i filename} = {\f2 "gnuplot_output"})}}
\par
{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo jpg, nome do arquivo sem extensao Depois retorna para modo terminal. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 466 \{   \par
467                                                         {\cf20 // Muda o terminal}\par
468 {\cf20 //     this->cmd("set term jpeg enhanced size 1280,960");   // Tipo de terminal (tipo de arquivo)}\par
469 {\cf20 // }\par
470 {\cf20 //     std::ostringstream cmdstr;                          // Muda o nome do arquivo}\par
471 {\cf20 //     cmdstr << "set output \\"" << filename << ".jpeg\\"";  // Nome do arquivo}\par
472 {\cf20 //     this->cmd(cmdstr.str());}\par
473 {\cf20 //     this->replot();                                     // Replota o gr\'EF\'BF\'BDfico, agora salvando o arquivo ps}\par
474 {\cf20 //                                                         // Retorna o terminal para o padr\'EF\'BF\'BDo janela}\par
475 {\cf20 //     ShowOnScreen ();                                    // Volta para terminal modo janela}\par
476 {\cf20 //     this->replot();                                     // Replota o gr\'EF\'BF\'BDfico, agora na tela}\par
477     SaveTo(filename,{\cf22 "jpeg"}, {\cf22 "enhanced size 1280,960"});\par
478     \par
479     {\cf19 return} *{\cf17 this};\par
480 \}\par
}
}
{\xe \v SaveTojpeg\:Gnuplot}
{\xe \v Gnuplot\:SaveTojpeg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::SaveTojpeg (const std::string &  {\i filename} = {\f2 "gnuplot_output"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo jpg, nome do arquivo sem extensao Depois retorna para modo terminal. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 229                                       \{ {\cf19 return} savetojpeg(filename); \}\par
}
}
{\xe \v savetopng\:Gnuplot}
{\xe \v Gnuplot\:savetopng}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::savetopng (const std::string &  {\i filename} = {\f2 "gnuplot_output"})}}
\par
{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo png, nome do arquivo sem extensao Depois retorna para modo terminal. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 447 \{   \par
448 {\cf20 //                                                         // Muda o terminal}\par
449 {\cf20 //     this->cmd("set term png enhanced size 1280,960");   // Tipo de terminal (tipo de arquivo)}\par
450 {\cf20 // }\par
451 {\cf20 //     std::ostringstream cmdstr;                          // Muda o nome do arquivo}\par
452 {\cf20 //     cmdstr << "set output \\"" << filename << ".png\\"";  // Nome do arquivo}\par
453 {\cf20 //     this->cmd(cmdstr.str());}\par
454 {\cf20 //     this->replot();                                     // Replota o gr\'EF\'BF\'BDfico, agora salvando o arquivo ps}\par
455 {\cf20 //                                                         // Retorna o terminal para o padr\'EF\'BF\'BDo janela}\par
456 {\cf20 //     ShowOnScreen ();                                    // Volta para terminal modo janela}\par
457 {\cf20 //     this->replot();                                     // Replota o gr\'EF\'BF\'BDfico, agora na tela}\par
458     SaveTo({\cf22 "./out/"}+filename,{\cf22 "png"}, {\cf22 "enhanced size 1280,960"});\par
459     \par
460     {\cf19 return} *{\cf17 this};\par
461 \}\par
}
}
{\xe \v SaveTopng\:Gnuplot}
{\xe \v Gnuplot\:SaveTopng}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::SaveTopng (const std::string &  {\i filename} = {\f2 "gnuplot_output"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo png, nome do arquivo sem extensao Depois retorna para modo terminal. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 220                                       \{ {\cf19 return} savetopng(filename); \}\par
}
}
{\xe \v savetops\:Gnuplot}
{\xe \v Gnuplot\:savetops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::savetops (const std::string &  {\i filename} = {\f2 "gnuplot_output"})}}
\par
{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, informe o nome do arquivo sem extensao. Depois retorna para modo terminal. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 425 \{\par
426 {\cf20 //     this->cmd("set terminal postscript color");         // Tipo de terminal (tipo de arquivo)}\par
427 {\cf20 // }\par
428 {\cf20 //     std::ostringstream cmdstr;                          // Muda o nome do arquivo}\par
429 {\cf20 //     cmdstr << "set output \\"" << filename << ".ps\\"";   // Nome do arquivo}\par
430 {\cf20 //     this->cmd(cmdstr.str());}\par
431 {\cf20 //     this->replot();                                     // Replota o gr\'EF\'BF\'BDfico, agora salvando o arquivo ps}\par
432 {\cf20 // }\par
433 {\cf20 //     ShowOnScreen ();                                    // Volta para terminal modo janela}\par
434 \par
435     this->cmd({\cf22 "set terminal png size 1800,1200"});\par
436 \par
437    {\cf20 // std::ostringstream cmdstr;}\par
438     this->cmd({\cf22 "  set output \\"./out/"}+filename + {\cf22 ".png\\""});\par
439     {\cf20 //this->cmd(cmdstr.str());}\par
440     this->Replot();\par
441 \par
442     {\cf19 return} *{\cf17 this};\par
443 \}\par
}
}
{\xe \v SaveTops\:Gnuplot}
{\xe \v Gnuplot\:SaveTops}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::SaveTops (const std::string &  {\i filename} = {\f2 "gnuplot_output"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Salva sessao do gnuplot para um arquivo postscript, informe o nome do arquivo sem extensao Depois retorna para modo terminal. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 211                                       \{ {\cf19 return} savetops(filename); \}\par
}
}
{\xe \v set_cbrange\:Gnuplot}
{\xe \v Gnuplot\:set_cbrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_cbrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo da palette (autoscale por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 832 \{\par
833     std::ostringstream cmdstr;\par
834 \par
835     cmdstr << {\cf22 "set cbrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
836     this->cmd(cmdstr.str());\par
837 \par
838     {\cf19 return} *{\cf17 this};\par
839 \}\par
}
}
{\xe \v set_contour\:Gnuplot}
{\xe \v Gnuplot\:set_contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_contour (const std::string &  {\i position} = {\f2 "base"})}}
\par
{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa desenho do contorno em superficies (para plotagen 3d). }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Par\'E2metros\par}
\pard\plain \s81\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{{\i base,surface,both.} \cell }{\cell }
{\row }
}
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 659 \{\par
660     {\cf19 if} (position.find({\cf22 "base"})    == std::string::npos  &&\par
661         position.find({\cf22 "surface"}) == std::string::npos  &&\par
662         position.find({\cf22 "both"})    == std::string::npos  )\par
663     \{\par
664         this->cmd({\cf22 "set contour base"});\par
665     \}\par
666     {\cf19 else}\par
667     \{\par
668         this->cmd({\cf22 "set contour "} + position);\par
669     \}\par
670 \par
671     {\cf19 return} *{\cf17 this};\par
672 \}\par
}
}
{\xe \v set_GNUPlotPath\:Gnuplot}
{\xe \v Gnuplot\:set_GNUPlotPath}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Gnuplot::set_GNUPlotPath (const std::string &  {\i path}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta caminho para path do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 117 \{\par
118     std::string tmp = path + {\cf22 "/"} + Gnuplot::m_sGNUPlotFileName;\par
119 {\cf21 #if defined(WIN32) || defined(_WIN32) || defined(__WIN32__) || defined(__TOS_WIN__)}\par
120     {\cf19 if} ( Gnuplot::file_exists(tmp,0) ) {\cf20 // check existence}\par
121 {\cf21 #elif defined(unix) || defined(__unix) || defined(__unix__) || defined(__APPLE__)}\par
122     {\cf19 if} ( Gnuplot::file_exists(tmp,1) ) {\cf20 // check existence and execution permission}\par
123 {\cf21 #endif}\par
124     \{\par
125         Gnuplot::m_sGNUPlotPath = path;\par
126         {\cf19 return} {\cf17 true};\par
127     \}\par
128     {\cf19 else}\par
129     \{\par
130         Gnuplot::m_sGNUPlotPath.clear();\par
131         {\cf19 return} {\cf17 false};\par
132     \}\par
133 \}\par
}
}
{\xe \v set_grid\:Gnuplot}
{\xe \v Gnuplot\:set_grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_grid ()}}
\par
{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o grid (padrao = desativado). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 529 \{\par
530     this->cmd({\cf22 "set grid"});\par
531 \par
532     {\cf19 return} *{\cf17 this};\par
533 \}\par
}
}
{\xe \v set_hidden3d\:Gnuplot}
{\xe \v Gnuplot\:set_hidden3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_hidden3d ()}}
\par
{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 641 \{\par
642     this->cmd({\cf22 "set hidden3d"});\par
643 \par
644     {\cf19 return} *{\cf17 this};\par
645 \}\par
}
}
{\xe \v set_isosamples\:Gnuplot}
{\xe \v Gnuplot\:set_isosamples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_isosamples (const int  {\i isolines} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta densidade de isolinhas para plotagem de funcoes como superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 630 \{\par
631     std::ostringstream cmdstr;\par
632     cmdstr << {\cf22 "set isosamples "} << isolines;\par
633     this->cmd(cmdstr.str());\par
634 \par
635     {\cf19 return} *{\cf17 this};\par
636 \}\par
}
}
{\xe \v set_legend\:Gnuplot}
{\xe \v Gnuplot\:set_legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_legend (const std::string &  {\i position} = {\f2 "default"})}}
\par
{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a legenda (a legenda \'E9 setada por padrao). Posicao: inside/outside, left/center/right, top/center/bottom, nobox/box. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 508 \{\par
509     std::ostringstream cmdstr;\par
510     cmdstr << {\cf22 "set key "} << position;\par
511 \par
512     this->cmd(cmdstr.str());\par
513 \par
514     {\cf19 return} *{\cf17 this};\par
515 \}\par
}
}
{\xe \v set_pointsize\:Gnuplot}
{\xe \v Gnuplot\:set_pointsize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_pointsize (const double  {\i pointsize} = {\f2 1.0})}}
\par
{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Escala o tamanho do ponto usado na plotagem. \par
}{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 608 \{\par
609     std::ostringstream cmdstr;\par
610     cmdstr << {\cf22 "set pointsize "} << pointsize;\par
611     this->cmd(cmdstr.str());\par
612 \par
613     {\cf19 return} *{\cf17 this};\par
614 \}\par
}
}
{\xe \v set_samples\:Gnuplot}
{\xe \v Gnuplot\:set_samples}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_samples (const int  {\i samples} = {\f2 100})}}
\par
{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta taxa de amostragem das funcoes, ou dos dados de interpolacao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 619 \{\par
620     std::ostringstream cmdstr;\par
621     cmdstr << {\cf22 "set samples "} << samples;\par
622     this->cmd(cmdstr.str());\par
623 \par
624     {\cf19 return} *{\cf17 this};\par
625 \}\par
}
}
{\xe \v set_smooth\:Gnuplot}
{\xe \v Gnuplot\:set_smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_smooth (const std::string &  {\i stylestr} = {\f2 "csplines"})}}
\par
{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 385 \{\par
386     {\cf19 if} (stylestr.find({\cf22 "unique"})    == std::string::npos  &&\par
387         stylestr.find({\cf22 "frequency"}) == std::string::npos  &&\par
388         stylestr.find({\cf22 "csplines"})  == std::string::npos  &&\par
389         stylestr.find({\cf22 "acsplines"}) == std::string::npos  &&\par
390         stylestr.find({\cf22 "bezier"})    == std::string::npos  &&\par
391         stylestr.find({\cf22 "sbezier"})   == std::string::npos  )\par
392     \{\par
393         this->smooth = {\cf22 ""};\par
394     \}\par
395     {\cf19 else}\par
396     \{\par
397         this->smooth = stylestr;\par
398     \}\par
399 \par
400     {\cf19 return} *{\cf17 this};\par
401 \}\par
}
}
{\xe \v set_style\:Gnuplot}
{\xe \v Gnuplot\:set_style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_style (const std::string &  {\i stylestr} = {\f2 "points"})}}
\par
{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 342 \{\par
343     {\cf19 if} (stylestr.find({\cf22 "lines"})          == std::string::npos  &&\par
344         stylestr.find({\cf22 "points"})         == std::string::npos  &&\par
345         stylestr.find({\cf22 "linespoints"})    == std::string::npos  &&\par
346         stylestr.find({\cf22 "impulses"})       == std::string::npos  &&\par
347         stylestr.find({\cf22 "dots"})           == std::string::npos  &&\par
348         stylestr.find({\cf22 "steps"})          == std::string::npos  &&\par
349         stylestr.find({\cf22 "fsteps"})         == std::string::npos  &&\par
350         stylestr.find({\cf22 "histeps"})        == std::string::npos  &&\par
351         stylestr.find({\cf22 "boxes"})          == std::string::npos  &&  {\cf20 // 1-4 columns of data are required}\par
352         stylestr.find({\cf22 "filledcurves"})   == std::string::npos  &&\par
353         stylestr.find({\cf22 "histograms"})     == std::string::npos  )   {\cf20 //only for one data column}\par
354 {\cf20 //        stylestr.find("labels")         == std::string::npos  &&  // 3 columns of data are required}\par
355 {\cf20 //        stylestr.find("xerrorbars")     == std::string::npos  &&  // 3-4 columns of data are required}\par
356 {\cf20 //        stylestr.find("xerrorlines")    == std::string::npos  &&  // 3-4 columns of data are required}\par
357 {\cf20 //        stylestr.find("errorbars")      == std::string::npos  &&  // 3-4 columns of data are required}\par
358 {\cf20 //        stylestr.find("errorlines")     == std::string::npos  &&  // 3-4 columns of data are required}\par
359 {\cf20 //        stylestr.find("yerrorbars")     == std::string::npos  &&  // 3-4 columns of data are required}\par
360 {\cf20 //        stylestr.find("yerrorlines")    == std::string::npos  &&  // 3-4 columns of data are required}\par
361 {\cf20 //        stylestr.find("boxerrorbars")   == std::string::npos  &&  // 3-5 columns of data are required}\par
362 {\cf20 //        stylestr.find("xyerrorbars")    == std::string::npos  &&  // 4,6,7 columns of data are required}\par
363 {\cf20 //        stylestr.find("xyerrorlines")   == std::string::npos  &&  // 4,6,7 columns of data are required}\par
364 {\cf20 //        stylestr.find("boxxyerrorbars") == std::string::npos  &&  // 4,6,7 columns of data are required}\par
365 {\cf20 //        stylestr.find("financebars")    == std::string::npos  &&  // 5 columns of data are required}\par
366 {\cf20 //        stylestr.find("candlesticks")   == std::string::npos  &&  // 5 columns of data are required}\par
367 {\cf20 //        stylestr.find("vectors")        == std::string::npos  &&}\par
368 {\cf20 //        stylestr.find("image")          == std::string::npos  &&}\par
369 {\cf20 //        stylestr.find("rgbimage")       == std::string::npos  &&}\par
370 {\cf20 //        stylestr.find("pm3d")           == std::string::npos  )}\par
371     \{\par
372         this->pstyle = std::string({\cf22 "points"});\par
373     \}\par
374     {\cf19 else}\par
375     \{\par
376         this->pstyle = stylestr;\par
377     \}\par
378 \par
379     {\cf19 return} *{\cf17 this};\par
380 \}\par
}
}
{\xe \v set_surface\:Gnuplot}
{\xe \v Gnuplot\:set_surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_surface ()}}
\par
{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa a visualizacao da superficie (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 686 \{\par
687     this->cmd({\cf22 "set surface"});\par
688 \par
689     {\cf19 return} *{\cf17 this};\par
690 \}\par
}
}
{\xe \v set_terminal_std\:Gnuplot}
{\xe \v Gnuplot\:set_terminal_std}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Gnuplot::set_terminal_std (const std::string &  {\i type}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Valores padroes (default): Windows - win, Linux - x11, Mac - aqua. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 139 \{\par
140 {\cf21 #if defined(unix) || defined(__unix) || defined(__unix__) || defined(__APPLE__)}\par
141     {\cf19 if} (type.find({\cf22 "x11"}) != std::string::npos && getenv({\cf22 "DISPLAY"}) == NULL)\par
142     \{\par
143         {\cf19 throw} GnuplotException({\cf22 "Can't find DISPLAY variable"});\par
144     \}\par
145 {\cf21 #endif}\par
146 \par
147 \par
148     Gnuplot::terminal_std = type;\par
149     {\cf19 return};\par
150 \}\par
}
}
{\xe \v set_title\:Gnuplot}
{\xe \v Gnuplot\:set_title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_title (const std::string &  {\i title} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa o titulo da secao do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 704 \{\par
705     std::ostringstream cmdstr;\par
706 \par
707     cmdstr << {\cf22 "set title \\""} << title << {\cf22 "\\""};\par
708     this->cmd(cmdstr.str());\par
709 \par
710     {\cf19 return} *{\cf17 this};\par
711 \}\par
}
}
{\xe \v set_xautoscale\:Gnuplot}
{\xe \v Gnuplot\:set_xautoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xautoscale ()}}
\par
{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 776 \{\par
777     this->cmd({\cf22 "set xrange restore"});\par
778     this->cmd({\cf22 "set autoscale x"});\par
779 \par
780     {\cf19 return} *{\cf17 this};\par
781 \}\par
}
}
{\xe \v set_xlabel\:Gnuplot}
{\xe \v Gnuplot\:set_xlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xlabel (const std::string &  {\i label} = {\f2 "x"})}}
\par
{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 726 \{\par
727     std::ostringstream cmdstr;\par
728 \par
729     cmdstr << {\cf22 "set xlabel \\""} << label << {\cf22 "\\""};\par
730     this->cmd(cmdstr.str());\par
731 \par
732     {\cf19 return} *{\cf17 this};\par
733 \}\par
}
}
{\xe \v set_xlogscale\:Gnuplot}
{\xe \v Gnuplot\:set_xlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xlogscale (const double  {\i base} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 547 \{\par
548     std::ostringstream cmdstr;\par
549 \par
550     cmdstr << {\cf22 "set logscale x "} << base;\par
551     this->cmd(cmdstr.str());\par
552 \par
553     {\cf19 return} *{\cf17 this};\par
554 \}\par
}
}
{\xe \v set_xrange\:Gnuplot}
{\xe \v Gnuplot\:set_xrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_xrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 764 \{\par
765     std::ostringstream cmdstr;\par
766 \par
767     cmdstr << {\cf22 "set xrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
768     this->cmd(cmdstr.str());\par
769 \par
770     {\cf19 return} *{\cf17 this};\par
771 \}\par
}
}
{\xe \v set_yautoscale\:Gnuplot}
{\xe \v Gnuplot\:set_yautoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_yautoscale ()}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 798 \{\par
799     this->cmd({\cf22 "set yrange restore"});\par
800     this->cmd({\cf22 "set autoscale y"});\par
801 \par
802     {\cf19 return} *{\cf17 this};\par
803 \}\par
}
}
{\xe \v set_ylabel\:Gnuplot}
{\xe \v Gnuplot\:set_ylabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_ylabel (const std::string &  {\i label} = {\f2 "y"})}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 738 \{\par
739     std::ostringstream cmdstr;\par
740 \par
741     cmdstr << {\cf22 "set ylabel \\""} << label << {\cf22 "\\""};\par
742     this->cmd(cmdstr.str());\par
743 \par
744     {\cf19 return} *{\cf17 this};\par
745 \}\par
}
}
{\xe \v set_ylogscale\:Gnuplot}
{\xe \v Gnuplot\:set_ylogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_ylogscale (const double  {\i base} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 559 \{\par
560     std::ostringstream cmdstr;\par
561 \par
562     cmdstr << {\cf22 "set logscale y "} << base;\par
563     this->cmd(cmdstr.str());\par
564 \par
565     {\cf19 return} *{\cf17 this};\par
566 \}\par
}
}
{\xe \v set_yrange\:Gnuplot}
{\xe \v Gnuplot\:set_yrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_yrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 786 \{\par
787     std::ostringstream cmdstr;\par
788 \par
789     cmdstr << {\cf22 "set yrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
790     this->cmd(cmdstr.str());\par
791 \par
792     {\cf19 return} *{\cf17 this};\par
793 \}\par
}
}
{\xe \v set_zautoscale\:Gnuplot}
{\xe \v Gnuplot\:set_zautoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zautoscale ()}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 821 \{\par
822     this->cmd({\cf22 "set zrange restore"});\par
823     this->cmd({\cf22 "set autoscale z"});\par
824 \par
825     {\cf19 return} *{\cf17 this};\par
826 \}\par
}
}
{\xe \v set_zlabel\:Gnuplot}
{\xe \v Gnuplot\:set_zlabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zlabel (const std::string &  {\i label} = {\f2 "z"})}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 750 \{\par
751     std::ostringstream cmdstr;\par
752 \par
753     cmdstr << {\cf22 "set zlabel \\""} << label << {\cf22 "\\""};\par
754     this->cmd(cmdstr.str());\par
755 \par
756     {\cf19 return} *{\cf17 this};\par
757 \}\par
}
}
{\xe \v set_zlogscale\:Gnuplot}
{\xe \v Gnuplot\:set_zlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zlogscale (const double  {\i base} = {\f2 10})}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 571 \{\par
572     std::ostringstream cmdstr;\par
573 \par
574     cmdstr << {\cf22 "set logscale z "} << base;\par
575     this->cmd(cmdstr.str());\par
576 \par
577     {\cf19 return} *{\cf17 this};\par
578 \}\par
}
}
{\xe \v set_zrange\:Gnuplot}
{\xe \v Gnuplot\:set_zrange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::set_zrange (const int  {\i iFrom}, const int  {\i iTo})}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 809 \{\par
810     std::ostringstream cmdstr;\par
811 \par
812     cmdstr << {\cf22 "set zrange["} << iFrom << {\cf22 ":"} << iTo << {\cf22 "]"};\par
813     this->cmd(cmdstr.str());\par
814 \par
815     {\cf19 return} *{\cf17 this};\par
816 \}\par
}
}
{\xe \v showonscreen\:Gnuplot}
{\xe \v Gnuplot\:showonscreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::showonscreen ()}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 415 \{\par
416     this->cmd({\cf22 "set output"});\par
417     this->cmd({\cf22 "set terminal "} + Gnuplot::terminal_std);\par
418 \par
419     {\cf19 return} *{\cf17 this};\par
420 \}\par
}
}
{\xe \v ShowOnScreen\:Gnuplot}
{\xe \v Gnuplot\:ShowOnScreen}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ShowOnScreen (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Mostrar na tela ou escrever no arquivo, seta o tipo de terminal para terminal_std. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 202 \{ {\cf19 return} showonscreen();  \};\par
}
}
{\xe \v Smooth\:Gnuplot}
{\xe \v Gnuplot\:Smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Smooth (const std::string &  {\i stylestr} = {\f2 "csplines"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa suavizacao. Argumentos para interpolacoes e aproximacoes. csplines, bezier, acsplines (para dados com valor > 0), sbezier, unique, frequency (funciona somente com plot_x, plot_xy, plotfile_x, plotfile_xy (se a suavizacao esta ativa, set_style nao tem efeito na plotagem dos graficos) }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 265                         \{ {\cf19 return} set_smooth(stylestr); \}\par
}
}
{\xe \v Smooth\:Gnuplot}
{\xe \v Gnuplot\:Smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Smooth (int  {\i _fsmooth}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 268                                                 \{ {\cf19 if}( fsmooth = _fsmooth )\par
269                               {\cf19 return} set_contour(); \par
270                           {\cf19 else} \par
271                               {\cf19 return} unset_contour();\par
272                                                 \}\par
}
}
{\xe \v Style\:Gnuplot}
{\xe \v Gnuplot\:Style}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Style (const std::string &  {\i stylestr} = {\f2 "points"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta estilos de linhas (em alguns casos sao necessarias informacoes adicionais). lines, points, linespoints, impulses, dots, steps, fsteps, histeps, boxes, histograms, filledcurves. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 247                          \{ {\cf19 return} set_style(stylestr); \}\par
}
}
{\xe \v Surface\:Gnuplot}
{\xe \v Gnuplot\:Surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Surface (int  {\i _fsurface} = {\f2 1}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa a visualizacao da superficie (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 348                         \{ {\cf19 if}(fsurface = _fsurface) \par
349                               {\cf19 return} set_surface(); \par
350                           {\cf19 else} \par
351                               {\cf19 return} unset_surface();\par
352                         \}\par
}
}
{\xe \v Terminal\:Gnuplot}
{\xe \v Gnuplot\:Terminal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void Gnuplot::Terminal (const std::string &  {\i type}){\f2 [inline]}, {\f2 [static]}}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Opcional: Seta terminal padrao (standart), usado para visualizacao dos graficos. Para retornar para terminal janela precisa chamar {\b ShowOnScreen()}. Valores padroes (default): Windows - win, Linux - x11 ou wxt (fedora9), Mac - aqua. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 150 \{ set_terminal_std(type); \}\par
}
}
{\xe \v Title\:Gnuplot}
{\xe \v Gnuplot\:Title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Title (const std::string &  {\i title} = {\f2 ""}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa o titulo da secao do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 380                                                 \{ \par
381                          {\cf19 return} set_title(title); \par
382                         \}\par
}
}
{\xe \v Title\:Gnuplot}
{\xe \v Gnuplot\:Title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::Title (int  {\i _ftitle}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 384                                                 \{ \par
385                          {\cf19 if}(ftitle = _ftitle)  \par
386                            {\cf19 return} set_title();\par
387                          {\cf19 else}\par
388                            {\cf19 return} unset_title(); \par
389                         \}\par
}
}
{\xe \v unset_contour\:Gnuplot}
{\xe \v Gnuplot\:unset_contour}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_contour ()}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa desenho do contorno em superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 677 \{\par
678     this->cmd({\cf22 "unset contour"});\par
679 \par
680     {\cf19 return} *{\cf17 this};\par
681 \}\par
}
}
{\xe \v unset_grid\:Gnuplot}
{\xe \v Gnuplot\:unset_grid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_grid ()}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o grid (padrao = desativado). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 538 \{\par
539     this->cmd({\cf22 "unset grid"});\par
540 \par
541     {\cf19 return} *{\cf17 this};\par
542 \}\par
}
}
{\xe \v unset_hidden3d\:Gnuplot}
{\xe \v Gnuplot\:unset_hidden3d}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_hidden3d ()}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa remocao de linhas ocultas na plotagem de superficies (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 650 \{\par
651     this->cmd({\cf22 "unset hidden3d"});\par
652 \par
653     {\cf19 return} *{\cf17 this};\par
654 \}\par
}
}
{\xe \v unset_legend\:Gnuplot}
{\xe \v Gnuplot\:unset_legend}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_legend ()}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a legenda (a legenda \'E9 setada por padrao). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 520 \{\par
521     this->cmd({\cf22 "unset key"});\par
522 \par
523     {\cf19 return} *{\cf17 this};\par
524 \}\par
}
}
{\xe \v unset_smooth\:Gnuplot}
{\xe \v Gnuplot\:unset_smooth}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_smooth ()}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa suavizacao. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 406 \{\par
407     this->smooth = {\cf22 ""};\par
408 \par
409     {\cf19 return} *{\cf17 this};\par
410 \}\par
}
}
{\xe \v unset_surface\:Gnuplot}
{\xe \v Gnuplot\:unset_surface}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_surface ()}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa a visualizacao da superficie (para plotagen 3d). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 695 \{\par
696     this->cmd({\cf22 "unset surface"});\par
697 \par
698     {\cf19 return} *{\cf17 this};\par
699 \}\par
}
}
{\xe \v unset_title\:Gnuplot}
{\xe \v Gnuplot\:unset_title}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_title ()}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa o titulo da secao do gnuplot. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 716 \{\par
717     this->set_title({\cf22 ""});\par
718 \par
719     {\cf19 return} *{\cf17 this};\par
720 \}\par
}
}
{\xe \v unset_xlogscale\:Gnuplot}
{\xe \v Gnuplot\:unset_xlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_xlogscale ()}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 583 \{\par
584     this->cmd({\cf22 "unset logscale x"});\par
585     {\cf19 return} *{\cf17 this};\par
586 \}\par
}
}
{\xe \v unset_ylogscale\:Gnuplot}
{\xe \v Gnuplot\:unset_ylogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_ylogscale ()}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 591 \{\par
592     this->cmd({\cf22 "unset logscale y"});\par
593     {\cf19 return} *{\cf17 this};\par
594 \}\par
}
}
{\xe \v unset_zlogscale\:Gnuplot}
{\xe \v Gnuplot\:unset_zlogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::unset_zlogscale ()}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Desativa escala logaritma do eixo z (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 599 \{\par
600     this->cmd({\cf22 "unset logscale z"});\par
601     {\cf19 return} *{\cf17 this};\par
602 \}\par
}
}
{\xe \v XAutoscale\:Gnuplot}
{\xe \v Gnuplot\:XAutoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::XAutoscale (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo x (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 438 \{ {\cf19 return} set_xautoscale (); \}\par
}
}
{\xe \v XLabel\:Gnuplot}
{\xe \v Gnuplot\:XLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::XLabel (const std::string &  {\i label} = {\f2 "x"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 404                         \{ {\cf19 return} set_xlabel(label); \}\par
}
}
{\xe \v XLogscale\:Gnuplot}
{\xe \v Gnuplot\:XLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::XLogscale (bool  {\i _fxlogscale}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 467                             \{ {\cf19 if}(fxlogscale = _fxlogscale) \par
468                                 {\cf19 return} set_xlogscale(); \par
469                               {\cf19 else} \par
470                                 {\cf19 return} unset_xlogscale();\par
471                             \}\par
}
}
{\xe \v XLogscale\:Gnuplot}
{\xe \v Gnuplot\:XLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::XLogscale (const double  {\i base} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo x (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 459                                                 \{ {\cf20 //if(base)}\par
460                             {\cf19 return} set_xlogscale (base);\par
461                             {\cf20 //else}\par
462                                                     {\cf20 //return unset_xlogscale ();}\par
463                                                 \}\par
}
}
{\xe \v XRange\:Gnuplot}
{\xe \v Gnuplot\:XRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::XRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo x. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 418                         \{ {\cf19 return} set_xrange(iFrom,iTo); \}\par
}
}
{\xe \v YAutoscale\:Gnuplot}
{\xe \v Gnuplot\:YAutoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::YAutoscale (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo y (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 444 \{ {\cf19 return} set_yautoscale (); \}\par
}
}
{\xe \v YLabel\:Gnuplot}
{\xe \v Gnuplot\:YLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::YLabel (const std::string &  {\i label} = {\f2 "y"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo y. Ex: set ylabel "\{/Symbol s\}[MPa]" font "Times Italic, 10". }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 397                         \{ {\cf19 return} set_ylabel(label); \}\par
}
}
{\xe \v YLogscale\:Gnuplot}
{\xe \v Gnuplot\:YLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::YLogscale (bool  {\i _fylogscale}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 484                         \{ {\cf19 if}(fylogscale = _fylogscale) \par
485                               {\cf19 return} set_ylogscale(); \par
486                           {\cf19 else} \par
487                               {\cf19 return} unset_ylogscale();\par
488                         \}\par
}
}
{\xe \v YLogscale\:Gnuplot}
{\xe \v Gnuplot\:YLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::YLogscale (const double  {\i base} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 477 \{ {\cf19 return} set_ylogscale (base); \}\par
}
}
{\xe \v YRange\:Gnuplot}
{\xe \v Gnuplot\:YRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::YRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo y. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 425                         \{ {\cf19 return} set_yrange(iFrom,iTo); \}\par
}
}
{\xe \v ZAutoscale\:Gnuplot}
{\xe \v Gnuplot\:ZAutoscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ZAutoscale (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta escalonamento automatico do eixo z (default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 450 \{ {\cf19 return} set_zautoscale (); \}\par
}
}
{\xe \v ZLabel\:Gnuplot}
{\xe \v Gnuplot\:ZLabel}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ZLabel (const std::string &  {\i label} = {\f2 "z"}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta o rotulo (nome) do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 411                         \{ {\cf19 return} set_zlabel(label); \}\par
}
}
{\xe \v ZLogscale\:Gnuplot}
{\xe \v Gnuplot\:ZLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ZLogscale (bool  {\i _fzlogscale}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa/Desativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 501                         \{ {\cf19 if}(fzlogscale = _fzlogscale) \par
502                               {\cf19 return} set_zlogscale(); \par
503                           {\cf19 else} \par
504                               {\cf19 return} unset_zlogscale();\par
505                         \}\par
}
}
{\xe \v ZLogscale\:Gnuplot}
{\xe \v Gnuplot\:ZLogscale}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ZLogscale (const double  {\i base} = {\f2 10}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Ativa escala logaritma do eixo y (logscale nao e setado por default). }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 494 \{ {\cf19 return} set_zlogscale (base); \}\par
}
}
{\xe \v ZRange\:Gnuplot}
{\xe \v Gnuplot\:ZRange}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Gnuplot} & Gnuplot::ZRange (const int  {\i iFrom}, const int  {\i iTo}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Seta intervalo do eixo z. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 432                         \{ {\cf19 return} set_zrange(iFrom,iTo); \}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir dos seguintes arquivos:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CGnuplot.h}\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CGnuplot.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia da Classe GnuplotException\par \pard\plain 
{\tc\tcl2 \v GnuplotException}
{\xe \v GnuplotException}
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao. }}\par
{
{\f2 #include <CGnuplot.h>}}\par
Diagrama de hierarquia para GnuplotException:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "class_gnuplot_exception.png" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Membros P\'FAblicos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b GnuplotException} (const std::string &msg)\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor. }{
}\par
}\par}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Descri\'E7\'E3o detalhada\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Construtores e Destrutores\par
\pard\plain 
{\xe \v GnuplotException\:GnuplotException}
{\xe \v GnuplotException\:GnuplotException}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
GnuplotException::GnuplotException (const std::string &  {\i msg}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Construtor. }}\par
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 61 :std::runtime_error (msg) \{\}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
A documenta\'E7\'E3o para essa classe foi gerada a partir do seguinte arquivo:{\par
\pard\plain \s121\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
CODIGO/{\b CGnuplot.h}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Arquivos{\tc \v Arquivos}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CCorey.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CCorey.cpp}
{\xe \v CODIGO/CCorey.cpp}
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CCorey.h"}\par
{\f2 #include <cmath>}\par
{\f2 #include <iostream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CCorey.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CCorey.h}
{\xe \v CODIGO/CCorey.h}
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CCorey}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CCorey.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CCorey.h}
{\xe \v CODIGO/CCorey.h}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CCOREY_H_}\par
2 {\cf21 #define CCOREY_H_}\par
3 \par
4 {\cf21 #include <vector>}\par
5 \par
6 {\cf17 class }CCorey \{\par
7     \par
8     {\cf17 protected}:\par
9         \par
10         std::vector<double> sw, kro, krw;\par
11         {\cf18 double} K0rw, K0ro, No, Nw; \par
12     \par
13     {\cf17 public}:\par
14         \par
15         CCorey()\{\};\par
16         \par
17         {\cf18 void} calcSwn({\cf18 double} _swi, {\cf18 double} _sor);\par
18         {\cf18 void} calcKro(std::vector<double> _sw);\par
19         {\cf18 void} calcKrw(std::vector<double> _sw);\par
20         {\cf18 void} setK0rw({\cf18 double} _K0rw);\par
21         {\cf18 void} setK0ro({\cf18 double} _K0ro);\par
22         {\cf18 void} setNo({\cf18 double} _No);\par
23         {\cf18 void} setNw({\cf18 double} _Nw);\par
24         std::vector<double> getSw();\par
25         std::vector<double> getKro();\par
26         std::vector<double> getKrw();\par
27         \par
28         ~CCorey()\{\};\par
29     \par
30 \};\par
31 \par
32 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CFluxoFracionario.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CFluxoFracionario.cpp}
{\xe \v CODIGO/CFluxoFracionario.cpp}
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CFluxoFracionario.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CFluxoFracionario.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CFluxoFracionario.h}
{\xe \v CODIGO/CFluxoFracionario.h}
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CFluxoFracionario}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CFluxoFracionario.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CFluxoFracionario.h}
{\xe \v CODIGO/CFluxoFracionario.h}
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CFLUXOFRACIONARIO_H_}\par
2 {\cf21 #define CFLUXOFRACIONARIO_H_}\par
3 \par
4 {\cf21 #include <vector>}\par
5 \par
6 {\cf17 class }CFluxoFracionario\{\par
7     \par
8     {\cf17 protected}:\par
9         \par
10         std::vector<double> Frw, Fro;\par
11     \par
12     {\cf17 public}:\par
13         \par
14         CFluxoFracionario()\{\};\par
15         \par
16         {\cf18 void} calcFluxoFracionarioAgua(std::vector<double> _krw, std::vector<double> _kro, {\cf18 double} miw, {\cf18 double} mio);\par
17         {\cf18 void} calcFluxoFracionarioOleo(std::vector<double> _krw, std::vector<double> _kro, {\cf18 double} miw, {\cf18 double} mio);\par
18         std::vector<double> getFluxoFracionarioAgua();\par
19         std::vector<double> getFluxoFracionarioOleo();\par
20         \par
21         ~CFluxoFracionario()\{\};\par
22     \par
23 \};\par
24 \par
25 \par
26 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CGnuplot.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CGnuplot.cpp}
{\xe \v CODIGO/CGnuplot.cpp}
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <fstream>}\par
{\f2 #include <sstream>}\par
{\f2 #include <list>}\par
{\f2 #include <cstdio>}\par
{\f2 #include <cstdlib>}\par
{\f2 #include "CGnuplot.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Container > void {\b stringtok} (Container &container, std::string const &in, const char *const delimiters=" \\t\\n")\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v stringtok\:CGnuplot.cpp}
{\xe \v CGnuplot.cpp\:stringtok}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Container > void stringtok (Container &  {\i container}, std::string const &  {\i in}, const char *const  {\i delimiters} = {\f2 "\~ \\t\\n"})}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 160 \{\par
161     {\cf17 const} std::string::size_type len = in.length();\par
162           std::string::size_type i = 0;\par
163 \par
164     {\cf19 while} ( i < len )\par
165     \{\par
166         {\cf20 // eat leading whitespace}\par
167         i = in.find_first_not_of (delimiters, i);\par
168 \par
169         {\cf19 if} (i == std::string::npos)\par
170             {\cf19 return};   {\cf20 // nothing left but white space}\par
171 \par
172         {\cf20 // find the end of the token}\par
173         std::string::size_type j = in.find_first_of (delimiters, i);\par
174 \par
175         {\cf20 // push token}\par
176         {\cf19 if} (j == std::string::npos)\par
177         \{\par
178             container.push_back (in.substr(i));\par
179             {\cf19 return};\par
180         \}\par
181         {\cf19 else}\par
182             container.push_back (in.substr(i, j-i));\par
183 \par
184         {\cf20 // set up for next loop}\par
185         i = j + 1;\par
186     \}\par
187 \par
188     {\cf19 return};\par
189 \}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CGnuplot.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CGnuplot.h}
{\xe \v CODIGO/CGnuplot.h}
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <string>}\par
{\f2 #include <vector>}\par
{\f2 #include <stdexcept>}\par
{\f2 #include <cstdio>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b GnuplotException}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Erros em tempo de execucao. }}\par}
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Gnuplot}\par
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Classe de interface para acesso ao programa gnuplot. }}\par}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es de Tipos\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
typedef {\b Gnuplot} {\b CGnuplot}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Defini\'E7\'F5es dos tipos\par
\pard\plain 
{\xe \v CGnuplot\:CGnuplot.h}
{\xe \v CGnuplot.h\:CGnuplot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
typedef {\b Gnuplot} {\b CGnuplot}}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CGnuplot.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CGnuplot.h}
{\xe \v CODIGO/CGnuplot.h}
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf20 //               Classe de Interface em C++ para o programa gnuplot.                  //}\par
4 {\cf20 }{\cf20 // Esta interface usa pipes e nao ira funcionar em sistemas que nao suportam}\par
5 {\cf20 // o padrao POSIX pipe. }\par
6 {\cf20 // O mesmo foi testado em sistemas Windows (MinGW e Visual C++) e Linux(GCC/G++)}\par
7 {\cf20 // Este programa foi originalmente escrito por:}\par
8 {\cf20 // Historico de versoes:}\par
9 {\cf20 // 0. Interface para linguagem C}\par
10 {\cf20 //    por N. Devillard (27/01/03)}\par
11 {\cf20 // 1. Interface para C++: tradu\'E7\'E3o direta da versao em C}\par
12 {\cf20 //    por Rajarshi Guha (07/03/03)}\par
13 {\cf20 // 2. Correcoes para compatibilidadde com Win32 }\par
14 {\cf20 //    por V. Chyzhdzenka (20/05/03)}\par
15 {\cf20 // 3. Novos m\'E9todos membros, correcoes para compatibilidade com Win32 e Linux }\par
16 {\cf20 //    por M. Burgis (10/03/08)}\par
17 {\cf20 // 4. Traducao para Portugues, documentacao - javadoc/doxygen, }\par
18 {\cf20 //    e modificacoes na interface (adicao de interface alternativa)}\par
19 {\cf20 //    por Bueno.A.D. (30/07/08)}\par
20 {\cf20 //   Tarefas: }\par
21 {\cf20 //   (v1)}\par
22 {\cf20 //   Documentar toda classe}\par
23 {\cf20 //   Adicionar novos m\'E9todos, criando atributos adicionais se necessario.}\par
24 {\cf20 //   Adotar padrao C++, isto e, usar sobrecarga nas chamadas.}\par
25 {\cf20 //   (v2)}\par
26 {\cf20 //   Criar classe herdeira CGnuplot, que inclui somente a nova interface.}\par
27 {\cf20 //   como e herdeira, o usuario vai poder usar nome antigos.}\par
28 {\cf20 //   Vantagem: preserva classe original, cria nova interface, fica a crit\'E9rio do usu\'E1rio}\par
29 {\cf20 //   qual interface utilizar.}\par
31 {\cf20 }{\cf20 // Requisitos:}\par
32 {\cf20 // - O programa gnuplot deve estar instalado (veja http://www.gnuplot.info/download.html)}\par
33 {\cf20 // - No Windows: setar a Path do Gnuplot (i.e. C:/program files/gnuplot/bin)}\par
34 {\cf20 //             ou setar a path usando: Gnuplot::set_GNUPlotPath(const std::string &path);}\par
35 {\cf20 //             Gnuplot::set_GNUPlotPath("C:/program files/gnuplot/bin");}\par
36 {\cf20 // - Para um melhor uso, consulte o manual do gnuplot,}\par
37 {\cf20 //   no GNU/Linux digite: man gnuplot ou info gnuplot.}\par
38 {\cf20 //   }\par
39 {\cf20 // - Veja aula em http://www.lenep.uenf.br/~bueno/DisciplinaSL/  }\par
40 {\cf20 //   }\par
42 {\cf20 }\par
43 \par
44 {\cf21 #ifndef CGnuplot_h}\par
45 {\cf21 #define CGnuplot_h}\par
46 {\cf21 #include <iostream>}             {\cf20 // Para teste}\par
47 {\cf21 #include <string>}\par
48 {\cf21 #include <vector>}\par
49 {\cf21 #include <stdexcept>}        {\cf20 // Heranca da classe std::runtime_error em GnuplotException}\par
50 {\cf21 #include <cstdio>}       {\cf20 // Para acesso a arquivos FILE}\par
51 \par
57 {\cf17 class }GnuplotException : {\cf17 public} std::runtime_error\par
58 \{\par
59 {\cf17 public}:\par
61   GnuplotException ({\cf17 const} std::string & msg):std::runtime_error (msg) \{\}\par
62 \};\par
63 \par
69 {\cf17 class }Gnuplot\par
70 \{\par
71 {\cf17 private}:\par
72   {\cf20 //----------------------------------------------------------------------------------- Atributos}\par
73   FILE *  gnucmd;   \par
74   {\cf18 bool}    valid;    \par
75   {\cf18 bool}    two_dim;  \par
76   {\cf18 int}     nplots;   \par
77   std::string pstyle;   \par
78   std::string smooth;   \par
79   std::vector <std::string> tmpfile_list; \par
80 \par
81   {\cf20 //----------------------------------------------------------------------------------------flags}\par
82   {\cf18 bool} fgrid;           \par
83   {\cf18 bool} fhidden3d;       \par
84   {\cf18 bool} fcontour;    \par
85   {\cf18 bool} fsurface;    \par
86   {\cf18 bool} flegend;     \par
87   {\cf18 bool} ftitle;      \par
88   {\cf18 bool} fxlogscale;  \par
89   {\cf18 bool} fylogscale;  \par
90   {\cf18 bool} fzlogscale;  \par
91   {\cf18 bool} fsmooth;         \par
92 \par
93   {\cf20 //---------------------------------------------------------------------------------------------}\par
94   {\cf20 // Atributos estaticos (compartilhados por todos os objetos)}\par
95   {\cf17 static} {\cf18 int} tmpfile_num;               \par
96   {\cf17 static} std::string m_sGNUPlotFileName;\par
97   {\cf17 static} std::string m_sGNUPlotPath;    \par
98   {\cf17 static} std::string terminal_std;  \par
99   \par
100   {\cf20 //------------------------------------------------------------------------------------- Metodos}\par
101   {\cf20 // Funcoes membro (m\'E9todos membro) (funcoes auxiliares)}\par
104 {\cf20 }  {\cf18 void}  init ();                \par
105 \par
108   {\cf18 void} Init() \{ init(); \}\par
109 \par
111   std::string  create_tmpfile (std::ofstream & tmp); \par
112 \par
114   std::string  CreateTmpFile (std::ofstream & tmp) \{ {\cf19 return}  create_tmpfile(tmp); \}\par
115  \par
116   {\cf20 //---------------------------------------------------------------------------------------------}\par
117   {\cf20 // Funcoes estaticas (static functions)}\par
119 {\cf20 }  {\cf17 static} {\cf18 bool}  get_program_path (); \par
120 \par
122   {\cf17 static} {\cf18 bool}  Path() \{ {\cf19 return} get_program_path(); \}\par
123 \par
125   {\cf17 static} {\cf18 bool}  file_exists ({\cf17 const} std::string & filename, {\cf18 int} mode = 0); \par
126 \par
128   {\cf17 static} {\cf18 bool}  FileExists  ({\cf17 const} std::string & filename, {\cf18 int} mode = 0) \par
129                 \{ {\cf19 return} file_exists( filename, mode ); \}\par
130 \par
131   {\cf20 //---------------------------------------------------------------------------------------------}\par
132 {\cf17 public}:\par
133   {\cf20 // Opcional: Seta path do gnuplot manualmente}\par
134   {\cf20 // No windows: a path (caminho) deve ser dada usando '/' e nao backslash '\\'}\par
136 {\cf20 }  {\cf20 //ex: CGnuplot::set_GNUPlotPath ("\\"C:/program files/gnuplot/bin/\\"");}\par
137     \par
138   {\cf17 static} {\cf18 bool} set_GNUPlotPath ({\cf17 const} std::string & path);\par
139 \par
141   {\cf17 static} {\cf18 bool} Path({\cf17 const} std::string & path) \{ {\cf19 return} set_GNUPlotPath(path); \}\par
142 {\cf20 // }\par
145 {\cf20 }  {\cf17 static} {\cf18 void} set_terminal_std ({\cf17 const} std::string & type);\par
146 \par
150   {\cf17 static} {\cf18 void} Terminal ({\cf17 const} std::string & type) \{ set_terminal_std(type); \}\par
151 \par
152  {\cf20 //---------------------------------------------------------------------------------Construtores}\par
154 {\cf20 }  Gnuplot ({\cf17 const} std::string & style = {\cf22 "points"});\par
155 \par
157   Gnuplot ({\cf17 const} std::vector < double >&x,\par
158        {\cf17 const} std::string & title = {\cf22 ""},\par
159        {\cf17 const} std::string & style = {\cf22 "points"},\par
160        {\cf17 const} std::string & labelx = {\cf22 "x"},\par
161        {\cf17 const} std::string & labely = {\cf22 "y"});\par
162 \par
164   Gnuplot ({\cf17 const} std::vector < double >&x,\par
165        {\cf17 const} std::vector < double >&y,\par
166        {\cf17 const} std::string & title = {\cf22 ""},\par
167        {\cf17 const} std::string & style = {\cf22 "points"},\par
168        {\cf17 const} std::string & labelx = {\cf22 "x"},\par
169        {\cf17 const} std::string & labely = {\cf22 "y"});\par
170 \par
172   Gnuplot ({\cf17 const} std::vector < double >&x,\par
173        {\cf17 const} std::vector < double >&y,\par
174        {\cf17 const} std::vector < double >&z,\par
175        {\cf17 const} std::string & title = {\cf22 ""},\par
176        {\cf17 const} std::string & style = {\cf22 "points"},\par
177        {\cf17 const} std::string & labelx = {\cf22 "x"},\par
178        {\cf17 const} std::string & labely = {\cf22 "y"},\par
179        {\cf17 const} std::string & labelz = {\cf22 "z"});\par
180 \par
182    ~Gnuplot ();\par
183 \par
184   {\cf20 //---------------------------------------------------------------------------------------------}\par
186 {\cf20 }  Gnuplot &  cmd ({\cf17 const} std::string & cmdstr);\par
187 \par
189   Gnuplot &  Cmd ({\cf17 const} std::string & cmdstr)     \{ {\cf19 return} cmd(cmdstr); \}\par
190 \par
192   Gnuplot &  Command ({\cf17 const} std::string & cmdstr) \{ {\cf19 return} cmd(cmdstr); \}\par
193 \par
195   Gnuplot &  operator<< ({\cf17 const} std::string & cmdstr);\par
196 \par
197   {\cf20 //---------------------------------------------------------------------------------------------}\par
199 {\cf20 }  Gnuplot &  showonscreen ();       {\cf20 // Janela de saida e setada como default (win/x11/aqua)}\par
200 \par
202   Gnuplot &  ShowOnScreen ()                      \{ {\cf19 return} showonscreen();  \};\par
203 \par
206   Gnuplot &  savetops ({\cf17 const} std::string & filename = {\cf22 "gnuplot_output"});\par
207 \par
210   Gnuplot &  SaveTops ({\cf17 const} std::string & filename = {\cf22 "gnuplot_output"}) \par
211                                       \{ {\cf19 return} savetops(filename); \}\par
212 \par
215   Gnuplot &  savetopng ({\cf17 const} std::string & filename = {\cf22 "gnuplot_output"});\par
216 \par
219   Gnuplot &  SaveTopng ({\cf17 const} std::string & filename = {\cf22 "gnuplot_output"})\par
220                                       \{ {\cf19 return} savetopng(filename); \}\par
221 \par
224   Gnuplot &  savetojpeg ({\cf17 const} std::string & filename = {\cf22 "gnuplot_output"});\par
225 \par
228   Gnuplot &  SaveTojpeg ({\cf17 const} std::string & filename = {\cf22 "gnuplot_output"})\par
229                                       \{ {\cf19 return} savetojpeg(filename); \}\par
230 \par
235   Gnuplot& SaveTo({\cf17 const} std::string &filename,{\cf17 const} std::string &terminal_type, std::string flags={\cf22 ""});\par
236                                       \par
237   {\cf20 //--------------------------------------------------------------------------------- set e unset}\par
241 {\cf20 }  Gnuplot &  set_style ({\cf17 const} std::string & stylestr = {\cf22 "points"});\par
242 \par
246   Gnuplot &  Style ({\cf17 const} std::string & stylestr = {\cf22 "points"}) \par
247                          \{ {\cf19 return} set_style(stylestr); \}\par
248 \par
254   Gnuplot &  set_smooth ({\cf17 const} std::string & stylestr = {\cf22 "csplines"});\par
255 \par
257   Gnuplot &  unset_smooth ();       {\cf20 // A suavizacao nao e setada por padrao (default)}\par
258 \par
264   Gnuplot &  Smooth({\cf17 const} std::string & stylestr = {\cf22 "csplines"})  \par
265                         \{ {\cf19 return} set_smooth(stylestr); \}\par
266 \par
267   Gnuplot &  Smooth( {\cf18 int} _fsmooth ) \par
268                                                 \{ {\cf19 if}( fsmooth = _fsmooth )\par
269                               {\cf19 return} set_contour(); \par
270                           {\cf19 else} \par
271                               {\cf19 return} unset_contour();\par
272                                                 \}\par
274   {\cf20 //Gnuplot &  UnsetSmooth()                \{ return unset_smooth (); \}}\par
275 \par
277   Gnuplot &  set_pointsize ({\cf17 const} {\cf18 double} pointsize = 1.0);\par
278 \par
280   Gnuplot &  PointSize ({\cf17 const} {\cf18 double} pointsize = 1.0)\par
281                         \{ {\cf19 return} set_pointsize(pointsize); \}\par
282 \par
284   Gnuplot &  set_grid ();\par
285 \par
287   Gnuplot &  unset_grid (); \par
288 \par
290   Gnuplot &  Grid({\cf18 bool} _fgrid = 1) \par
291                         \{ {\cf19 if}(fgrid = _fgrid) \par
292                             {\cf19 return} set_grid(); \par
293                           {\cf19 else} \par
294                             {\cf19 return} unset_grid(); \}\par
295 \par
297   Gnuplot &  set_samples ({\cf17 const} {\cf18 int} samples = 100);\par
298 \par
300   Gnuplot &  Samples({\cf17 const} {\cf18 int} samples = 100)   \{ {\cf19 return} set_samples(samples); \}\par
301 \par
303   Gnuplot &  set_isosamples ({\cf17 const} {\cf18 int} isolines = 10);\par
304 \par
306   Gnuplot &  IsoSamples ({\cf17 const} {\cf18 int} isolines = 10)\{ {\cf19 return} set_isosamples(isolines); \}\par
307 \par
309   Gnuplot &  set_hidden3d ();\par
310 \par
312   Gnuplot &  unset_hidden3d ();     {\cf20 // hidden3d nao e setado por padrao (default)}\par
313 \par
315   Gnuplot &  Hidden3d({\cf18 bool} _fhidden3d = 1) \par
316                         \{ {\cf19 if}(fhidden3d = _fhidden3d) \par
317                               {\cf19 return} set_hidden3d(); \par
318                           {\cf19 else} \par
319                               {\cf19 return} unset_hidden3d();\par
320                         \}\par
321 \par
324   Gnuplot &  set_contour ({\cf17 const} std::string & position = {\cf22 "base"});\par
325 \par
327   Gnuplot &  unset_contour ();      {\cf20 // contour nao e setado por default}\par
328 \par
331   Gnuplot &  Contour({\cf17 const} std::string & position = {\cf22 "base"}) \par
332                                                 \{ {\cf19 return} set_contour(position); \} \par
333                     \par
334   Gnuplot &  Contour( {\cf18 int} _fcontour ) \par
335                         \{ {\cf19 if}( fcontour = _fcontour )\par
336                               {\cf19 return} set_contour(); \par
337                           {\cf19 else} \par
338                               {\cf19 return} unset_contour();\par
339                                                 \}  \par
341   Gnuplot &  set_surface ();        {\cf20 // surface e setado por padrao (default)}\par
342 \par
344   Gnuplot &  unset_surface ();\par
345 \par
347   Gnuplot &  Surface( {\cf18 int} _fsurface = 1 ) \par
348                         \{ {\cf19 if}(fsurface = _fsurface) \par
349                               {\cf19 return} set_surface(); \par
350                           {\cf19 else} \par
351                               {\cf19 return} unset_surface();\par
352                         \}\par
355   Gnuplot &  set_legend ({\cf17 const} std::string & position = {\cf22 "default"}); \par
356 \par
358   Gnuplot &  unset_legend ();\par
359 \par
361   Gnuplot &  Legend({\cf17 const} std::string & position = {\cf22 "default"}) \par
362                                                 \{ {\cf19 return} set_legend(position); \}\par
363 \par
365   Gnuplot &  Legend({\cf18 int} _flegend) \par
366                         \{ {\cf19 if}(flegend = _flegend) \par
367                               {\cf19 return} set_legend(); \par
368                           {\cf19 else} \par
369                               {\cf19 return} unset_legend();\par
370                         \}\par
371 \par
373   Gnuplot &  set_title ({\cf17 const} std::string & title = {\cf22 ""});\par
374 \par
376   Gnuplot &  unset_title ();        {\cf20 // O title nao e setado por padrao (default)}\par
377 \par
379   Gnuplot &  Title({\cf17 const} std::string & title = {\cf22 ""}) \par
380                                                 \{ \par
381                          {\cf19 return} set_title(title); \par
382                         \}\par
383   Gnuplot &  Title({\cf18 int} _ftitle) \par
384                                                 \{ \par
385                          {\cf19 if}(ftitle = _ftitle)  \par
386                            {\cf19 return} set_title();\par
387                          {\cf19 else}\par
388                            {\cf19 return} unset_title(); \par
389                         \}\par
390     \par
392   Gnuplot &  set_ylabel ({\cf17 const} std::string & label = {\cf22 "y"});\par
393 \par
396   Gnuplot &  YLabel({\cf17 const} std::string & label = {\cf22 "y"})\par
397                         \{ {\cf19 return} set_ylabel(label); \}\par
398 \par
400   Gnuplot &  set_xlabel ({\cf17 const} std::string & label = {\cf22 "x"});\par
401 \par
403   Gnuplot &  XLabel({\cf17 const} std::string & label = {\cf22 "x"})\par
404                         \{ {\cf19 return} set_xlabel(label); \}\par
405 \par
407   Gnuplot &  set_zlabel ({\cf17 const} std::string & label = {\cf22 "z"});\par
408 \par
410   Gnuplot &  ZLabel({\cf17 const} std::string & label = {\cf22 "z"})\par
411                         \{ {\cf19 return} set_zlabel(label); \}\par
412   \par
414   Gnuplot &  set_xrange ({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo);\par
415 \par
417   Gnuplot &  XRange ({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo) \par
418                         \{ {\cf19 return} set_xrange(iFrom,iTo); \}\par
419   \par
421   Gnuplot &  set_yrange ({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo);\par
422 \par
424   Gnuplot &  YRange ({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo) \par
425                         \{ {\cf19 return} set_yrange(iFrom,iTo); \}\par
426 \par
428   Gnuplot &  set_zrange ({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo);\par
429 \par
431   Gnuplot &  ZRange ({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo) \par
432                         \{ {\cf19 return} set_zrange(iFrom,iTo); \}\par
433 \par
435   Gnuplot &  set_xautoscale ();\par
436 \par
438   Gnuplot &  XAutoscale()           \{ {\cf19 return} set_xautoscale (); \}\par
439 \par
441   Gnuplot &  set_yautoscale ();\par
442 \par
444   Gnuplot &  YAutoscale()           \{ {\cf19 return} set_yautoscale (); \}\par
445 \par
447   Gnuplot &  set_zautoscale ();\par
448 \par
450   Gnuplot &  ZAutoscale()           \{ {\cf19 return} set_zautoscale (); \}\par
451 \par
453   Gnuplot &  set_xlogscale ({\cf17 const} {\cf18 double} base = 10);\par
454 \par
456   Gnuplot &  unset_xlogscale ();\par
457 \par
459   Gnuplot &  XLogscale ({\cf17 const} {\cf18 double} base = 10) \{ {\cf20 //if(base)}\par
460                             {\cf19 return} set_xlogscale (base);\par
461                             {\cf20 //else}\par
462                                                     {\cf20 //return unset_xlogscale ();}\par
463                                                 \}\par
464 \par
466   Gnuplot &  XLogscale({\cf18 bool} _fxlogscale) \par
467                             \{ {\cf19 if}(fxlogscale = _fxlogscale) \par
468                                 {\cf19 return} set_xlogscale(); \par
469                               {\cf19 else} \par
470                                 {\cf19 return} unset_xlogscale();\par
471                             \}\par
472 \par
474   Gnuplot &  set_ylogscale ({\cf17 const} {\cf18 double} base = 10);\par
475 \par
477   Gnuplot &  YLogscale ({\cf17 const} {\cf18 double} base = 10) \{ {\cf19 return} set_ylogscale (base); \}\par
478 \par
480   Gnuplot &  unset_ylogscale ();\par
481 \par
483   Gnuplot &  YLogscale({\cf18 bool} _fylogscale) \par
484                         \{ {\cf19 if}(fylogscale = _fylogscale) \par
485                               {\cf19 return} set_ylogscale(); \par
486                           {\cf19 else} \par
487                               {\cf19 return} unset_ylogscale();\par
488                         \}\par
489 \par
491   Gnuplot &  set_zlogscale ({\cf17 const} {\cf18 double} base = 10);\par
492 \par
494   Gnuplot &  ZLogscale ({\cf17 const} {\cf18 double} base = 10) \{ {\cf19 return} set_zlogscale (base); \}\par
495 \par
497   Gnuplot &  unset_zlogscale ();\par
498 \par
500   Gnuplot &  ZLogscale({\cf18 bool} _fzlogscale) \par
501                         \{ {\cf19 if}(fzlogscale = _fzlogscale) \par
502                               {\cf19 return} set_zlogscale(); \par
503                           {\cf19 else} \par
504                               {\cf19 return} unset_zlogscale();\par
505                         \}\par
506 \par
507   \par
509   Gnuplot &  set_cbrange ({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo);\par
510 \par
512   Gnuplot &  CBRange({\cf17 const} {\cf18 int} iFrom, {\cf17 const} {\cf18 int} iTo)\par
513                         \{ {\cf19 return} set_cbrange(iFrom, iTo); \}\par
514 \par
515   {\cf20 //----------------------------------------------------------------------------------}\par
517 {\cf20 }  Gnuplot &  plotfile_x ({\cf17 const} std::string & filename,\par
518           {\cf17 const} {\cf18 int} column = 1, {\cf17 const} std::string & title = {\cf22 ""});\par
519 \par
521   Gnuplot &  PlotFile ({\cf17 const} std::string & filename,\par
522           {\cf17 const} {\cf18 int} column = 1, {\cf17 const} std::string & title = {\cf22 ""})\par
523                         \{ {\cf19 return} plotfile_x(filename, column, title);   \}\par
524 \par
526   Gnuplot &  plot_x ({\cf17 const} std::vector < double >&x, {\cf17 const} std::string & title = {\cf22 ""});\par
527 \par
529   Gnuplot &  PlotVector ({\cf17 const} std::vector < double >&x, {\cf17 const} std::string & title = {\cf22 ""})\par
530                         \{ {\cf19 return} plot_x( x, title ); \} \par
531 \par
533   Gnuplot &  plotfile_xy ({\cf17 const} std::string & filename,\par
534            {\cf17 const} {\cf18 int} column_x = 1,\par
535            {\cf17 const} {\cf18 int} column_y = 2, {\cf17 const} std::string & title = {\cf22 ""});\par
537   Gnuplot &  PlotFile ({\cf17 const} std::string & filename,\par
538            {\cf17 const} {\cf18 int} column_x = 1,\par
539            {\cf17 const} {\cf18 int} column_y = 2, {\cf17 const} std::string & title = {\cf22 ""})\par
540                         \{ \par
541                         {\cf19 return} plotfile_xy(filename, column_x, column_y, title );\par
542                         \} \par
543 \par
545   Gnuplot &  plot_xy ({\cf17 const} std::vector < double >&x,\par
546        {\cf17 const} std::vector < double >&y, {\cf17 const} std::string & title = {\cf22 ""});\par
547 \par
549   Gnuplot &  PlotVector ({\cf17 const} std::vector < double >&x,\par
550        {\cf17 const} std::vector < double >&y, {\cf17 const} std::string & title = {\cf22 ""})\par
551                         \{ {\cf19 return} plot_xy ( x, y,title ); \}\par
552 \par
554   Gnuplot &  plotfile_xy_err ({\cf17 const} std::string & filename,\par
555            {\cf17 const} {\cf18 int} column_x = 1,\par
556            {\cf17 const} {\cf18 int} column_y = 2,\par
557            {\cf17 const} {\cf18 int} column_dy = 3, {\cf17 const} std::string & title = {\cf22 ""});\par
558 \par
560   Gnuplot &  PlotFileXYErrorBar({\cf17 const} std::string & filename,\par
561            {\cf17 const} {\cf18 int} column_x = 1,\par
562            {\cf17 const} {\cf18 int} column_y = 2,\par
563            {\cf17 const} {\cf18 int} column_dy = 3, {\cf17 const} std::string & title = {\cf22 ""})\par
564                           \{ {\cf19 return} plotfile_xy_err(filename,\par
565                             column_x, column_y, column_dy, title ); \} \par
566 \par
568   Gnuplot &  plot_xy_err ({\cf17 const} std::vector < double >&x,\par
569            {\cf17 const} std::vector < double >&y,\par
570            {\cf17 const} std::vector < double >&dy,\par
571            {\cf17 const} std::string & title = {\cf22 ""});\par
572 \par
574   Gnuplot &  PlotVectorXYErrorBar({\cf17 const} std::vector < double >&x,\par
575            {\cf17 const} std::vector < double >&y,\par
576            {\cf17 const} std::vector < double >&dy,\par
577            {\cf17 const} std::string & title = {\cf22 ""})\par
578                             \{ {\cf19 return} plot_xy_err(x, y, dy, title); \}\par
579 \par
581   Gnuplot &  plotfile_xyz ({\cf17 const} std::string & filename,\par
582         {\cf17 const} {\cf18 int} column_x = 1,\par
583         {\cf17 const} {\cf18 int} column_y = 2,\par
584         {\cf17 const} {\cf18 int} column_z = 3, {\cf17 const} std::string & title = {\cf22 ""});\par
586   Gnuplot &  PlotFile ({\cf17 const} std::string & filename,\par
587         {\cf17 const} {\cf18 int} column_x = 1,\par
588         {\cf17 const} {\cf18 int} column_y = 2,\par
589         {\cf17 const} {\cf18 int} column_z = 3, {\cf17 const} std::string & title = {\cf22 ""})\par
590                             \{ {\cf19 return} plotfile_xyz(filename, column_x,\par
591                               column_y,column_z); \}\par
592 \par
594   Gnuplot &  plot_xyz ({\cf17 const} std::vector < double >&x,\par
595         {\cf17 const} std::vector < double >&y,\par
596         {\cf17 const} std::vector < double >&z, {\cf17 const} std::string & title = {\cf22 ""});\par
597 \par
599   Gnuplot &  PlotVector({\cf17 const} std::vector < double >&x,\par
600         {\cf17 const} std::vector < double >&y,\par
601         {\cf17 const} std::vector < double >&z, {\cf17 const} std::string & title = {\cf22 ""})\par
602                             \{ {\cf19 return} plot_xyz(x, y, z, title); \}\par
603 \par
605   Gnuplot &  plot_slope ({\cf17 const} {\cf18 double} a, {\cf17 const} {\cf18 double} b, {\cf17 const} std::string & title = {\cf22 ""});\par
606 \par
608   Gnuplot &  PlotSlope  ({\cf17 const} {\cf18 double} a, {\cf17 const} {\cf18 double} b, {\cf17 const} std::string & title = {\cf22 ""})\par
609                             \{ {\cf19 return} plot_slope(a,b,title); \}\par
610 \par
633   Gnuplot &  plot_equation ({\cf17 const} std::string & equation,\par
634          {\cf17 const} std::string & title = {\cf22 ""});\par
635 \par
640   {\cf20 // Deve receber um CFuncao, que tem cast para string.}\par
641   Gnuplot &  PlotEquation({\cf17 const} std::string & equation,\par
642          {\cf17 const} std::string & title = {\cf22 ""})\par
643                           \{ {\cf19 return} plot_equation( equation, title ); \}\par
644 \par
647   Gnuplot &  plot_equation3d ({\cf17 const} std::string & equation, {\cf17 const} std::string & title = {\cf22 ""});\par
648 \par
651   {\cf20 // gnuplot->PlotEquation3d(CPolinomio());}\par
652   Gnuplot &  PlotEquation3d ({\cf17 const} std::string & equation,\par
653            {\cf17 const} std::string & title = {\cf22 ""})\par
654                           \{ {\cf19 return} plot_equation3d( equation, title ); \}\par
655 \par
657   Gnuplot &  plot_image ({\cf17 const} {\cf18 unsigned} {\cf18 char} *ucPicBuf,\par
658           {\cf17 const} {\cf18 int} iWidth, {\cf17 const} {\cf18 int} iHeight, {\cf17 const} std::string & title = {\cf22 ""});\par
659 \par
661   Gnuplot &  PlotImage ({\cf17 const} {\cf18 unsigned} {\cf18 char} *ucPicBuf,\par
662             {\cf17 const} {\cf18 int} iWidth, {\cf17 const} {\cf18 int} iHeight, {\cf17 const} std::string & title = {\cf22 ""})\par
663                                               \{ {\cf19 return} plot_image (ucPicBuf, iWidth, iHeight, title); \}\par
664 \par
665   {\cf20 //----------------------------------------------------------------------------------}\par
666   {\cf20 // Repete o ultimo comando de plotagem, seja plot (2D) ou splot (3D)}\par
667   {\cf20 // Usado para visualizar plotagens, ap\'F3s mudar algumas opcoes de plotagem}\par
668   {\cf20 // ou quando gerando o mesmo grafico para diferentes dispositivos (showonscreen, savetops)}\par
669   Gnuplot &  replot ();\par
670 \par
671   {\cf20 // Repete o ultimo comando de plotagem, seja plot (2D) ou splot (3D)}\par
672   {\cf20 // Usado para visualizar plotagens, ap\'F3s mudar algumas opcoes de plotagem}\par
673   {\cf20 // ou quando gerando o mesmo grafico para diferentes dispositivos (showonscreen, savetops)}\par
674   Gnuplot &  Replot()               \{ {\cf19 return} replot(); \}\par
675 \par
676   {\cf20 // Reseta uma sessao do gnuplot (pr\'F3xima plotagem apaga definicoes previas)}\par
677   Gnuplot &  reset_plot ();\par
678 \par
679   {\cf20 // Reseta uma sessao do gnuplot (pr\'F3xima plotagem apaga definicoes previas)}\par
680   Gnuplot &  ResetPlot()            \{ {\cf19 return} reset_plot(); \}\par
681 \par
682   {\cf20 // Chama fun\'E7\'E3o reset do gnuplot}\par
683   Gnuplot &  Reset()                \{ this->cmd({\cf22 "reset"}); {\cf19 return} *{\cf17 this}; \}\par
684 \par
685   {\cf20 // Reseta uma sessao do gnuplot e seta todas as variaveis para o default}\par
686   Gnuplot &  reset_all ();\par
687 \par
688   {\cf20 // Reseta uma sessao do gnuplot e seta todas as variaveis para o default}\par
689   Gnuplot &  ResetAll ()            \{ {\cf19 return} reset_all(); \}\par
690 \par
691   {\cf20 // Verifica se a sessao esta valida}\par
692   {\cf18 bool}  is_valid ();\par
693 \par
694   {\cf20 // Verifica se a sessao esta valida}\par
695   {\cf18 bool}  IsValid ()              \{ {\cf19 return} is_valid (); \};\par
696 \par
697 \};\par
698 {\cf17 typedef} Gnuplot CGnuplot;\par
699 {\cf21 #endif}\par
700 \par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhaPressao2Pocos.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao2Pocos.cpp}
{\xe \v CODIGO/CLinhaPressao2Pocos.cpp}
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CLinhaPressao2Pocos.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhaPressao2Pocos.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao2Pocos.h}
{\xe \v CODIGO/CLinhaPressao2Pocos.h}
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include <vector>}\par
{\f2 #include <cmath>}\par
{\f2 #include <string>}\par
{\f2 #include <fstream>}\par
{\f2 #include "CLinhasEquipotenciais.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CLinhaPressao2Pocos}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CLinhaPressao2Pocos.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao2Pocos.h}
{\xe \v CODIGO/CLinhaPressao2Pocos.h}
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CLINHAPRESSAO2POCOS_H}\par
2 {\cf21 #define CLINHAPRESSAO2POCOS_H}\par
3 \par
4 {\cf21 #include <iostream>} \par
5 {\cf21 #include <vector>}\par
6 {\cf21 #include <cmath>}\par
7 {\cf21 #include <string>}\par
8 {\cf21 #include <fstream>}\par
9 {\cf21 #include <iostream>}\par
10 \par
11 {\cf21 #include "CLinhasEquipotenciais.h"}\par
12 {\cf17 using namespace }std;\par
13 \par
14 {\cf17 class }CLinhaPressao2Pocos : {\cf17 public} CLinhasEquipotenciais \{\par
15 {\cf17 public}:\par
17     CLinhaPressao2Pocos({\cf18 double} _r1, {\cf18 double} _r2, {\cf18 double} _r3) : r1\{ _r1 \}, r2\{ _r2 \}, r3\{ _r3 \}\{\}\par
18     {\cf18 double} AreaInvadidaBT({\cf18 double} C);\par
19     {\cf18 double} Pressao({\cf18 double} q,{\cf18 double} u,{\cf18 double} k,{\cf18 double} h,{\cf18 double} Pi);\par
20     {\cf18 double} R({\cf18 double} C);\par
21     vector<double> CalculoDoVetorX({\cf18 double} R, {\cf18 double} C = 0.0);\par
22     vector<double> CalculoDoVetorY({\cf18 double} R, {\cf18 double} C = 0.0);\par
23 \par
24 {\cf17 private}:\par
25     {\cf18 double} X0({\cf18 double} C, {\cf18 double} R);\par
26     {\cf18 double} CalculoDoVetorRaio({\cf18 double} C);\par
27     {\cf18 double} r1, r2, r3;\par
28 \};\par
29 {\cf21 #endif }{\cf20 // CLINHAPRESSAO2POCOS_H}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhaPressao3Pocos1P2I.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao3Pocos1P2I.cpp}
{\xe \v CODIGO/CLinhaPressao3Pocos1P2I.cpp}
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CLinhaPressao3pocos1P2I.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhaPressao3Pocos1P2I.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao3Pocos1P2I.h}
{\xe \v CODIGO/CLinhaPressao3Pocos1P2I.h}
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CLinhasEquipotenciais.h"}\par
{\f2 #include <math.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CLinhaPressao3Pocos1P2I}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CLinhaPressao3Pocos1P2I.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao3Pocos1P2I.h}
{\xe \v CODIGO/CLinhaPressao3Pocos1P2I.h}
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 \par
2 {\cf21 #ifndef CLINHAPRESSAO3POCOS1P2I_H}\par
3 {\cf21 #define CLINHAPRESSAO3POCOS1P2I_H}\par
4 \par
5 {\cf21 #include "CLinhasEquipotenciais.h"}\par
6 {\cf21 #include <math.h>}\par
7 \par
8 {\cf17 using namespace }std;\par
9 \par
10 {\cf17 class }CLinhaPressao3Pocos1P2I : {\cf17 public} CLinhasEquipotenciais \{\par
11 {\cf17 public}:\par
12     CLinhaPressao3Pocos1P2I({\cf18 double} _r1, {\cf18 double} _r2, {\cf18 double} _r3) : r1\{ _r1 \}, r2\{ _r2 \}, r3\{ _r3 \}\{\};\par
13     {\cf18 double} AreaInvadidaBT({\cf18 double} C);\par
14     {\cf18 double} Pressao({\cf18 double} q,{\cf18 double} u,{\cf18 double} k,{\cf18 double} h,{\cf18 double} Pi);\par
15     {\cf18 double} R({\cf18 double} C);\par
16     vector<double> CalculoDoVetorRaio({\cf18 double} C);\par
17     vector<double> CalculoDoVetorX({\cf18 double} R, {\cf18 double} C = 0.0);\par
18     vector<double> CalculoDoVetorY({\cf18 double} R, {\cf18 double} C = 0.0);\par
19 \par
20 {\cf17 protected}:\par
21     {\cf18 double} r1, r2, r3;\par
22 \};\par
23 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhaPressao3Pocos2P1I.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao3Pocos2P1I.cpp}
{\xe \v CODIGO/CLinhaPressao3Pocos2P1I.cpp}
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CLinhaPressao3pocos2P1I.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhaPressao3Pocos2P1I.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao3Pocos2P1I.h}
{\xe \v CODIGO/CLinhaPressao3Pocos2P1I.h}
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CLinhasEquipotenciais.h"}\par
{\f2 #include <math.h>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CLinhaPressao3Pocos2P1I}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CLinhaPressao3Pocos2P1I.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhaPressao3Pocos2P1I.h}
{\xe \v CODIGO/CLinhaPressao3Pocos2P1I.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CLINHAPRESSAO3POCOS2P1I_H}\par
2 {\cf21 #define CLINHAPRESSAO3POCOS2P1I_H}\par
3 \par
4 {\cf21 #include "CLinhasEquipotenciais.h"}\par
5 {\cf21 #include <math.h>}\par
6 \par
7 {\cf17 using namespace }std;\par
8 \par
9 {\cf17 class }CLinhaPressao3Pocos2P1I : {\cf17 public} CLinhasEquipotenciais \{\par
10 {\cf17 public}:\par
11     CLinhaPressao3Pocos2P1I({\cf18 double} _r1, {\cf18 double} _r2, {\cf18 double} _r3) : r1\{ _r1 \}, r2\{ _r2 \}, r3\{ _r3 \}\{\}\par
12 \par
14     {\cf18 double} AreaInvadidaBT({\cf18 double} C);\par
15     {\cf18 double} Pressao({\cf18 double} q,{\cf18 double} u,{\cf18 double} k,{\cf18 double} h,{\cf18 double} Pi);\par
16     {\cf18 double} R({\cf18 double} C);\par
17     vector<double> CalculoDoVetorRaio({\cf18 double} C);\par
18     vector<double> CalculoDoVetorX({\cf18 double} R, {\cf18 double} C = 0.0);\par
19     vector<double> CalculoDoVetorY({\cf18 double} R, {\cf18 double} C = 0.0);\par
20 {\cf17 private}:\par
21     {\cf18 double} r1, r2, r3;\par
22 \};\par
23 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhasEquipotenciais.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhasEquipotenciais.cpp}
{\xe \v CODIGO/CLinhasEquipotenciais.cpp}
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CLinhasEquipotenciais.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CLinhasEquipotenciais.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhasEquipotenciais.h}
{\xe \v CODIGO/CLinhasEquipotenciais.h}
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CLinhasEquipotenciais}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CLinhasEquipotenciais.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CLinhasEquipotenciais.h}
{\xe \v CODIGO/CLinhasEquipotenciais.h}
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CLINHASEQUIPOTENCIAIS_H}\par
2 {\cf21 #define CLINHASEQUIPOTENCIAIS_H}\par
3 \par
4 {\cf21 #include <vector>}\par
5 {\cf17 using namespace }std;\par
6 {\cf17 class }CLinhasEquipotenciais \{\par
7 {\cf17 public}:\par
8     {\cf20 // declara\'E7\'E3o de m\'E9todo virtual puro, o igual a zero indica que vai ser implementada nas filhas}\par
9     {\cf17 virtual} {\cf18 double} AreaInvadidaBT({\cf18 double} C) = 0;\par
10     {\cf17 virtual} {\cf18 double} Pressao({\cf18 double} q, {\cf18 double} u, {\cf18 double} k, {\cf18 double} h, {\cf18 double} Pi) = 0;\par
11     {\cf17 virtual} {\cf18 double} R({\cf18 double} C) = 0;\par
12     {\cf17 virtual} vector<double> CalculoDoVetorX({\cf18 double} raio, {\cf18 double} deslocamento = 0.0) = 0;\par
13     {\cf17 virtual} vector<double>  CalculoDoVetorY({\cf18 double} raio, {\cf18 double} deslocamento = 0.0) = 0;\par
14 {\cf17 protected}:\par
15     {\cf17 const} {\cf18 double} pi = 3.14159265;\par
16     {\cf18 double} r1, r2, r3;\par
17 \};\par
18 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/COleoProduzido.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/COleoProduzido.cpp}
{\xe \v CODIGO/COleoProduzido.cpp}
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "COleoProduzido.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/COleoProduzido.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/COleoProduzido.h}
{\xe \v CODIGO/COleoProduzido.h}
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b COleoProduzido}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
COleoProduzido.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/COleoProduzido.h}
{\xe \v CODIGO/COleoProduzido.h}
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef COLEOPRODUZIDO_H_}\par
2 {\cf21 #define COLEOPRODUZIDO_H_}\par
3 \par
4 {\cf17 class }COleoProduzido \{\par
5 \par
6     {\cf18 double} Np, Tbreak;\par
7 \par
8 {\cf17 public}:\par
9 \par
10     COleoProduzido()\{\};\par
11 \par
12     {\cf18 void} OleoProduzido({\cf18 double} _largura, {\cf18 double} _comprimento, {\cf18 double} _PHI, {\cf18 double} _espessuraTotal, {\cf18 double} _Sor, {\cf18 double} _Swi, {\cf18 double} _effVertTotal, {\cf18 double} _Bo);\par
13     {\cf18 void} TempoBreakThrough({\cf18 double} _VazaoTotal);\par
14     {\cf18 double} getNp();\par
15     {\cf18 double} getTbreak();\par
16 \par
17     ~COleoProduzido()\{\};\par
18     \par
19 \};\par
20 \par
21 {\cf21 #endif }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPoco.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPoco.cpp}
{\xe \v CODIGO/CPoco.cpp}
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CPoco.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPoco.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPoco.h}
{\xe \v CODIGO/CPoco.h}
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CPoco}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPoco.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPoco.h}
{\xe \v CODIGO/CPoco.h}
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CPOCO_H_}\par
2 {\cf21 #define CPOCO_H_}\par
3 \par
4 {\cf17 class }CPoco \{\par
5     \par
6     {\cf17 protected}:\par
7         \par
8         {\cf18 double} x, y, c, Pi;\par
9     \par
10     {\cf17 public}:\par
11         \par
12         CPoco()\{\};\par
13         \par
14         CPoco({\cf18 double} _x, {\cf18 double} _y, {\cf18 double} _c, {\cf18 double} _Pi): x(_x), y(_y), c(_c), Pi(_Pi)\{\};\par
15         \par
16         {\cf20 //metodos set}\par
17         {\cf18 void} setX({\cf18 double} _x);\par
18         {\cf18 void} setY({\cf18 double} _y);\par
19         {\cf18 void} setC({\cf18 double} _c);\par
20         {\cf18 void} setPi({\cf18 double} _pi);\par
21         \par
22         {\cf20 //metodos get}\par
23         \par
24         {\cf18 double} getX();\par
25         {\cf18 double} getY();\par
26         {\cf18 double} getC();\par
27         {\cf18 double} getPi();\par
28         \par
29         ~CPoco()\{\};\par
30     \par
31 \};\par
32 \par
33 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPosicaoAguaInjetada.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetada.cpp}
{\xe \v CODIGO/CPosicaoAguaInjetada.cpp}
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CPosicaoAguaInjetada.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPosicaoAguaInjetada.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetada.h}
{\xe \v CODIGO/CPosicaoAguaInjetada.h}
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CPosicaoAguaInjetada}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPosicaoAguaInjetada.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetada.h}
{\xe \v CODIGO/CPosicaoAguaInjetada.h}
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CPOSICAOAGUAINJETADA_H_}\par
2 {\cf21 #define CPOSICAOAGUAINJETADA_H_}\par
3 \par
4 {\cf21 #include <vector>}\par
5 \par
6 {\cf17 class }CPosicaoAguaInjetada\par
7 \{\par
8     \par
9     {\cf17 protected}:\par
10         \par
11         {\cf18 double} efVertTotal, vazaoTotal, vazaoMed;\par
12         std::vector <double> posicaoc, VazaoInj, efVert, vazaoBt;\par
13             \par
14     {\cf17 public}:\par
15         \par
16         CPosicaoAguaInjetada()\{\};\par
17         \par
18         std::vector <double> VazaoInjecao({\cf18 double} _krw,{\cf18 double} _mw, {\cf18 double} _dp, std::vector <double> _k, {\cf18 double} _bw, {\cf18 double} _comprimento, {\cf18 double} _M, std::vector <double> _posicaoc, std::vector <double> _espessurac);\par
19         std::vector <double> PosicaoAguaInjetada(std::vector <double> _k,{\cf18 double} _largura);\par
20         \par
21         ~CPosicaoAguaInjetada()\{\};  \par
22     \par
23 \}; \par
24 \par
25 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPosicaoAguaInjetadaDykstra.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetadaDykstra.cpp}
{\xe \v CODIGO/CPosicaoAguaInjetadaDykstra.cpp}
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CPosicaoAguaInjetadaDykstra.h"}\par
{\f2 #include <cmath>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPosicaoAguaInjetadaDykstra.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetadaDykstra.h}
{\xe \v CODIGO/CPosicaoAguaInjetadaDykstra.h}
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CPosicaoAguaInjetada.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CPosicaoAguaInjetadaDykstra}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPosicaoAguaInjetadaDykstra.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetadaDykstra.h}
{\xe \v CODIGO/CPosicaoAguaInjetadaDykstra.h}
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CPOSICAOAGUAINJETADADYKSTRA_H_}\par
2 {\cf21 #define CPOSICAOAGUAINJETADADYKSTRA_H_}\par
3 \par
4 {\cf21 #include "CPosicaoAguaInjetada.h"}\par
5 \par
6 {\cf17 class }CPosicaoAguaInjetadaDykstra : CPosicaoAguaInjetada \{\par
7     \par
8     {\cf17 public}:\par
9         \par
10         CPosicaoAguaInjetadaDykstra()\{\};\par
11         \par
12         std::vector <double> VazaoInjecao({\cf18 double} _krw,{\cf18 double} _mw, {\cf18 double} _largura,{\cf18 double} _dp, std::vector <double> _k, {\cf18 double} _bw, {\cf18 double} _comprimento, std::vector <double> _espessurac, {\cf18 double} _M);\par
13         std::vector <double> VazaoBt({\cf18 double} _krw,{\cf18 double} _mw, {\cf18 double} _largura,{\cf18 double} _dp, std::vector <double> _k, {\cf18 double} _bw, {\cf18 double} _comprimento, std::vector <double> _espessurac, {\cf18 double} _M, std::vector<double> posicao);\par
14         std::vector <double> PosicaoAguaInjetada(std::vector <double> _k, {\cf18 double} _L, {\cf18 double} _M);\par
15         std::vector <double> EfVert(std::vector<double> _posicaoc, std::vector<double> _espessurac, {\cf18 double} _largura, {\cf18 double} _espessuraTotal);\par
16         \par
17         {\cf18 double} vazaoMedia(std::vector<double> _vazaoInj, std::vector<double> _vazaoBt);\par
18         \par
19         {\cf18 void} EfVertTotal();\par
20         {\cf18 double} GetEfVertTotal();\par
21         std::vector<double> GetPosicao();\par
22         {\cf18 void} VazaoTotal();\par
23         {\cf18 double} GetVazaoTotal();\par
24         \par
25         ~CPosicaoAguaInjetadaDykstra()\{\};\par
26     \par
27 \};\par
28 \par
29 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPosicaoAguaInjetadaStiles.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetadaStiles.cpp}
{\xe \v CODIGO/CPosicaoAguaInjetadaStiles.cpp}
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CPosicaoAguaInjetadaStiles.h"}\par
{\f2 #include <iostream>}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CPosicaoAguaInjetadaStiles.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetadaStiles.h}
{\xe \v CODIGO/CPosicaoAguaInjetadaStiles.h}
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "CPosicaoAguaInjetada.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CPosicaoAguaInjetadaStiles}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CPosicaoAguaInjetadaStiles.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CPosicaoAguaInjetadaStiles.h}
{\xe \v CODIGO/CPosicaoAguaInjetadaStiles.h}
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CPOSICAOAGUAINJETADASTILES_H_}\par
2 {\cf21 #define CPOSICAOAGUAINJETADASTILES_H_}\par
3 \par
4 {\cf21 #include <vector>}\par
5 \par
6 {\cf21 #include "CPosicaoAguaInjetada.h"}\par
7 \par
8 {\cf17 class }CPosicaoAguaInjetadaStiles : CPosicaoAguaInjetada\{\par
9     \par
10     {\cf17 public}:\par
11         \par
12         CPosicaoAguaInjetadaStiles()\{\};\par
13         \par
14         std::vector <double> VazaoInjecao({\cf18 double} _krw,{\cf18 double} _mw, {\cf18 double} _largura,{\cf18 double} _dp, std::vector <double> _k, {\cf18 double} _bw, {\cf18 double} _comprimento, std::vector <double> _espessurac);\par
15         std::vector <double> PosicaoAguaInjetada(std::vector <double> _k,{\cf18 double} _largura);\par
16         std::vector <double> EfVert(std::vector<double> _posicaoc, std::vector<double> _espessurac, {\cf18 double} _largura, {\cf18 double} _espessuraTotal);\par
17         {\cf18 void} EfVertTotal();\par
18         {\cf18 double} GetEfVertTotal();\par
19         std::vector<double> GetPosicao();\par
20         {\cf18 void} VazaoTotal();\par
21         {\cf18 double} GetVazaoTotal();\par
22     \par
23         ~CPosicaoAguaInjetadaStiles()\{\}; \par
24         \par
25 \};\par
26 \par
27 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CReservatorio.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CReservatorio.cpp}
{\xe \v CODIGO/CReservatorio.cpp}
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CReservatorio.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CReservatorio.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CReservatorio.h}
{\xe \v CODIGO/CReservatorio.h}
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CReservatorio}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CReservatorio.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CReservatorio.h}
{\xe \v CODIGO/CReservatorio.h}
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CReservatorio_H_}\par
2 {\cf21 #define CReservatorio_H_}\par
3 \par
4 {\cf17 class }CReservatorio \{\par
5     \par
6     {\cf17 protected}:\par
7         \par
8         {\cf18 double} kro, krw, sor, phi, swi, M;\par
9         \par
10     {\cf17 public}:\par
11         \par
12         CReservatorio()\{\};\par
13 \par
14         CReservatorio({\cf18 double} _kro, {\cf18 double} _krw, {\cf18 double} _sor, {\cf18 double} _phi, {\cf18 double} _swi, {\cf18 double} _M): kro(_kro), krw(_krw), sor(_sor), phi(_phi), swi(_swi), M(_M)\{\};\par
15         \par
16         {\cf20 // metodos que mudam os valores das variaveis protegidas}\par
17         \par
18         {\cf18 void} SetKro({\cf18 double} _kro);\par
19         {\cf18 void} SetKrw({\cf18 double} _krw);\par
20         {\cf18 void} SetSor({\cf18 double} _sor);\par
21         {\cf18 void} SetPHI({\cf18 double} _phi);\par
22         {\cf18 void} SetSwi({\cf18 double} _swi);\par
23         {\cf18 void} SetM({\cf18 double} _M);\par
24         \par
25         {\cf20 // metodos para adquirir os valores das variaveis da classe}\par
26 \par
27         {\cf18 double} GetKro();\par
28         {\cf18 double} GetKrw();\par
29         {\cf18 double} GetSor();\par
30         {\cf18 double} GetPHI();\par
31         {\cf18 double} GetSwi();\par
32         {\cf18 double} GetM();\par
33         \par
34         ~CReservatorio()\{\}; \par
35     \par
36 \};\par
37 \par
38 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CReservatorioCamadas.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CReservatorioCamadas.cpp}
{\xe \v CODIGO/CReservatorioCamadas.cpp}
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CReservatorioCamadas.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CReservatorioCamadas.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CReservatorioCamadas.h}
{\xe \v CODIGO/CReservatorioCamadas.h}
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include "CReservatorio.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CReservatorioCamadas}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CReservatorioCamadas.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CReservatorioCamadas.h}
{\xe \v CODIGO/CReservatorioCamadas.h}
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CRESERVATORIOCAMADAS_H_}\par
2 {\cf21 #define CRESERVATORIOCAMADAS_H_}\par
3 \par
4 {\cf21 #include <vector>}\par
5 \par
6 {\cf21 #include "CReservatorio.h"}\par
7 \par
8 {\cf17 class }CReservatorioCamadas : CReservatorio\par
9 \{\par
10     \par
11     {\cf17 protected}:\par
12 \par
13         {\cf18 double} bo, bw, dp, mo, mw, sg, M, largura, comprimento, espessuraTotal;\par
14         \par
15         std::vector <double> espessurac, k;\par
16         \par
17         \par
18 \par
19     {\cf17 public}: \par
20     \par
21         CReservatorioCamadas()\{\};\par
22         \par
23         CReservatorioCamadas({\cf18 double} _bo, {\cf18 double} _bw, {\cf18 double} _dp, {\cf18 double} _mo, {\cf18 double} _mw, {\cf18 double} _sg, {\cf18 double} _largura, {\cf18 double} _comprimento, CReservatorio reservatorio):bo(_bo), bw(_bw), dp(_dp), mo(_mo), mw(_mw), sg(_sg), largura(_largura), comprimento(_comprimento)\{ M = (reservatorio.GetKrw()/mw)/(reservatorio.GetKro()/mo);\};\par
24     \par
25         {\cf20 //entrada de dados}\par
26         \par
27         {\cf18 void} SetBo({\cf18 double} _bo);\par
28         {\cf18 void} SetBw({\cf18 double} _bw);\par
29         {\cf18 void} SetDp({\cf18 double} _dp);\par
30         {\cf18 void} SetMo({\cf18 double} _mo);\par
31         {\cf18 void} SetMw({\cf18 double} _mw);\par
32         {\cf18 void} SetSg({\cf18 double} _sg);\par
33         {\cf18 void} SetLargura({\cf18 double} _largura);\par
34         {\cf18 void} SetComprimento({\cf18 double} _comprimento);\par
35         {\cf18 void} SetEspec(std::vector<double> _espessurac);\par
36         {\cf18 void} SetK(std::vector<double> _k);\par
37         \par
38         {\cf20 //metodo}\par
39 \par
40         {\cf18 void} CalcEspessT();\par
41         {\cf18 void} CalcM();\par
42 \par
43         {\cf20 //Saida de dados}\par
44         \par
45         {\cf18 double} GetBo();\par
46         {\cf18 double} GetBw();\par
47         {\cf18 double} GetDp();\par
48         {\cf18 double} GetMo();\par
49         {\cf18 double} GetMw();\par
50         {\cf18 double} GetSg();\par
51         {\cf18 double} GetM();\par
52         {\cf18 double} GetLargura();\par
53         {\cf18 double} GetComprimento();\par
54         {\cf18 double} GetEspessuraTotal();\par
55         std::vector <double> GetEspec();\par
56         std::vector <double> GetK();\par
57     \par
58         ~CReservatorioCamadas()\{\};\par
59         \par
60 \};\par
61 \par
62 {\cf21 #endif}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CSolverInfluxo.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/CSolverInfluxo.cpp}
{\xe \v CODIGO/CSolverInfluxo.cpp}
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <string>}\par
{\f2 #include <filesystem>}\par
{\f2 #include <iostream>}\par
{\f2 #include <fstream>}\par
{\f2 #include <vector>}\par
{\f2 #include "CSolverInfluxo.h"}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/CSolverInfluxo.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CSolverInfluxo.h}
{\xe \v CODIGO/CSolverInfluxo.h}
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <vector>}\par
{\f2 #include <cmath>}\par
{\f2 #include "CReservatorioCamadas.h"}\par
{\f2 #include "CReservatorio.h"}\par
{\f2 #include "CGnuplot.h"}\par
{\f2 #include "CPosicaoAguaInjetadaStiles.h"}\par
{\f2 #include "CPosicaoAguaInjetadaDykstra.h"}\par
{\f2 #include "COleoProduzido.h"}\par
{\f2 #include "CLinhasEquipotenciais.h"}\par
{\f2 #include "CPoco.h"}\par
{\f2 #include "CLinhaPressao2Pocos.h"}\par
{\f2 #include "CLinhaPressao3Pocos1P2I.h"}\par
{\f2 #include "CLinhaPressao3Pocos2P1I.h"}\par
{\f2 #include "CCorey.h"}\par
{\f2 #include "CFluxoFracionario.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Componentes\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CSolverInfluxo}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CSolverInfluxo.h\par \pard\plain 
{\tc\tcl2 \v CODIGO/CSolverInfluxo.h}
{\xe \v CODIGO/CSolverInfluxo.h}
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
V\'E1 para a documenta\'E7\'E3o desse arquivo.{
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 1 {\cf21 #ifndef CSOLVERINFLUXO_H}\par
2 {\cf21 #define CSOLVERINFLUXO_H}\par
3 \par
4 {\cf21 #include <vector>}\par
5 {\cf21 #include <cmath>}\par
6 \par
7 {\cf21 #include "CReservatorioCamadas.h"}\par
8 {\cf21 #include "CReservatorio.h"}\par
9 {\cf21 #include "CGnuplot.h"}\par
10 {\cf21 #include "CPosicaoAguaInjetadaStiles.h"}\par
11 {\cf21 #include "CPosicaoAguaInjetadaDykstra.h"}\par
12 {\cf21 #include "COleoProduzido.h"}\par
13 {\cf21 #include "CLinhasEquipotenciais.h"}\par
14 {\cf21 #include "CPoco.h"}\par
15 {\cf21 #include "CLinhaPressao2Pocos.h"}\par
16 {\cf21 #include "CLinhaPressao3Pocos1P2I.h"}\par
17 {\cf21 #include "CLinhaPressao3Pocos2P1I.h"}\par
18 {\cf21 #include "CCorey.h"}\par
19 {\cf21 #include "CFluxoFracionario.h"}\par
20 \par
21 {\cf17 class }CSolverInfluxo \{\par
22 \par
23 {\cf17 protected}:\par
24 \par
25     CReservatorioCamadas camadas;\par
26     CReservatorio reservatorio;\par
27     CPoco poco;\par
28     CPosicaoAguaInjetadaStiles stiles;\par
29     CPosicaoAguaInjetadaDykstra dykstra;\par
30     COleoProduzido oleo;\par
31     CLinhasEquipotenciais* linhas;\par
32     CGnuplot plot, plot1, plot2, plot3, plot4, plot5;\par
33     std::vector<double> xplot, yplot;\par
34     CCorey corey;\par
35     CFluxoFracionario fluxofracionario;\par
36 \par
37 {\cf17 private}:\par
38 \par
39     {\cf18 void} EntradaDadosReservatorio();\par
40     {\cf18 void} EntradaDadosCamadas();\par
41     {\cf18 void} EntradaDadosRochaReservatorio();\par
42     {\cf18 void} EntradaDadosPoco();\par
43     {\cf18 void} Plot(); \par
44     {\cf18 double} kbarra(std::vector<double> k, std::vector<double> h);\par
45     {\cf18 double} r1({\cf18 double} _c, {\cf18 double} x, {\cf18 double} y);\par
46     {\cf18 double} r2({\cf18 double} _c, {\cf18 double} x, {\cf18 double} y);\par
47     {\cf18 double} r3({\cf18 double} x, {\cf18 double} y);\par
48     {\cf18 void} printResults({\cf18 double} _x, {\cf18 double} _y, {\cf18 double} _c, {\cf18 double} _q, {\cf18 double} _mi, {\cf18 double} _kbarra, {\cf18 double} _h, {\cf18 double} _pi);\par
49     \par
50 \par
51 {\cf17 public}:\par
52 \par
53     CSolverInfluxo()\{\};\par
54 \par
55     {\cf18 void} Simular();         \par
56 \par
57     ~CSolverInfluxo()\{\};    \par
58 \};\par
59 \par
60 {\cf21 #endif }\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Refer\'EAncia do Arquivo CODIGO/main.cpp\par \pard\plain 
{\tc\tcl2 \v CODIGO/main.cpp}
{\xe \v CODIGO/main.cpp}
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <iostream>}\par
{\f2 #include "CSolverInfluxo.h"}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 

{
\pard\plain \s120\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b main} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Fun\'E7\'F5es\par
\pard\plain 
{\xe \v main\:main.cpp}
{\xe \v main.cpp\:main}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int main ()}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s61\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{
\pard\plain \s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid 5            \{\par
6     CSolverInfluxo solver;\par
7     solver.Simular();\par
8 \}\par
}
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Sum\'E1rio\par 
\pard\plain 
{\tc \v Sum\'E1rio}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}
